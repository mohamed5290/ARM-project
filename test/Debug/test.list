
test.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001378  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000f4  080014a8  080014a8  000114a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800159c  0800159c  000200a8  2**0
                  CONTENTS
  4 .ARM          00000000  0800159c  0800159c  000200a8  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800159c  0800159c  000200a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800159c  0800159c  0001159c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015a0  080015a0  000115a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000a8  20000000  080015a4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000002c  200000a8  0800164c  000200a8  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000d4  0800164c  000200d4  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200a8  2**0
                  CONTENTS, READONLY
 12 .debug_info   000022de  00000000  00000000  000200d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000626  00000000  00000000  000223af  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000138  00000000  00000000  000229d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000100  00000000  00000000  00022b10  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00002a2c  00000000  00000000  00022c10  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00001276  00000000  00000000  0002563c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000090e6  00000000  00000000  000268b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0002f998  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c44  00000000  00000000  0002fa14  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	200000a8 	.word	0x200000a8
 800014c:	00000000 	.word	0x00000000
 8000150:	08001490 	.word	0x08001490

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	200000ac 	.word	0x200000ac
 800016c:	08001490 	.word	0x08001490

08000170 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	b084      	sub	sp, #16
 8000174:	af00      	add	r7, sp, #0
 8000176:	6078      	str	r0, [r7, #4]
 8000178:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800017a:	2300      	movs	r3, #0
 800017c:	60fb      	str	r3, [r7, #12]
 800017e:	e015      	b.n	80001ac <array_fill_numbers+0x3c>
    {
        pNumbers[i] = rand() % 1000;
 8000180:	f000 fa3e 	bl	8000600 <rand>
 8000184:	4602      	mov	r2, r0
 8000186:	68fb      	ldr	r3, [r7, #12]
 8000188:	009b      	lsls	r3, r3, #2
 800018a:	6879      	ldr	r1, [r7, #4]
 800018c:	4419      	add	r1, r3
 800018e:	4b0b      	ldr	r3, [pc, #44]	; (80001bc <array_fill_numbers+0x4c>)
 8000190:	fb83 0302 	smull	r0, r3, r3, r2
 8000194:	1198      	asrs	r0, r3, #6
 8000196:	17d3      	asrs	r3, r2, #31
 8000198:	1ac3      	subs	r3, r0, r3
 800019a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800019e:	fb00 f303 	mul.w	r3, r0, r3
 80001a2:	1ad3      	subs	r3, r2, r3
 80001a4:	600b      	str	r3, [r1, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 80001a6:	68fb      	ldr	r3, [r7, #12]
 80001a8:	3301      	adds	r3, #1
 80001aa:	60fb      	str	r3, [r7, #12]
 80001ac:	68fa      	ldr	r2, [r7, #12]
 80001ae:	683b      	ldr	r3, [r7, #0]
 80001b0:	429a      	cmp	r2, r3
 80001b2:	d3e5      	bcc.n	8000180 <array_fill_numbers+0x10>
    }

}
 80001b4:	bf00      	nop
 80001b6:	3710      	adds	r7, #16
 80001b8:	46bd      	mov	sp, r7
 80001ba:	bd80      	pop	{r7, pc}
 80001bc:	10624dd3 	.word	0x10624dd3

080001c0 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80001c0:	b580      	push	{r7, lr}
 80001c2:	b086      	sub	sp, #24
 80001c4:	af00      	add	r7, sp, #0
 80001c6:	60f8      	str	r0, [r7, #12]
 80001c8:	60b9      	str	r1, [r7, #8]
 80001ca:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80001cc:	6879      	ldr	r1, [r7, #4]
 80001ce:	480e      	ldr	r0, [pc, #56]	; (8000208 <display_numbers+0x48>)
 80001d0:	f000 f9ea 	bl	80005a8 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80001d4:	2300      	movs	r3, #0
 80001d6:	617b      	str	r3, [r7, #20]
 80001d8:	e00b      	b.n	80001f2 <display_numbers+0x32>
    {
        printf("%5d  ",pNumbers[i]);
 80001da:	697b      	ldr	r3, [r7, #20]
 80001dc:	009b      	lsls	r3, r3, #2
 80001de:	68fa      	ldr	r2, [r7, #12]
 80001e0:	4413      	add	r3, r2
 80001e2:	681b      	ldr	r3, [r3, #0]
 80001e4:	4619      	mov	r1, r3
 80001e6:	4809      	ldr	r0, [pc, #36]	; (800020c <display_numbers+0x4c>)
 80001e8:	f000 f9de 	bl	80005a8 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 80001ec:	697b      	ldr	r3, [r7, #20]
 80001ee:	3301      	adds	r3, #1
 80001f0:	617b      	str	r3, [r7, #20]
 80001f2:	697a      	ldr	r2, [r7, #20]
 80001f4:	68bb      	ldr	r3, [r7, #8]
 80001f6:	429a      	cmp	r2, r3
 80001f8:	d3ef      	bcc.n	80001da <display_numbers+0x1a>
    }

    printf("\n");
 80001fa:	200a      	movs	r0, #10
 80001fc:	f000 f9ec 	bl	80005d8 <putchar>
}
 8000200:	bf00      	nop
 8000202:	3718      	adds	r7, #24
 8000204:	46bd      	mov	sp, r7
 8000206:	bd80      	pop	{r7, pc}
 8000208:	080014a8 	.word	0x080014a8
 800020c:	080014ac 	.word	0x080014ac

08000210 <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 8000210:	b480      	push	{r7}
 8000212:	b085      	sub	sp, #20
 8000214:	af00      	add	r7, sp, #0
 8000216:	6078      	str	r0, [r7, #4]
 8000218:	6039      	str	r1, [r7, #0]
     int temp=*x;
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	681b      	ldr	r3, [r3, #0]
 800021e:	60fb      	str	r3, [r7, #12]
     *x=*y;
 8000220:	683b      	ldr	r3, [r7, #0]
 8000222:	681a      	ldr	r2, [r3, #0]
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	601a      	str	r2, [r3, #0]
     *y=temp;
 8000228:	683b      	ldr	r3, [r7, #0]
 800022a:	68fa      	ldr	r2, [r7, #12]
 800022c:	601a      	str	r2, [r3, #0]

}
 800022e:	bf00      	nop
 8000230:	3714      	adds	r7, #20
 8000232:	46bd      	mov	sp, r7
 8000234:	bc80      	pop	{r7}
 8000236:	4770      	bx	lr

08000238 <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 8000238:	b580      	push	{r7, lr}
 800023a:	b086      	sub	sp, #24
 800023c:	af00      	add	r7, sp, #0
 800023e:	6078      	str	r0, [r7, #4]
 8000240:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000242:	2300      	movs	r3, #0
 8000244:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 8000246:	2300      	movs	r3, #0
 8000248:	617b      	str	r3, [r7, #20]
 800024a:	e02f      	b.n	80002ac <bubble_sort+0x74>
    {
        flag=0;
 800024c:	2300      	movs	r3, #0
 800024e:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000250:	2300      	movs	r3, #0
 8000252:	613b      	str	r3, [r7, #16]
 8000254:	e01d      	b.n	8000292 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 8000256:	693b      	ldr	r3, [r7, #16]
 8000258:	009b      	lsls	r3, r3, #2
 800025a:	687a      	ldr	r2, [r7, #4]
 800025c:	4413      	add	r3, r2
 800025e:	681a      	ldr	r2, [r3, #0]
 8000260:	693b      	ldr	r3, [r7, #16]
 8000262:	3301      	adds	r3, #1
 8000264:	009b      	lsls	r3, r3, #2
 8000266:	6879      	ldr	r1, [r7, #4]
 8000268:	440b      	add	r3, r1
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	429a      	cmp	r2, r3
 800026e:	dd0d      	ble.n	800028c <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 8000270:	693b      	ldr	r3, [r7, #16]
 8000272:	009b      	lsls	r3, r3, #2
 8000274:	687a      	ldr	r2, [r7, #4]
 8000276:	18d0      	adds	r0, r2, r3
 8000278:	693b      	ldr	r3, [r7, #16]
 800027a:	3301      	adds	r3, #1
 800027c:	009b      	lsls	r3, r3, #2
 800027e:	687a      	ldr	r2, [r7, #4]
 8000280:	4413      	add	r3, r2
 8000282:	4619      	mov	r1, r3
 8000284:	f7ff ffc4 	bl	8000210 <swap_numbers>
                flag=1;
 8000288:	2301      	movs	r3, #1
 800028a:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 800028c:	693b      	ldr	r3, [r7, #16]
 800028e:	3301      	adds	r3, #1
 8000290:	613b      	str	r3, [r7, #16]
 8000292:	697b      	ldr	r3, [r7, #20]
 8000294:	683a      	ldr	r2, [r7, #0]
 8000296:	1ad3      	subs	r3, r2, r3
 8000298:	1e5a      	subs	r2, r3, #1
 800029a:	693b      	ldr	r3, [r7, #16]
 800029c:	429a      	cmp	r2, r3
 800029e:	d8da      	bhi.n	8000256 <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 80002a0:	68fb      	ldr	r3, [r7, #12]
 80002a2:	2b00      	cmp	r3, #0
 80002a4:	d008      	beq.n	80002b8 <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 80002a6:	697b      	ldr	r3, [r7, #20]
 80002a8:	3301      	adds	r3, #1
 80002aa:	617b      	str	r3, [r7, #20]
 80002ac:	683b      	ldr	r3, [r7, #0]
 80002ae:	1e5a      	subs	r2, r3, #1
 80002b0:	697b      	ldr	r3, [r7, #20]
 80002b2:	429a      	cmp	r2, r3
 80002b4:	d8ca      	bhi.n	800024c <bubble_sort+0x14>
            break;
    }
}
 80002b6:	e000      	b.n	80002ba <bubble_sort+0x82>
            break;
 80002b8:	bf00      	nop
}
 80002ba:	bf00      	nop
 80002bc:	3718      	adds	r7, #24
 80002be:	46bd      	mov	sp, r7
 80002c0:	bd80      	pop	{r7, pc}

080002c2 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80002c2:	b480      	push	{r7}
 80002c4:	b087      	sub	sp, #28
 80002c6:	af00      	add	r7, sp, #0
 80002c8:	6078      	str	r0, [r7, #4]
 80002ca:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80002cc:	2301      	movs	r3, #1
 80002ce:	617b      	str	r3, [r7, #20]
 80002d0:	e02c      	b.n	800032c <insertion_sort+0x6a>
     {
         j=i-1;
 80002d2:	697b      	ldr	r3, [r7, #20]
 80002d4:	3b01      	subs	r3, #1
 80002d6:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 80002d8:	697b      	ldr	r3, [r7, #20]
 80002da:	009b      	lsls	r3, r3, #2
 80002dc:	687a      	ldr	r2, [r7, #4]
 80002de:	4413      	add	r3, r2
 80002e0:	681b      	ldr	r3, [r3, #0]
 80002e2:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 80002e4:	e00d      	b.n	8000302 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 80002e6:	693b      	ldr	r3, [r7, #16]
 80002e8:	009b      	lsls	r3, r3, #2
 80002ea:	687a      	ldr	r2, [r7, #4]
 80002ec:	441a      	add	r2, r3
 80002ee:	693b      	ldr	r3, [r7, #16]
 80002f0:	3301      	adds	r3, #1
 80002f2:	009b      	lsls	r3, r3, #2
 80002f4:	6879      	ldr	r1, [r7, #4]
 80002f6:	440b      	add	r3, r1
 80002f8:	6812      	ldr	r2, [r2, #0]
 80002fa:	601a      	str	r2, [r3, #0]
             j--;
 80002fc:	693b      	ldr	r3, [r7, #16]
 80002fe:	3b01      	subs	r3, #1
 8000300:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 8000302:	693b      	ldr	r3, [r7, #16]
 8000304:	2b00      	cmp	r3, #0
 8000306:	db07      	blt.n	8000318 <insertion_sort+0x56>
 8000308:	693b      	ldr	r3, [r7, #16]
 800030a:	009b      	lsls	r3, r3, #2
 800030c:	687a      	ldr	r2, [r7, #4]
 800030e:	4413      	add	r3, r2
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	68fa      	ldr	r2, [r7, #12]
 8000314:	429a      	cmp	r2, r3
 8000316:	dbe6      	blt.n	80002e6 <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 8000318:	693b      	ldr	r3, [r7, #16]
 800031a:	3301      	adds	r3, #1
 800031c:	009b      	lsls	r3, r3, #2
 800031e:	687a      	ldr	r2, [r7, #4]
 8000320:	4413      	add	r3, r2
 8000322:	68fa      	ldr	r2, [r7, #12]
 8000324:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 8000326:	697b      	ldr	r3, [r7, #20]
 8000328:	3301      	adds	r3, #1
 800032a:	617b      	str	r3, [r7, #20]
 800032c:	697b      	ldr	r3, [r7, #20]
 800032e:	683a      	ldr	r2, [r7, #0]
 8000330:	429a      	cmp	r2, r3
 8000332:	d8ce      	bhi.n	80002d2 <insertion_sort+0x10>
     }


}
 8000334:	bf00      	nop
 8000336:	371c      	adds	r7, #28
 8000338:	46bd      	mov	sp, r7
 800033a:	bc80      	pop	{r7}
 800033c:	4770      	bx	lr
	...

08000340 <main>:



int main()
{
 8000340:	b580      	push	{r7, lr}
 8000342:	b082      	sub	sp, #8
 8000344:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 8000346:	2311      	movs	r3, #17
 8000348:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800034a:	6879      	ldr	r1, [r7, #4]
 800034c:	4813      	ldr	r0, [pc, #76]	; (800039c <main+0x5c>)
 800034e:	f7ff ff0f 	bl	8000170 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 8000352:	4a13      	ldr	r2, [pc, #76]	; (80003a0 <main+0x60>)
 8000354:	6879      	ldr	r1, [r7, #4]
 8000356:	4811      	ldr	r0, [pc, #68]	; (800039c <main+0x5c>)
 8000358:	f7ff ff32 	bl	80001c0 <display_numbers>

    bubble_sort(numbers,len);
 800035c:	6879      	ldr	r1, [r7, #4]
 800035e:	480f      	ldr	r0, [pc, #60]	; (800039c <main+0x5c>)
 8000360:	f7ff ff6a 	bl	8000238 <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000364:	4a0f      	ldr	r2, [pc, #60]	; (80003a4 <main+0x64>)
 8000366:	6879      	ldr	r1, [r7, #4]
 8000368:	480c      	ldr	r0, [pc, #48]	; (800039c <main+0x5c>)
 800036a:	f7ff ff29 	bl	80001c0 <display_numbers>

    array_fill_numbers(numbers,len);
 800036e:	6879      	ldr	r1, [r7, #4]
 8000370:	480a      	ldr	r0, [pc, #40]	; (800039c <main+0x5c>)
 8000372:	f7ff fefd 	bl	8000170 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 8000376:	4a0c      	ldr	r2, [pc, #48]	; (80003a8 <main+0x68>)
 8000378:	6879      	ldr	r1, [r7, #4]
 800037a:	4808      	ldr	r0, [pc, #32]	; (800039c <main+0x5c>)
 800037c:	f7ff ff20 	bl	80001c0 <display_numbers>

    insertion_sort(numbers,len);
 8000380:	6879      	ldr	r1, [r7, #4]
 8000382:	4806      	ldr	r0, [pc, #24]	; (800039c <main+0x5c>)
 8000384:	f7ff ff9d 	bl	80002c2 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 8000388:	4a08      	ldr	r2, [pc, #32]	; (80003ac <main+0x6c>)
 800038a:	6879      	ldr	r1, [r7, #4]
 800038c:	4803      	ldr	r0, [pc, #12]	; (800039c <main+0x5c>)
 800038e:	f7ff ff17 	bl	80001c0 <display_numbers>



    return 0;
 8000392:	2300      	movs	r3, #0
}
 8000394:	4618      	mov	r0, r3
 8000396:	3708      	adds	r7, #8
 8000398:	46bd      	mov	sp, r7
 800039a:	bd80      	pop	{r7, pc}
 800039c:	20000000 	.word	0x20000000
 80003a0:	080014b4 	.word	0x080014b4
 80003a4:	080014c8 	.word	0x080014c8
 80003a8:	080014dc 	.word	0x080014dc
 80003ac:	080014f0 	.word	0x080014f0

080003b0 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003b0:	b580      	push	{r7, lr}
 80003b2:	b086      	sub	sp, #24
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	60f8      	str	r0, [r7, #12]
 80003b8:	60b9      	str	r1, [r7, #8]
 80003ba:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003bc:	2300      	movs	r3, #0
 80003be:	617b      	str	r3, [r7, #20]
 80003c0:	e00a      	b.n	80003d8 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003c2:	f3af 8000 	nop.w
 80003c6:	4601      	mov	r1, r0
 80003c8:	68bb      	ldr	r3, [r7, #8]
 80003ca:	1c5a      	adds	r2, r3, #1
 80003cc:	60ba      	str	r2, [r7, #8]
 80003ce:	b2ca      	uxtb	r2, r1
 80003d0:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003d2:	697b      	ldr	r3, [r7, #20]
 80003d4:	3301      	adds	r3, #1
 80003d6:	617b      	str	r3, [r7, #20]
 80003d8:	697a      	ldr	r2, [r7, #20]
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	429a      	cmp	r2, r3
 80003de:	dbf0      	blt.n	80003c2 <_read+0x12>
	}

return len;
 80003e0:	687b      	ldr	r3, [r7, #4]
}
 80003e2:	4618      	mov	r0, r3
 80003e4:	3718      	adds	r7, #24
 80003e6:	46bd      	mov	sp, r7
 80003e8:	bd80      	pop	{r7, pc}

080003ea <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003ea:	b580      	push	{r7, lr}
 80003ec:	b086      	sub	sp, #24
 80003ee:	af00      	add	r7, sp, #0
 80003f0:	60f8      	str	r0, [r7, #12]
 80003f2:	60b9      	str	r1, [r7, #8]
 80003f4:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003f6:	2300      	movs	r3, #0
 80003f8:	617b      	str	r3, [r7, #20]
 80003fa:	e009      	b.n	8000410 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80003fc:	68bb      	ldr	r3, [r7, #8]
 80003fe:	1c5a      	adds	r2, r3, #1
 8000400:	60ba      	str	r2, [r7, #8]
 8000402:	781b      	ldrb	r3, [r3, #0]
 8000404:	4618      	mov	r0, r3
 8000406:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800040a:	697b      	ldr	r3, [r7, #20]
 800040c:	3301      	adds	r3, #1
 800040e:	617b      	str	r3, [r7, #20]
 8000410:	697a      	ldr	r2, [r7, #20]
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	429a      	cmp	r2, r3
 8000416:	dbf1      	blt.n	80003fc <_write+0x12>
	}
	return len;
 8000418:	687b      	ldr	r3, [r7, #4]
}
 800041a:	4618      	mov	r0, r3
 800041c:	3718      	adds	r7, #24
 800041e:	46bd      	mov	sp, r7
 8000420:	bd80      	pop	{r7, pc}

08000422 <_close>:

int _close(int file)
{
 8000422:	b480      	push	{r7}
 8000424:	b083      	sub	sp, #12
 8000426:	af00      	add	r7, sp, #0
 8000428:	6078      	str	r0, [r7, #4]
	return -1;
 800042a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800042e:	4618      	mov	r0, r3
 8000430:	370c      	adds	r7, #12
 8000432:	46bd      	mov	sp, r7
 8000434:	bc80      	pop	{r7}
 8000436:	4770      	bx	lr

08000438 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000438:	b480      	push	{r7}
 800043a:	b083      	sub	sp, #12
 800043c:	af00      	add	r7, sp, #0
 800043e:	6078      	str	r0, [r7, #4]
 8000440:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000442:	683b      	ldr	r3, [r7, #0]
 8000444:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000448:	605a      	str	r2, [r3, #4]
	return 0;
 800044a:	2300      	movs	r3, #0
}
 800044c:	4618      	mov	r0, r3
 800044e:	370c      	adds	r7, #12
 8000450:	46bd      	mov	sp, r7
 8000452:	bc80      	pop	{r7}
 8000454:	4770      	bx	lr

08000456 <_isatty>:

int _isatty(int file)
{
 8000456:	b480      	push	{r7}
 8000458:	b083      	sub	sp, #12
 800045a:	af00      	add	r7, sp, #0
 800045c:	6078      	str	r0, [r7, #4]
	return 1;
 800045e:	2301      	movs	r3, #1
}
 8000460:	4618      	mov	r0, r3
 8000462:	370c      	adds	r7, #12
 8000464:	46bd      	mov	sp, r7
 8000466:	bc80      	pop	{r7}
 8000468:	4770      	bx	lr

0800046a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800046a:	b480      	push	{r7}
 800046c:	b085      	sub	sp, #20
 800046e:	af00      	add	r7, sp, #0
 8000470:	60f8      	str	r0, [r7, #12]
 8000472:	60b9      	str	r1, [r7, #8]
 8000474:	607a      	str	r2, [r7, #4]
	return 0;
 8000476:	2300      	movs	r3, #0
}
 8000478:	4618      	mov	r0, r3
 800047a:	3714      	adds	r7, #20
 800047c:	46bd      	mov	sp, r7
 800047e:	bc80      	pop	{r7}
 8000480:	4770      	bx	lr
	...

08000484 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000484:	b580      	push	{r7, lr}
 8000486:	b086      	sub	sp, #24
 8000488:	af00      	add	r7, sp, #0
 800048a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800048c:	4a14      	ldr	r2, [pc, #80]	; (80004e0 <_sbrk+0x5c>)
 800048e:	4b15      	ldr	r3, [pc, #84]	; (80004e4 <_sbrk+0x60>)
 8000490:	1ad3      	subs	r3, r2, r3
 8000492:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000494:	697b      	ldr	r3, [r7, #20]
 8000496:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000498:	4b13      	ldr	r3, [pc, #76]	; (80004e8 <_sbrk+0x64>)
 800049a:	681b      	ldr	r3, [r3, #0]
 800049c:	2b00      	cmp	r3, #0
 800049e:	d102      	bne.n	80004a6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004a0:	4b11      	ldr	r3, [pc, #68]	; (80004e8 <_sbrk+0x64>)
 80004a2:	4a12      	ldr	r2, [pc, #72]	; (80004ec <_sbrk+0x68>)
 80004a4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004a6:	4b10      	ldr	r3, [pc, #64]	; (80004e8 <_sbrk+0x64>)
 80004a8:	681a      	ldr	r2, [r3, #0]
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	4413      	add	r3, r2
 80004ae:	693a      	ldr	r2, [r7, #16]
 80004b0:	429a      	cmp	r2, r3
 80004b2:	d207      	bcs.n	80004c4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004b4:	f000 f846 	bl	8000544 <__errno>
 80004b8:	4602      	mov	r2, r0
 80004ba:	230c      	movs	r3, #12
 80004bc:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 80004be:	f04f 33ff 	mov.w	r3, #4294967295
 80004c2:	e009      	b.n	80004d8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004c4:	4b08      	ldr	r3, [pc, #32]	; (80004e8 <_sbrk+0x64>)
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004ca:	4b07      	ldr	r3, [pc, #28]	; (80004e8 <_sbrk+0x64>)
 80004cc:	681a      	ldr	r2, [r3, #0]
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	4413      	add	r3, r2
 80004d2:	4a05      	ldr	r2, [pc, #20]	; (80004e8 <_sbrk+0x64>)
 80004d4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004d6:	68fb      	ldr	r3, [r7, #12]
}
 80004d8:	4618      	mov	r0, r3
 80004da:	3718      	adds	r7, #24
 80004dc:	46bd      	mov	sp, r7
 80004de:	bd80      	pop	{r7, pc}
 80004e0:	20005000 	.word	0x20005000
 80004e4:	00000400 	.word	0x00000400
 80004e8:	200000c4 	.word	0x200000c4
 80004ec:	200000d8 	.word	0x200000d8

080004f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004f0:	480d      	ldr	r0, [pc, #52]	; (8000528 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004f2:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80004f4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004f8:	480c      	ldr	r0, [pc, #48]	; (800052c <LoopForever+0x6>)
  ldr r1, =_edata
 80004fa:	490d      	ldr	r1, [pc, #52]	; (8000530 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004fc:	4a0d      	ldr	r2, [pc, #52]	; (8000534 <LoopForever+0xe>)
  movs r3, #0
 80004fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000500:	e002      	b.n	8000508 <LoopCopyDataInit>

08000502 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000502:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000504:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000506:	3304      	adds	r3, #4

08000508 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000508:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800050a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800050c:	d3f9      	bcc.n	8000502 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800050e:	4a0a      	ldr	r2, [pc, #40]	; (8000538 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000510:	4c0a      	ldr	r4, [pc, #40]	; (800053c <LoopForever+0x16>)
  movs r3, #0
 8000512:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000514:	e001      	b.n	800051a <LoopFillZerobss>

08000516 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000516:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000518:	3204      	adds	r2, #4

0800051a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800051a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800051c:	d3fb      	bcc.n	8000516 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800051e:	f000 f817 	bl	8000550 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000522:	f7ff ff0d 	bl	8000340 <main>

08000526 <LoopForever>:

LoopForever:
    b LoopForever
 8000526:	e7fe      	b.n	8000526 <LoopForever>
  ldr   r0, =_estack
 8000528:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800052c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000530:	200000a8 	.word	0x200000a8
  ldr r2, =_sidata
 8000534:	080015a4 	.word	0x080015a4
  ldr r2, =_sbss
 8000538:	200000a8 	.word	0x200000a8
  ldr r4, =_ebss
 800053c:	200000d4 	.word	0x200000d4

08000540 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000540:	e7fe      	b.n	8000540 <ADC1_2_IRQHandler>
	...

08000544 <__errno>:
 8000544:	4b01      	ldr	r3, [pc, #4]	; (800054c <__errno+0x8>)
 8000546:	6818      	ldr	r0, [r3, #0]
 8000548:	4770      	bx	lr
 800054a:	bf00      	nop
 800054c:	20000044 	.word	0x20000044

08000550 <__libc_init_array>:
 8000550:	b570      	push	{r4, r5, r6, lr}
 8000552:	2500      	movs	r5, #0
 8000554:	4e0c      	ldr	r6, [pc, #48]	; (8000588 <__libc_init_array+0x38>)
 8000556:	4c0d      	ldr	r4, [pc, #52]	; (800058c <__libc_init_array+0x3c>)
 8000558:	1ba4      	subs	r4, r4, r6
 800055a:	10a4      	asrs	r4, r4, #2
 800055c:	42a5      	cmp	r5, r4
 800055e:	d109      	bne.n	8000574 <__libc_init_array+0x24>
 8000560:	f000 ff96 	bl	8001490 <_init>
 8000564:	2500      	movs	r5, #0
 8000566:	4e0a      	ldr	r6, [pc, #40]	; (8000590 <__libc_init_array+0x40>)
 8000568:	4c0a      	ldr	r4, [pc, #40]	; (8000594 <__libc_init_array+0x44>)
 800056a:	1ba4      	subs	r4, r4, r6
 800056c:	10a4      	asrs	r4, r4, #2
 800056e:	42a5      	cmp	r5, r4
 8000570:	d105      	bne.n	800057e <__libc_init_array+0x2e>
 8000572:	bd70      	pop	{r4, r5, r6, pc}
 8000574:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000578:	4798      	blx	r3
 800057a:	3501      	adds	r5, #1
 800057c:	e7ee      	b.n	800055c <__libc_init_array+0xc>
 800057e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000582:	4798      	blx	r3
 8000584:	3501      	adds	r5, #1
 8000586:	e7f2      	b.n	800056e <__libc_init_array+0x1e>
 8000588:	0800159c 	.word	0x0800159c
 800058c:	0800159c 	.word	0x0800159c
 8000590:	0800159c 	.word	0x0800159c
 8000594:	080015a0 	.word	0x080015a0

08000598 <memset>:
 8000598:	4603      	mov	r3, r0
 800059a:	4402      	add	r2, r0
 800059c:	4293      	cmp	r3, r2
 800059e:	d100      	bne.n	80005a2 <memset+0xa>
 80005a0:	4770      	bx	lr
 80005a2:	f803 1b01 	strb.w	r1, [r3], #1
 80005a6:	e7f9      	b.n	800059c <memset+0x4>

080005a8 <iprintf>:
 80005a8:	b40f      	push	{r0, r1, r2, r3}
 80005aa:	4b0a      	ldr	r3, [pc, #40]	; (80005d4 <iprintf+0x2c>)
 80005ac:	b513      	push	{r0, r1, r4, lr}
 80005ae:	681c      	ldr	r4, [r3, #0]
 80005b0:	b124      	cbz	r4, 80005bc <iprintf+0x14>
 80005b2:	69a3      	ldr	r3, [r4, #24]
 80005b4:	b913      	cbnz	r3, 80005bc <iprintf+0x14>
 80005b6:	4620      	mov	r0, r4
 80005b8:	f000 f896 	bl	80006e8 <__sinit>
 80005bc:	ab05      	add	r3, sp, #20
 80005be:	9a04      	ldr	r2, [sp, #16]
 80005c0:	68a1      	ldr	r1, [r4, #8]
 80005c2:	4620      	mov	r0, r4
 80005c4:	9301      	str	r3, [sp, #4]
 80005c6:	f000 f9ef 	bl	80009a8 <_vfiprintf_r>
 80005ca:	b002      	add	sp, #8
 80005cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005d0:	b004      	add	sp, #16
 80005d2:	4770      	bx	lr
 80005d4:	20000044 	.word	0x20000044

080005d8 <putchar>:
 80005d8:	b538      	push	{r3, r4, r5, lr}
 80005da:	4b08      	ldr	r3, [pc, #32]	; (80005fc <putchar+0x24>)
 80005dc:	4605      	mov	r5, r0
 80005de:	681c      	ldr	r4, [r3, #0]
 80005e0:	b124      	cbz	r4, 80005ec <putchar+0x14>
 80005e2:	69a3      	ldr	r3, [r4, #24]
 80005e4:	b913      	cbnz	r3, 80005ec <putchar+0x14>
 80005e6:	4620      	mov	r0, r4
 80005e8:	f000 f87e 	bl	80006e8 <__sinit>
 80005ec:	68a2      	ldr	r2, [r4, #8]
 80005ee:	4629      	mov	r1, r5
 80005f0:	4620      	mov	r0, r4
 80005f2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80005f6:	f000 bc75 	b.w	8000ee4 <_putc_r>
 80005fa:	bf00      	nop
 80005fc:	20000044 	.word	0x20000044

08000600 <rand>:
 8000600:	b538      	push	{r3, r4, r5, lr}
 8000602:	4b13      	ldr	r3, [pc, #76]	; (8000650 <rand+0x50>)
 8000604:	681c      	ldr	r4, [r3, #0]
 8000606:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000608:	b97b      	cbnz	r3, 800062a <rand+0x2a>
 800060a:	2018      	movs	r0, #24
 800060c:	f000 f8f6 	bl	80007fc <malloc>
 8000610:	4a10      	ldr	r2, [pc, #64]	; (8000654 <rand+0x54>)
 8000612:	4b11      	ldr	r3, [pc, #68]	; (8000658 <rand+0x58>)
 8000614:	63a0      	str	r0, [r4, #56]	; 0x38
 8000616:	e9c0 2300 	strd	r2, r3, [r0]
 800061a:	4b10      	ldr	r3, [pc, #64]	; (800065c <rand+0x5c>)
 800061c:	2201      	movs	r2, #1
 800061e:	6083      	str	r3, [r0, #8]
 8000620:	230b      	movs	r3, #11
 8000622:	8183      	strh	r3, [r0, #12]
 8000624:	2300      	movs	r3, #0
 8000626:	e9c0 2304 	strd	r2, r3, [r0, #16]
 800062a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 800062c:	480c      	ldr	r0, [pc, #48]	; (8000660 <rand+0x60>)
 800062e:	690a      	ldr	r2, [r1, #16]
 8000630:	694b      	ldr	r3, [r1, #20]
 8000632:	4350      	muls	r0, r2
 8000634:	4c0b      	ldr	r4, [pc, #44]	; (8000664 <rand+0x64>)
 8000636:	fb04 0003 	mla	r0, r4, r3, r0
 800063a:	fba2 2304 	umull	r2, r3, r2, r4
 800063e:	4403      	add	r3, r0
 8000640:	1c54      	adds	r4, r2, #1
 8000642:	f143 0500 	adc.w	r5, r3, #0
 8000646:	e9c1 4504 	strd	r4, r5, [r1, #16]
 800064a:	f025 4000 	bic.w	r0, r5, #2147483648	; 0x80000000
 800064e:	bd38      	pop	{r3, r4, r5, pc}
 8000650:	20000044 	.word	0x20000044
 8000654:	abcd330e 	.word	0xabcd330e
 8000658:	e66d1234 	.word	0xe66d1234
 800065c:	0005deec 	.word	0x0005deec
 8000660:	5851f42d 	.word	0x5851f42d
 8000664:	4c957f2d 	.word	0x4c957f2d

08000668 <std>:
 8000668:	2300      	movs	r3, #0
 800066a:	b510      	push	{r4, lr}
 800066c:	4604      	mov	r4, r0
 800066e:	e9c0 3300 	strd	r3, r3, [r0]
 8000672:	6083      	str	r3, [r0, #8]
 8000674:	8181      	strh	r1, [r0, #12]
 8000676:	6643      	str	r3, [r0, #100]	; 0x64
 8000678:	81c2      	strh	r2, [r0, #14]
 800067a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800067e:	6183      	str	r3, [r0, #24]
 8000680:	4619      	mov	r1, r3
 8000682:	2208      	movs	r2, #8
 8000684:	305c      	adds	r0, #92	; 0x5c
 8000686:	f7ff ff87 	bl	8000598 <memset>
 800068a:	4b05      	ldr	r3, [pc, #20]	; (80006a0 <std+0x38>)
 800068c:	6224      	str	r4, [r4, #32]
 800068e:	6263      	str	r3, [r4, #36]	; 0x24
 8000690:	4b04      	ldr	r3, [pc, #16]	; (80006a4 <std+0x3c>)
 8000692:	62a3      	str	r3, [r4, #40]	; 0x28
 8000694:	4b04      	ldr	r3, [pc, #16]	; (80006a8 <std+0x40>)
 8000696:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000698:	4b04      	ldr	r3, [pc, #16]	; (80006ac <std+0x44>)
 800069a:	6323      	str	r3, [r4, #48]	; 0x30
 800069c:	bd10      	pop	{r4, pc}
 800069e:	bf00      	nop
 80006a0:	08000f71 	.word	0x08000f71
 80006a4:	08000f93 	.word	0x08000f93
 80006a8:	08000fcb 	.word	0x08000fcb
 80006ac:	08000fef 	.word	0x08000fef

080006b0 <_cleanup_r>:
 80006b0:	4901      	ldr	r1, [pc, #4]	; (80006b8 <_cleanup_r+0x8>)
 80006b2:	f000 b885 	b.w	80007c0 <_fwalk_reent>
 80006b6:	bf00      	nop
 80006b8:	080012c9 	.word	0x080012c9

080006bc <__sfmoreglue>:
 80006bc:	b570      	push	{r4, r5, r6, lr}
 80006be:	2568      	movs	r5, #104	; 0x68
 80006c0:	1e4a      	subs	r2, r1, #1
 80006c2:	4355      	muls	r5, r2
 80006c4:	460e      	mov	r6, r1
 80006c6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80006ca:	f000 f8eb 	bl	80008a4 <_malloc_r>
 80006ce:	4604      	mov	r4, r0
 80006d0:	b140      	cbz	r0, 80006e4 <__sfmoreglue+0x28>
 80006d2:	2100      	movs	r1, #0
 80006d4:	e9c0 1600 	strd	r1, r6, [r0]
 80006d8:	300c      	adds	r0, #12
 80006da:	60a0      	str	r0, [r4, #8]
 80006dc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80006e0:	f7ff ff5a 	bl	8000598 <memset>
 80006e4:	4620      	mov	r0, r4
 80006e6:	bd70      	pop	{r4, r5, r6, pc}

080006e8 <__sinit>:
 80006e8:	6983      	ldr	r3, [r0, #24]
 80006ea:	b510      	push	{r4, lr}
 80006ec:	4604      	mov	r4, r0
 80006ee:	bb33      	cbnz	r3, 800073e <__sinit+0x56>
 80006f0:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80006f4:	6503      	str	r3, [r0, #80]	; 0x50
 80006f6:	4b12      	ldr	r3, [pc, #72]	; (8000740 <__sinit+0x58>)
 80006f8:	4a12      	ldr	r2, [pc, #72]	; (8000744 <__sinit+0x5c>)
 80006fa:	681b      	ldr	r3, [r3, #0]
 80006fc:	6282      	str	r2, [r0, #40]	; 0x28
 80006fe:	4298      	cmp	r0, r3
 8000700:	bf04      	itt	eq
 8000702:	2301      	moveq	r3, #1
 8000704:	6183      	streq	r3, [r0, #24]
 8000706:	f000 f81f 	bl	8000748 <__sfp>
 800070a:	6060      	str	r0, [r4, #4]
 800070c:	4620      	mov	r0, r4
 800070e:	f000 f81b 	bl	8000748 <__sfp>
 8000712:	60a0      	str	r0, [r4, #8]
 8000714:	4620      	mov	r0, r4
 8000716:	f000 f817 	bl	8000748 <__sfp>
 800071a:	2200      	movs	r2, #0
 800071c:	60e0      	str	r0, [r4, #12]
 800071e:	2104      	movs	r1, #4
 8000720:	6860      	ldr	r0, [r4, #4]
 8000722:	f7ff ffa1 	bl	8000668 <std>
 8000726:	2201      	movs	r2, #1
 8000728:	2109      	movs	r1, #9
 800072a:	68a0      	ldr	r0, [r4, #8]
 800072c:	f7ff ff9c 	bl	8000668 <std>
 8000730:	2202      	movs	r2, #2
 8000732:	2112      	movs	r1, #18
 8000734:	68e0      	ldr	r0, [r4, #12]
 8000736:	f7ff ff97 	bl	8000668 <std>
 800073a:	2301      	movs	r3, #1
 800073c:	61a3      	str	r3, [r4, #24]
 800073e:	bd10      	pop	{r4, pc}
 8000740:	08001504 	.word	0x08001504
 8000744:	080006b1 	.word	0x080006b1

08000748 <__sfp>:
 8000748:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800074a:	4b1b      	ldr	r3, [pc, #108]	; (80007b8 <__sfp+0x70>)
 800074c:	4607      	mov	r7, r0
 800074e:	681e      	ldr	r6, [r3, #0]
 8000750:	69b3      	ldr	r3, [r6, #24]
 8000752:	b913      	cbnz	r3, 800075a <__sfp+0x12>
 8000754:	4630      	mov	r0, r6
 8000756:	f7ff ffc7 	bl	80006e8 <__sinit>
 800075a:	3648      	adds	r6, #72	; 0x48
 800075c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000760:	3b01      	subs	r3, #1
 8000762:	d503      	bpl.n	800076c <__sfp+0x24>
 8000764:	6833      	ldr	r3, [r6, #0]
 8000766:	b133      	cbz	r3, 8000776 <__sfp+0x2e>
 8000768:	6836      	ldr	r6, [r6, #0]
 800076a:	e7f7      	b.n	800075c <__sfp+0x14>
 800076c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000770:	b16d      	cbz	r5, 800078e <__sfp+0x46>
 8000772:	3468      	adds	r4, #104	; 0x68
 8000774:	e7f4      	b.n	8000760 <__sfp+0x18>
 8000776:	2104      	movs	r1, #4
 8000778:	4638      	mov	r0, r7
 800077a:	f7ff ff9f 	bl	80006bc <__sfmoreglue>
 800077e:	6030      	str	r0, [r6, #0]
 8000780:	2800      	cmp	r0, #0
 8000782:	d1f1      	bne.n	8000768 <__sfp+0x20>
 8000784:	230c      	movs	r3, #12
 8000786:	4604      	mov	r4, r0
 8000788:	603b      	str	r3, [r7, #0]
 800078a:	4620      	mov	r0, r4
 800078c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800078e:	4b0b      	ldr	r3, [pc, #44]	; (80007bc <__sfp+0x74>)
 8000790:	6665      	str	r5, [r4, #100]	; 0x64
 8000792:	e9c4 5500 	strd	r5, r5, [r4]
 8000796:	60a5      	str	r5, [r4, #8]
 8000798:	e9c4 3503 	strd	r3, r5, [r4, #12]
 800079c:	e9c4 5505 	strd	r5, r5, [r4, #20]
 80007a0:	2208      	movs	r2, #8
 80007a2:	4629      	mov	r1, r5
 80007a4:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80007a8:	f7ff fef6 	bl	8000598 <memset>
 80007ac:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80007b0:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80007b4:	e7e9      	b.n	800078a <__sfp+0x42>
 80007b6:	bf00      	nop
 80007b8:	08001504 	.word	0x08001504
 80007bc:	ffff0001 	.word	0xffff0001

080007c0 <_fwalk_reent>:
 80007c0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007c4:	4680      	mov	r8, r0
 80007c6:	4689      	mov	r9, r1
 80007c8:	2600      	movs	r6, #0
 80007ca:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80007ce:	b914      	cbnz	r4, 80007d6 <_fwalk_reent+0x16>
 80007d0:	4630      	mov	r0, r6
 80007d2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80007d6:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80007da:	3f01      	subs	r7, #1
 80007dc:	d501      	bpl.n	80007e2 <_fwalk_reent+0x22>
 80007de:	6824      	ldr	r4, [r4, #0]
 80007e0:	e7f5      	b.n	80007ce <_fwalk_reent+0xe>
 80007e2:	89ab      	ldrh	r3, [r5, #12]
 80007e4:	2b01      	cmp	r3, #1
 80007e6:	d907      	bls.n	80007f8 <_fwalk_reent+0x38>
 80007e8:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80007ec:	3301      	adds	r3, #1
 80007ee:	d003      	beq.n	80007f8 <_fwalk_reent+0x38>
 80007f0:	4629      	mov	r1, r5
 80007f2:	4640      	mov	r0, r8
 80007f4:	47c8      	blx	r9
 80007f6:	4306      	orrs	r6, r0
 80007f8:	3568      	adds	r5, #104	; 0x68
 80007fa:	e7ee      	b.n	80007da <_fwalk_reent+0x1a>

080007fc <malloc>:
 80007fc:	4b02      	ldr	r3, [pc, #8]	; (8000808 <malloc+0xc>)
 80007fe:	4601      	mov	r1, r0
 8000800:	6818      	ldr	r0, [r3, #0]
 8000802:	f000 b84f 	b.w	80008a4 <_malloc_r>
 8000806:	bf00      	nop
 8000808:	20000044 	.word	0x20000044

0800080c <_free_r>:
 800080c:	b538      	push	{r3, r4, r5, lr}
 800080e:	4605      	mov	r5, r0
 8000810:	2900      	cmp	r1, #0
 8000812:	d043      	beq.n	800089c <_free_r+0x90>
 8000814:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000818:	1f0c      	subs	r4, r1, #4
 800081a:	2b00      	cmp	r3, #0
 800081c:	bfb8      	it	lt
 800081e:	18e4      	addlt	r4, r4, r3
 8000820:	f000 fe00 	bl	8001424 <__malloc_lock>
 8000824:	4a1e      	ldr	r2, [pc, #120]	; (80008a0 <_free_r+0x94>)
 8000826:	6813      	ldr	r3, [r2, #0]
 8000828:	4610      	mov	r0, r2
 800082a:	b933      	cbnz	r3, 800083a <_free_r+0x2e>
 800082c:	6063      	str	r3, [r4, #4]
 800082e:	6014      	str	r4, [r2, #0]
 8000830:	4628      	mov	r0, r5
 8000832:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000836:	f000 bdf6 	b.w	8001426 <__malloc_unlock>
 800083a:	42a3      	cmp	r3, r4
 800083c:	d90b      	bls.n	8000856 <_free_r+0x4a>
 800083e:	6821      	ldr	r1, [r4, #0]
 8000840:	1862      	adds	r2, r4, r1
 8000842:	4293      	cmp	r3, r2
 8000844:	bf01      	itttt	eq
 8000846:	681a      	ldreq	r2, [r3, #0]
 8000848:	685b      	ldreq	r3, [r3, #4]
 800084a:	1852      	addeq	r2, r2, r1
 800084c:	6022      	streq	r2, [r4, #0]
 800084e:	6063      	str	r3, [r4, #4]
 8000850:	6004      	str	r4, [r0, #0]
 8000852:	e7ed      	b.n	8000830 <_free_r+0x24>
 8000854:	4613      	mov	r3, r2
 8000856:	685a      	ldr	r2, [r3, #4]
 8000858:	b10a      	cbz	r2, 800085e <_free_r+0x52>
 800085a:	42a2      	cmp	r2, r4
 800085c:	d9fa      	bls.n	8000854 <_free_r+0x48>
 800085e:	6819      	ldr	r1, [r3, #0]
 8000860:	1858      	adds	r0, r3, r1
 8000862:	42a0      	cmp	r0, r4
 8000864:	d10b      	bne.n	800087e <_free_r+0x72>
 8000866:	6820      	ldr	r0, [r4, #0]
 8000868:	4401      	add	r1, r0
 800086a:	1858      	adds	r0, r3, r1
 800086c:	4282      	cmp	r2, r0
 800086e:	6019      	str	r1, [r3, #0]
 8000870:	d1de      	bne.n	8000830 <_free_r+0x24>
 8000872:	6810      	ldr	r0, [r2, #0]
 8000874:	6852      	ldr	r2, [r2, #4]
 8000876:	4401      	add	r1, r0
 8000878:	6019      	str	r1, [r3, #0]
 800087a:	605a      	str	r2, [r3, #4]
 800087c:	e7d8      	b.n	8000830 <_free_r+0x24>
 800087e:	d902      	bls.n	8000886 <_free_r+0x7a>
 8000880:	230c      	movs	r3, #12
 8000882:	602b      	str	r3, [r5, #0]
 8000884:	e7d4      	b.n	8000830 <_free_r+0x24>
 8000886:	6820      	ldr	r0, [r4, #0]
 8000888:	1821      	adds	r1, r4, r0
 800088a:	428a      	cmp	r2, r1
 800088c:	bf01      	itttt	eq
 800088e:	6811      	ldreq	r1, [r2, #0]
 8000890:	6852      	ldreq	r2, [r2, #4]
 8000892:	1809      	addeq	r1, r1, r0
 8000894:	6021      	streq	r1, [r4, #0]
 8000896:	6062      	str	r2, [r4, #4]
 8000898:	605c      	str	r4, [r3, #4]
 800089a:	e7c9      	b.n	8000830 <_free_r+0x24>
 800089c:	bd38      	pop	{r3, r4, r5, pc}
 800089e:	bf00      	nop
 80008a0:	200000c8 	.word	0x200000c8

080008a4 <_malloc_r>:
 80008a4:	b570      	push	{r4, r5, r6, lr}
 80008a6:	1ccd      	adds	r5, r1, #3
 80008a8:	f025 0503 	bic.w	r5, r5, #3
 80008ac:	3508      	adds	r5, #8
 80008ae:	2d0c      	cmp	r5, #12
 80008b0:	bf38      	it	cc
 80008b2:	250c      	movcc	r5, #12
 80008b4:	2d00      	cmp	r5, #0
 80008b6:	4606      	mov	r6, r0
 80008b8:	db01      	blt.n	80008be <_malloc_r+0x1a>
 80008ba:	42a9      	cmp	r1, r5
 80008bc:	d903      	bls.n	80008c6 <_malloc_r+0x22>
 80008be:	230c      	movs	r3, #12
 80008c0:	6033      	str	r3, [r6, #0]
 80008c2:	2000      	movs	r0, #0
 80008c4:	bd70      	pop	{r4, r5, r6, pc}
 80008c6:	f000 fdad 	bl	8001424 <__malloc_lock>
 80008ca:	4a21      	ldr	r2, [pc, #132]	; (8000950 <_malloc_r+0xac>)
 80008cc:	6814      	ldr	r4, [r2, #0]
 80008ce:	4621      	mov	r1, r4
 80008d0:	b991      	cbnz	r1, 80008f8 <_malloc_r+0x54>
 80008d2:	4c20      	ldr	r4, [pc, #128]	; (8000954 <_malloc_r+0xb0>)
 80008d4:	6823      	ldr	r3, [r4, #0]
 80008d6:	b91b      	cbnz	r3, 80008e0 <_malloc_r+0x3c>
 80008d8:	4630      	mov	r0, r6
 80008da:	f000 fb39 	bl	8000f50 <_sbrk_r>
 80008de:	6020      	str	r0, [r4, #0]
 80008e0:	4629      	mov	r1, r5
 80008e2:	4630      	mov	r0, r6
 80008e4:	f000 fb34 	bl	8000f50 <_sbrk_r>
 80008e8:	1c43      	adds	r3, r0, #1
 80008ea:	d124      	bne.n	8000936 <_malloc_r+0x92>
 80008ec:	230c      	movs	r3, #12
 80008ee:	4630      	mov	r0, r6
 80008f0:	6033      	str	r3, [r6, #0]
 80008f2:	f000 fd98 	bl	8001426 <__malloc_unlock>
 80008f6:	e7e4      	b.n	80008c2 <_malloc_r+0x1e>
 80008f8:	680b      	ldr	r3, [r1, #0]
 80008fa:	1b5b      	subs	r3, r3, r5
 80008fc:	d418      	bmi.n	8000930 <_malloc_r+0x8c>
 80008fe:	2b0b      	cmp	r3, #11
 8000900:	d90f      	bls.n	8000922 <_malloc_r+0x7e>
 8000902:	600b      	str	r3, [r1, #0]
 8000904:	18cc      	adds	r4, r1, r3
 8000906:	50cd      	str	r5, [r1, r3]
 8000908:	4630      	mov	r0, r6
 800090a:	f000 fd8c 	bl	8001426 <__malloc_unlock>
 800090e:	f104 000b 	add.w	r0, r4, #11
 8000912:	1d23      	adds	r3, r4, #4
 8000914:	f020 0007 	bic.w	r0, r0, #7
 8000918:	1ac3      	subs	r3, r0, r3
 800091a:	d0d3      	beq.n	80008c4 <_malloc_r+0x20>
 800091c:	425a      	negs	r2, r3
 800091e:	50e2      	str	r2, [r4, r3]
 8000920:	e7d0      	b.n	80008c4 <_malloc_r+0x20>
 8000922:	684b      	ldr	r3, [r1, #4]
 8000924:	428c      	cmp	r4, r1
 8000926:	bf16      	itet	ne
 8000928:	6063      	strne	r3, [r4, #4]
 800092a:	6013      	streq	r3, [r2, #0]
 800092c:	460c      	movne	r4, r1
 800092e:	e7eb      	b.n	8000908 <_malloc_r+0x64>
 8000930:	460c      	mov	r4, r1
 8000932:	6849      	ldr	r1, [r1, #4]
 8000934:	e7cc      	b.n	80008d0 <_malloc_r+0x2c>
 8000936:	1cc4      	adds	r4, r0, #3
 8000938:	f024 0403 	bic.w	r4, r4, #3
 800093c:	42a0      	cmp	r0, r4
 800093e:	d005      	beq.n	800094c <_malloc_r+0xa8>
 8000940:	1a21      	subs	r1, r4, r0
 8000942:	4630      	mov	r0, r6
 8000944:	f000 fb04 	bl	8000f50 <_sbrk_r>
 8000948:	3001      	adds	r0, #1
 800094a:	d0cf      	beq.n	80008ec <_malloc_r+0x48>
 800094c:	6025      	str	r5, [r4, #0]
 800094e:	e7db      	b.n	8000908 <_malloc_r+0x64>
 8000950:	200000c8 	.word	0x200000c8
 8000954:	200000cc 	.word	0x200000cc

08000958 <__sfputc_r>:
 8000958:	6893      	ldr	r3, [r2, #8]
 800095a:	b410      	push	{r4}
 800095c:	3b01      	subs	r3, #1
 800095e:	2b00      	cmp	r3, #0
 8000960:	6093      	str	r3, [r2, #8]
 8000962:	da07      	bge.n	8000974 <__sfputc_r+0x1c>
 8000964:	6994      	ldr	r4, [r2, #24]
 8000966:	42a3      	cmp	r3, r4
 8000968:	db01      	blt.n	800096e <__sfputc_r+0x16>
 800096a:	290a      	cmp	r1, #10
 800096c:	d102      	bne.n	8000974 <__sfputc_r+0x1c>
 800096e:	bc10      	pop	{r4}
 8000970:	f000 bb42 	b.w	8000ff8 <__swbuf_r>
 8000974:	6813      	ldr	r3, [r2, #0]
 8000976:	1c58      	adds	r0, r3, #1
 8000978:	6010      	str	r0, [r2, #0]
 800097a:	7019      	strb	r1, [r3, #0]
 800097c:	4608      	mov	r0, r1
 800097e:	bc10      	pop	{r4}
 8000980:	4770      	bx	lr

08000982 <__sfputs_r>:
 8000982:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000984:	4606      	mov	r6, r0
 8000986:	460f      	mov	r7, r1
 8000988:	4614      	mov	r4, r2
 800098a:	18d5      	adds	r5, r2, r3
 800098c:	42ac      	cmp	r4, r5
 800098e:	d101      	bne.n	8000994 <__sfputs_r+0x12>
 8000990:	2000      	movs	r0, #0
 8000992:	e007      	b.n	80009a4 <__sfputs_r+0x22>
 8000994:	463a      	mov	r2, r7
 8000996:	f814 1b01 	ldrb.w	r1, [r4], #1
 800099a:	4630      	mov	r0, r6
 800099c:	f7ff ffdc 	bl	8000958 <__sfputc_r>
 80009a0:	1c43      	adds	r3, r0, #1
 80009a2:	d1f3      	bne.n	800098c <__sfputs_r+0xa>
 80009a4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009a8 <_vfiprintf_r>:
 80009a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80009ac:	460c      	mov	r4, r1
 80009ae:	b09d      	sub	sp, #116	; 0x74
 80009b0:	4617      	mov	r7, r2
 80009b2:	461d      	mov	r5, r3
 80009b4:	4606      	mov	r6, r0
 80009b6:	b118      	cbz	r0, 80009c0 <_vfiprintf_r+0x18>
 80009b8:	6983      	ldr	r3, [r0, #24]
 80009ba:	b90b      	cbnz	r3, 80009c0 <_vfiprintf_r+0x18>
 80009bc:	f7ff fe94 	bl	80006e8 <__sinit>
 80009c0:	4b7c      	ldr	r3, [pc, #496]	; (8000bb4 <_vfiprintf_r+0x20c>)
 80009c2:	429c      	cmp	r4, r3
 80009c4:	d158      	bne.n	8000a78 <_vfiprintf_r+0xd0>
 80009c6:	6874      	ldr	r4, [r6, #4]
 80009c8:	89a3      	ldrh	r3, [r4, #12]
 80009ca:	0718      	lsls	r0, r3, #28
 80009cc:	d55e      	bpl.n	8000a8c <_vfiprintf_r+0xe4>
 80009ce:	6923      	ldr	r3, [r4, #16]
 80009d0:	2b00      	cmp	r3, #0
 80009d2:	d05b      	beq.n	8000a8c <_vfiprintf_r+0xe4>
 80009d4:	2300      	movs	r3, #0
 80009d6:	9309      	str	r3, [sp, #36]	; 0x24
 80009d8:	2320      	movs	r3, #32
 80009da:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80009de:	2330      	movs	r3, #48	; 0x30
 80009e0:	f04f 0b01 	mov.w	fp, #1
 80009e4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80009e8:	9503      	str	r5, [sp, #12]
 80009ea:	46b8      	mov	r8, r7
 80009ec:	4645      	mov	r5, r8
 80009ee:	f815 3b01 	ldrb.w	r3, [r5], #1
 80009f2:	b10b      	cbz	r3, 80009f8 <_vfiprintf_r+0x50>
 80009f4:	2b25      	cmp	r3, #37	; 0x25
 80009f6:	d154      	bne.n	8000aa2 <_vfiprintf_r+0xfa>
 80009f8:	ebb8 0a07 	subs.w	sl, r8, r7
 80009fc:	d00b      	beq.n	8000a16 <_vfiprintf_r+0x6e>
 80009fe:	4653      	mov	r3, sl
 8000a00:	463a      	mov	r2, r7
 8000a02:	4621      	mov	r1, r4
 8000a04:	4630      	mov	r0, r6
 8000a06:	f7ff ffbc 	bl	8000982 <__sfputs_r>
 8000a0a:	3001      	adds	r0, #1
 8000a0c:	f000 80c2 	beq.w	8000b94 <_vfiprintf_r+0x1ec>
 8000a10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000a12:	4453      	add	r3, sl
 8000a14:	9309      	str	r3, [sp, #36]	; 0x24
 8000a16:	f898 3000 	ldrb.w	r3, [r8]
 8000a1a:	2b00      	cmp	r3, #0
 8000a1c:	f000 80ba 	beq.w	8000b94 <_vfiprintf_r+0x1ec>
 8000a20:	2300      	movs	r3, #0
 8000a22:	f04f 32ff 	mov.w	r2, #4294967295
 8000a26:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000a2a:	9304      	str	r3, [sp, #16]
 8000a2c:	9307      	str	r3, [sp, #28]
 8000a2e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000a32:	931a      	str	r3, [sp, #104]	; 0x68
 8000a34:	46a8      	mov	r8, r5
 8000a36:	2205      	movs	r2, #5
 8000a38:	f818 1b01 	ldrb.w	r1, [r8], #1
 8000a3c:	485e      	ldr	r0, [pc, #376]	; (8000bb8 <_vfiprintf_r+0x210>)
 8000a3e:	f000 fce3 	bl	8001408 <memchr>
 8000a42:	9b04      	ldr	r3, [sp, #16]
 8000a44:	bb78      	cbnz	r0, 8000aa6 <_vfiprintf_r+0xfe>
 8000a46:	06d9      	lsls	r1, r3, #27
 8000a48:	bf44      	itt	mi
 8000a4a:	2220      	movmi	r2, #32
 8000a4c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000a50:	071a      	lsls	r2, r3, #28
 8000a52:	bf44      	itt	mi
 8000a54:	222b      	movmi	r2, #43	; 0x2b
 8000a56:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8000a5a:	782a      	ldrb	r2, [r5, #0]
 8000a5c:	2a2a      	cmp	r2, #42	; 0x2a
 8000a5e:	d02a      	beq.n	8000ab6 <_vfiprintf_r+0x10e>
 8000a60:	46a8      	mov	r8, r5
 8000a62:	2000      	movs	r0, #0
 8000a64:	250a      	movs	r5, #10
 8000a66:	9a07      	ldr	r2, [sp, #28]
 8000a68:	4641      	mov	r1, r8
 8000a6a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000a6e:	3b30      	subs	r3, #48	; 0x30
 8000a70:	2b09      	cmp	r3, #9
 8000a72:	d969      	bls.n	8000b48 <_vfiprintf_r+0x1a0>
 8000a74:	b360      	cbz	r0, 8000ad0 <_vfiprintf_r+0x128>
 8000a76:	e024      	b.n	8000ac2 <_vfiprintf_r+0x11a>
 8000a78:	4b50      	ldr	r3, [pc, #320]	; (8000bbc <_vfiprintf_r+0x214>)
 8000a7a:	429c      	cmp	r4, r3
 8000a7c:	d101      	bne.n	8000a82 <_vfiprintf_r+0xda>
 8000a7e:	68b4      	ldr	r4, [r6, #8]
 8000a80:	e7a2      	b.n	80009c8 <_vfiprintf_r+0x20>
 8000a82:	4b4f      	ldr	r3, [pc, #316]	; (8000bc0 <_vfiprintf_r+0x218>)
 8000a84:	429c      	cmp	r4, r3
 8000a86:	bf08      	it	eq
 8000a88:	68f4      	ldreq	r4, [r6, #12]
 8000a8a:	e79d      	b.n	80009c8 <_vfiprintf_r+0x20>
 8000a8c:	4621      	mov	r1, r4
 8000a8e:	4630      	mov	r0, r6
 8000a90:	f000 fb16 	bl	80010c0 <__swsetup_r>
 8000a94:	2800      	cmp	r0, #0
 8000a96:	d09d      	beq.n	80009d4 <_vfiprintf_r+0x2c>
 8000a98:	f04f 30ff 	mov.w	r0, #4294967295
 8000a9c:	b01d      	add	sp, #116	; 0x74
 8000a9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000aa2:	46a8      	mov	r8, r5
 8000aa4:	e7a2      	b.n	80009ec <_vfiprintf_r+0x44>
 8000aa6:	4a44      	ldr	r2, [pc, #272]	; (8000bb8 <_vfiprintf_r+0x210>)
 8000aa8:	4645      	mov	r5, r8
 8000aaa:	1a80      	subs	r0, r0, r2
 8000aac:	fa0b f000 	lsl.w	r0, fp, r0
 8000ab0:	4318      	orrs	r0, r3
 8000ab2:	9004      	str	r0, [sp, #16]
 8000ab4:	e7be      	b.n	8000a34 <_vfiprintf_r+0x8c>
 8000ab6:	9a03      	ldr	r2, [sp, #12]
 8000ab8:	1d11      	adds	r1, r2, #4
 8000aba:	6812      	ldr	r2, [r2, #0]
 8000abc:	9103      	str	r1, [sp, #12]
 8000abe:	2a00      	cmp	r2, #0
 8000ac0:	db01      	blt.n	8000ac6 <_vfiprintf_r+0x11e>
 8000ac2:	9207      	str	r2, [sp, #28]
 8000ac4:	e004      	b.n	8000ad0 <_vfiprintf_r+0x128>
 8000ac6:	4252      	negs	r2, r2
 8000ac8:	f043 0302 	orr.w	r3, r3, #2
 8000acc:	9207      	str	r2, [sp, #28]
 8000ace:	9304      	str	r3, [sp, #16]
 8000ad0:	f898 3000 	ldrb.w	r3, [r8]
 8000ad4:	2b2e      	cmp	r3, #46	; 0x2e
 8000ad6:	d10e      	bne.n	8000af6 <_vfiprintf_r+0x14e>
 8000ad8:	f898 3001 	ldrb.w	r3, [r8, #1]
 8000adc:	2b2a      	cmp	r3, #42	; 0x2a
 8000ade:	d138      	bne.n	8000b52 <_vfiprintf_r+0x1aa>
 8000ae0:	9b03      	ldr	r3, [sp, #12]
 8000ae2:	f108 0802 	add.w	r8, r8, #2
 8000ae6:	1d1a      	adds	r2, r3, #4
 8000ae8:	681b      	ldr	r3, [r3, #0]
 8000aea:	9203      	str	r2, [sp, #12]
 8000aec:	2b00      	cmp	r3, #0
 8000aee:	bfb8      	it	lt
 8000af0:	f04f 33ff 	movlt.w	r3, #4294967295
 8000af4:	9305      	str	r3, [sp, #20]
 8000af6:	4d33      	ldr	r5, [pc, #204]	; (8000bc4 <_vfiprintf_r+0x21c>)
 8000af8:	2203      	movs	r2, #3
 8000afa:	f898 1000 	ldrb.w	r1, [r8]
 8000afe:	4628      	mov	r0, r5
 8000b00:	f000 fc82 	bl	8001408 <memchr>
 8000b04:	b140      	cbz	r0, 8000b18 <_vfiprintf_r+0x170>
 8000b06:	2340      	movs	r3, #64	; 0x40
 8000b08:	1b40      	subs	r0, r0, r5
 8000b0a:	fa03 f000 	lsl.w	r0, r3, r0
 8000b0e:	9b04      	ldr	r3, [sp, #16]
 8000b10:	f108 0801 	add.w	r8, r8, #1
 8000b14:	4303      	orrs	r3, r0
 8000b16:	9304      	str	r3, [sp, #16]
 8000b18:	f898 1000 	ldrb.w	r1, [r8]
 8000b1c:	2206      	movs	r2, #6
 8000b1e:	482a      	ldr	r0, [pc, #168]	; (8000bc8 <_vfiprintf_r+0x220>)
 8000b20:	f108 0701 	add.w	r7, r8, #1
 8000b24:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b28:	f000 fc6e 	bl	8001408 <memchr>
 8000b2c:	2800      	cmp	r0, #0
 8000b2e:	d037      	beq.n	8000ba0 <_vfiprintf_r+0x1f8>
 8000b30:	4b26      	ldr	r3, [pc, #152]	; (8000bcc <_vfiprintf_r+0x224>)
 8000b32:	bb1b      	cbnz	r3, 8000b7c <_vfiprintf_r+0x1d4>
 8000b34:	9b03      	ldr	r3, [sp, #12]
 8000b36:	3307      	adds	r3, #7
 8000b38:	f023 0307 	bic.w	r3, r3, #7
 8000b3c:	3308      	adds	r3, #8
 8000b3e:	9303      	str	r3, [sp, #12]
 8000b40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000b42:	444b      	add	r3, r9
 8000b44:	9309      	str	r3, [sp, #36]	; 0x24
 8000b46:	e750      	b.n	80009ea <_vfiprintf_r+0x42>
 8000b48:	fb05 3202 	mla	r2, r5, r2, r3
 8000b4c:	2001      	movs	r0, #1
 8000b4e:	4688      	mov	r8, r1
 8000b50:	e78a      	b.n	8000a68 <_vfiprintf_r+0xc0>
 8000b52:	2300      	movs	r3, #0
 8000b54:	250a      	movs	r5, #10
 8000b56:	4619      	mov	r1, r3
 8000b58:	f108 0801 	add.w	r8, r8, #1
 8000b5c:	9305      	str	r3, [sp, #20]
 8000b5e:	4640      	mov	r0, r8
 8000b60:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000b64:	3a30      	subs	r2, #48	; 0x30
 8000b66:	2a09      	cmp	r2, #9
 8000b68:	d903      	bls.n	8000b72 <_vfiprintf_r+0x1ca>
 8000b6a:	2b00      	cmp	r3, #0
 8000b6c:	d0c3      	beq.n	8000af6 <_vfiprintf_r+0x14e>
 8000b6e:	9105      	str	r1, [sp, #20]
 8000b70:	e7c1      	b.n	8000af6 <_vfiprintf_r+0x14e>
 8000b72:	fb05 2101 	mla	r1, r5, r1, r2
 8000b76:	2301      	movs	r3, #1
 8000b78:	4680      	mov	r8, r0
 8000b7a:	e7f0      	b.n	8000b5e <_vfiprintf_r+0x1b6>
 8000b7c:	ab03      	add	r3, sp, #12
 8000b7e:	9300      	str	r3, [sp, #0]
 8000b80:	4622      	mov	r2, r4
 8000b82:	4b13      	ldr	r3, [pc, #76]	; (8000bd0 <_vfiprintf_r+0x228>)
 8000b84:	a904      	add	r1, sp, #16
 8000b86:	4630      	mov	r0, r6
 8000b88:	f3af 8000 	nop.w
 8000b8c:	f1b0 3fff 	cmp.w	r0, #4294967295
 8000b90:	4681      	mov	r9, r0
 8000b92:	d1d5      	bne.n	8000b40 <_vfiprintf_r+0x198>
 8000b94:	89a3      	ldrh	r3, [r4, #12]
 8000b96:	065b      	lsls	r3, r3, #25
 8000b98:	f53f af7e 	bmi.w	8000a98 <_vfiprintf_r+0xf0>
 8000b9c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000b9e:	e77d      	b.n	8000a9c <_vfiprintf_r+0xf4>
 8000ba0:	ab03      	add	r3, sp, #12
 8000ba2:	9300      	str	r3, [sp, #0]
 8000ba4:	4622      	mov	r2, r4
 8000ba6:	4b0a      	ldr	r3, [pc, #40]	; (8000bd0 <_vfiprintf_r+0x228>)
 8000ba8:	a904      	add	r1, sp, #16
 8000baa:	4630      	mov	r0, r6
 8000bac:	f000 f888 	bl	8000cc0 <_printf_i>
 8000bb0:	e7ec      	b.n	8000b8c <_vfiprintf_r+0x1e4>
 8000bb2:	bf00      	nop
 8000bb4:	08001528 	.word	0x08001528
 8000bb8:	08001568 	.word	0x08001568
 8000bbc:	08001548 	.word	0x08001548
 8000bc0:	08001508 	.word	0x08001508
 8000bc4:	0800156e 	.word	0x0800156e
 8000bc8:	08001572 	.word	0x08001572
 8000bcc:	00000000 	.word	0x00000000
 8000bd0:	08000983 	.word	0x08000983

08000bd4 <_printf_common>:
 8000bd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bd8:	4691      	mov	r9, r2
 8000bda:	461f      	mov	r7, r3
 8000bdc:	688a      	ldr	r2, [r1, #8]
 8000bde:	690b      	ldr	r3, [r1, #16]
 8000be0:	4606      	mov	r6, r0
 8000be2:	4293      	cmp	r3, r2
 8000be4:	bfb8      	it	lt
 8000be6:	4613      	movlt	r3, r2
 8000be8:	f8c9 3000 	str.w	r3, [r9]
 8000bec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000bf0:	460c      	mov	r4, r1
 8000bf2:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000bf6:	b112      	cbz	r2, 8000bfe <_printf_common+0x2a>
 8000bf8:	3301      	adds	r3, #1
 8000bfa:	f8c9 3000 	str.w	r3, [r9]
 8000bfe:	6823      	ldr	r3, [r4, #0]
 8000c00:	0699      	lsls	r1, r3, #26
 8000c02:	bf42      	ittt	mi
 8000c04:	f8d9 3000 	ldrmi.w	r3, [r9]
 8000c08:	3302      	addmi	r3, #2
 8000c0a:	f8c9 3000 	strmi.w	r3, [r9]
 8000c0e:	6825      	ldr	r5, [r4, #0]
 8000c10:	f015 0506 	ands.w	r5, r5, #6
 8000c14:	d107      	bne.n	8000c26 <_printf_common+0x52>
 8000c16:	f104 0a19 	add.w	sl, r4, #25
 8000c1a:	68e3      	ldr	r3, [r4, #12]
 8000c1c:	f8d9 2000 	ldr.w	r2, [r9]
 8000c20:	1a9b      	subs	r3, r3, r2
 8000c22:	42ab      	cmp	r3, r5
 8000c24:	dc29      	bgt.n	8000c7a <_printf_common+0xa6>
 8000c26:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8000c2a:	6822      	ldr	r2, [r4, #0]
 8000c2c:	3300      	adds	r3, #0
 8000c2e:	bf18      	it	ne
 8000c30:	2301      	movne	r3, #1
 8000c32:	0692      	lsls	r2, r2, #26
 8000c34:	d42e      	bmi.n	8000c94 <_printf_common+0xc0>
 8000c36:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000c3a:	4639      	mov	r1, r7
 8000c3c:	4630      	mov	r0, r6
 8000c3e:	47c0      	blx	r8
 8000c40:	3001      	adds	r0, #1
 8000c42:	d021      	beq.n	8000c88 <_printf_common+0xb4>
 8000c44:	6823      	ldr	r3, [r4, #0]
 8000c46:	68e5      	ldr	r5, [r4, #12]
 8000c48:	f003 0306 	and.w	r3, r3, #6
 8000c4c:	2b04      	cmp	r3, #4
 8000c4e:	bf18      	it	ne
 8000c50:	2500      	movne	r5, #0
 8000c52:	f8d9 2000 	ldr.w	r2, [r9]
 8000c56:	f04f 0900 	mov.w	r9, #0
 8000c5a:	bf08      	it	eq
 8000c5c:	1aad      	subeq	r5, r5, r2
 8000c5e:	68a3      	ldr	r3, [r4, #8]
 8000c60:	6922      	ldr	r2, [r4, #16]
 8000c62:	bf08      	it	eq
 8000c64:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000c68:	4293      	cmp	r3, r2
 8000c6a:	bfc4      	itt	gt
 8000c6c:	1a9b      	subgt	r3, r3, r2
 8000c6e:	18ed      	addgt	r5, r5, r3
 8000c70:	341a      	adds	r4, #26
 8000c72:	454d      	cmp	r5, r9
 8000c74:	d11a      	bne.n	8000cac <_printf_common+0xd8>
 8000c76:	2000      	movs	r0, #0
 8000c78:	e008      	b.n	8000c8c <_printf_common+0xb8>
 8000c7a:	2301      	movs	r3, #1
 8000c7c:	4652      	mov	r2, sl
 8000c7e:	4639      	mov	r1, r7
 8000c80:	4630      	mov	r0, r6
 8000c82:	47c0      	blx	r8
 8000c84:	3001      	adds	r0, #1
 8000c86:	d103      	bne.n	8000c90 <_printf_common+0xbc>
 8000c88:	f04f 30ff 	mov.w	r0, #4294967295
 8000c8c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c90:	3501      	adds	r5, #1
 8000c92:	e7c2      	b.n	8000c1a <_printf_common+0x46>
 8000c94:	2030      	movs	r0, #48	; 0x30
 8000c96:	18e1      	adds	r1, r4, r3
 8000c98:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000c9c:	1c5a      	adds	r2, r3, #1
 8000c9e:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000ca2:	4422      	add	r2, r4
 8000ca4:	3302      	adds	r3, #2
 8000ca6:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000caa:	e7c4      	b.n	8000c36 <_printf_common+0x62>
 8000cac:	2301      	movs	r3, #1
 8000cae:	4622      	mov	r2, r4
 8000cb0:	4639      	mov	r1, r7
 8000cb2:	4630      	mov	r0, r6
 8000cb4:	47c0      	blx	r8
 8000cb6:	3001      	adds	r0, #1
 8000cb8:	d0e6      	beq.n	8000c88 <_printf_common+0xb4>
 8000cba:	f109 0901 	add.w	r9, r9, #1
 8000cbe:	e7d8      	b.n	8000c72 <_printf_common+0x9e>

08000cc0 <_printf_i>:
 8000cc0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000cc4:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8000cc8:	460c      	mov	r4, r1
 8000cca:	7e09      	ldrb	r1, [r1, #24]
 8000ccc:	b085      	sub	sp, #20
 8000cce:	296e      	cmp	r1, #110	; 0x6e
 8000cd0:	4617      	mov	r7, r2
 8000cd2:	4606      	mov	r6, r0
 8000cd4:	4698      	mov	r8, r3
 8000cd6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8000cd8:	f000 80b3 	beq.w	8000e42 <_printf_i+0x182>
 8000cdc:	d822      	bhi.n	8000d24 <_printf_i+0x64>
 8000cde:	2963      	cmp	r1, #99	; 0x63
 8000ce0:	d036      	beq.n	8000d50 <_printf_i+0x90>
 8000ce2:	d80a      	bhi.n	8000cfa <_printf_i+0x3a>
 8000ce4:	2900      	cmp	r1, #0
 8000ce6:	f000 80b9 	beq.w	8000e5c <_printf_i+0x19c>
 8000cea:	2958      	cmp	r1, #88	; 0x58
 8000cec:	f000 8083 	beq.w	8000df6 <_printf_i+0x136>
 8000cf0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000cf4:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8000cf8:	e032      	b.n	8000d60 <_printf_i+0xa0>
 8000cfa:	2964      	cmp	r1, #100	; 0x64
 8000cfc:	d001      	beq.n	8000d02 <_printf_i+0x42>
 8000cfe:	2969      	cmp	r1, #105	; 0x69
 8000d00:	d1f6      	bne.n	8000cf0 <_printf_i+0x30>
 8000d02:	6820      	ldr	r0, [r4, #0]
 8000d04:	6813      	ldr	r3, [r2, #0]
 8000d06:	0605      	lsls	r5, r0, #24
 8000d08:	f103 0104 	add.w	r1, r3, #4
 8000d0c:	d52a      	bpl.n	8000d64 <_printf_i+0xa4>
 8000d0e:	681b      	ldr	r3, [r3, #0]
 8000d10:	6011      	str	r1, [r2, #0]
 8000d12:	2b00      	cmp	r3, #0
 8000d14:	da03      	bge.n	8000d1e <_printf_i+0x5e>
 8000d16:	222d      	movs	r2, #45	; 0x2d
 8000d18:	425b      	negs	r3, r3
 8000d1a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8000d1e:	486f      	ldr	r0, [pc, #444]	; (8000edc <_printf_i+0x21c>)
 8000d20:	220a      	movs	r2, #10
 8000d22:	e039      	b.n	8000d98 <_printf_i+0xd8>
 8000d24:	2973      	cmp	r1, #115	; 0x73
 8000d26:	f000 809d 	beq.w	8000e64 <_printf_i+0x1a4>
 8000d2a:	d808      	bhi.n	8000d3e <_printf_i+0x7e>
 8000d2c:	296f      	cmp	r1, #111	; 0x6f
 8000d2e:	d020      	beq.n	8000d72 <_printf_i+0xb2>
 8000d30:	2970      	cmp	r1, #112	; 0x70
 8000d32:	d1dd      	bne.n	8000cf0 <_printf_i+0x30>
 8000d34:	6823      	ldr	r3, [r4, #0]
 8000d36:	f043 0320 	orr.w	r3, r3, #32
 8000d3a:	6023      	str	r3, [r4, #0]
 8000d3c:	e003      	b.n	8000d46 <_printf_i+0x86>
 8000d3e:	2975      	cmp	r1, #117	; 0x75
 8000d40:	d017      	beq.n	8000d72 <_printf_i+0xb2>
 8000d42:	2978      	cmp	r1, #120	; 0x78
 8000d44:	d1d4      	bne.n	8000cf0 <_printf_i+0x30>
 8000d46:	2378      	movs	r3, #120	; 0x78
 8000d48:	4865      	ldr	r0, [pc, #404]	; (8000ee0 <_printf_i+0x220>)
 8000d4a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000d4e:	e055      	b.n	8000dfc <_printf_i+0x13c>
 8000d50:	6813      	ldr	r3, [r2, #0]
 8000d52:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d56:	1d19      	adds	r1, r3, #4
 8000d58:	681b      	ldr	r3, [r3, #0]
 8000d5a:	6011      	str	r1, [r2, #0]
 8000d5c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000d60:	2301      	movs	r3, #1
 8000d62:	e08c      	b.n	8000e7e <_printf_i+0x1be>
 8000d64:	681b      	ldr	r3, [r3, #0]
 8000d66:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000d6a:	6011      	str	r1, [r2, #0]
 8000d6c:	bf18      	it	ne
 8000d6e:	b21b      	sxthne	r3, r3
 8000d70:	e7cf      	b.n	8000d12 <_printf_i+0x52>
 8000d72:	6813      	ldr	r3, [r2, #0]
 8000d74:	6825      	ldr	r5, [r4, #0]
 8000d76:	1d18      	adds	r0, r3, #4
 8000d78:	6010      	str	r0, [r2, #0]
 8000d7a:	0628      	lsls	r0, r5, #24
 8000d7c:	d501      	bpl.n	8000d82 <_printf_i+0xc2>
 8000d7e:	681b      	ldr	r3, [r3, #0]
 8000d80:	e002      	b.n	8000d88 <_printf_i+0xc8>
 8000d82:	0668      	lsls	r0, r5, #25
 8000d84:	d5fb      	bpl.n	8000d7e <_printf_i+0xbe>
 8000d86:	881b      	ldrh	r3, [r3, #0]
 8000d88:	296f      	cmp	r1, #111	; 0x6f
 8000d8a:	bf14      	ite	ne
 8000d8c:	220a      	movne	r2, #10
 8000d8e:	2208      	moveq	r2, #8
 8000d90:	4852      	ldr	r0, [pc, #328]	; (8000edc <_printf_i+0x21c>)
 8000d92:	2100      	movs	r1, #0
 8000d94:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000d98:	6865      	ldr	r5, [r4, #4]
 8000d9a:	2d00      	cmp	r5, #0
 8000d9c:	60a5      	str	r5, [r4, #8]
 8000d9e:	f2c0 8095 	blt.w	8000ecc <_printf_i+0x20c>
 8000da2:	6821      	ldr	r1, [r4, #0]
 8000da4:	f021 0104 	bic.w	r1, r1, #4
 8000da8:	6021      	str	r1, [r4, #0]
 8000daa:	2b00      	cmp	r3, #0
 8000dac:	d13d      	bne.n	8000e2a <_printf_i+0x16a>
 8000dae:	2d00      	cmp	r5, #0
 8000db0:	f040 808e 	bne.w	8000ed0 <_printf_i+0x210>
 8000db4:	4665      	mov	r5, ip
 8000db6:	2a08      	cmp	r2, #8
 8000db8:	d10b      	bne.n	8000dd2 <_printf_i+0x112>
 8000dba:	6823      	ldr	r3, [r4, #0]
 8000dbc:	07db      	lsls	r3, r3, #31
 8000dbe:	d508      	bpl.n	8000dd2 <_printf_i+0x112>
 8000dc0:	6923      	ldr	r3, [r4, #16]
 8000dc2:	6862      	ldr	r2, [r4, #4]
 8000dc4:	429a      	cmp	r2, r3
 8000dc6:	bfde      	ittt	le
 8000dc8:	2330      	movle	r3, #48	; 0x30
 8000dca:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000dce:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000dd2:	ebac 0305 	sub.w	r3, ip, r5
 8000dd6:	6123      	str	r3, [r4, #16]
 8000dd8:	f8cd 8000 	str.w	r8, [sp]
 8000ddc:	463b      	mov	r3, r7
 8000dde:	aa03      	add	r2, sp, #12
 8000de0:	4621      	mov	r1, r4
 8000de2:	4630      	mov	r0, r6
 8000de4:	f7ff fef6 	bl	8000bd4 <_printf_common>
 8000de8:	3001      	adds	r0, #1
 8000dea:	d14d      	bne.n	8000e88 <_printf_i+0x1c8>
 8000dec:	f04f 30ff 	mov.w	r0, #4294967295
 8000df0:	b005      	add	sp, #20
 8000df2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8000df6:	4839      	ldr	r0, [pc, #228]	; (8000edc <_printf_i+0x21c>)
 8000df8:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8000dfc:	6813      	ldr	r3, [r2, #0]
 8000dfe:	6821      	ldr	r1, [r4, #0]
 8000e00:	1d1d      	adds	r5, r3, #4
 8000e02:	681b      	ldr	r3, [r3, #0]
 8000e04:	6015      	str	r5, [r2, #0]
 8000e06:	060a      	lsls	r2, r1, #24
 8000e08:	d50b      	bpl.n	8000e22 <_printf_i+0x162>
 8000e0a:	07ca      	lsls	r2, r1, #31
 8000e0c:	bf44      	itt	mi
 8000e0e:	f041 0120 	orrmi.w	r1, r1, #32
 8000e12:	6021      	strmi	r1, [r4, #0]
 8000e14:	b91b      	cbnz	r3, 8000e1e <_printf_i+0x15e>
 8000e16:	6822      	ldr	r2, [r4, #0]
 8000e18:	f022 0220 	bic.w	r2, r2, #32
 8000e1c:	6022      	str	r2, [r4, #0]
 8000e1e:	2210      	movs	r2, #16
 8000e20:	e7b7      	b.n	8000d92 <_printf_i+0xd2>
 8000e22:	064d      	lsls	r5, r1, #25
 8000e24:	bf48      	it	mi
 8000e26:	b29b      	uxthmi	r3, r3
 8000e28:	e7ef      	b.n	8000e0a <_printf_i+0x14a>
 8000e2a:	4665      	mov	r5, ip
 8000e2c:	fbb3 f1f2 	udiv	r1, r3, r2
 8000e30:	fb02 3311 	mls	r3, r2, r1, r3
 8000e34:	5cc3      	ldrb	r3, [r0, r3]
 8000e36:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8000e3a:	460b      	mov	r3, r1
 8000e3c:	2900      	cmp	r1, #0
 8000e3e:	d1f5      	bne.n	8000e2c <_printf_i+0x16c>
 8000e40:	e7b9      	b.n	8000db6 <_printf_i+0xf6>
 8000e42:	6813      	ldr	r3, [r2, #0]
 8000e44:	6825      	ldr	r5, [r4, #0]
 8000e46:	1d18      	adds	r0, r3, #4
 8000e48:	6961      	ldr	r1, [r4, #20]
 8000e4a:	6010      	str	r0, [r2, #0]
 8000e4c:	0628      	lsls	r0, r5, #24
 8000e4e:	681b      	ldr	r3, [r3, #0]
 8000e50:	d501      	bpl.n	8000e56 <_printf_i+0x196>
 8000e52:	6019      	str	r1, [r3, #0]
 8000e54:	e002      	b.n	8000e5c <_printf_i+0x19c>
 8000e56:	066a      	lsls	r2, r5, #25
 8000e58:	d5fb      	bpl.n	8000e52 <_printf_i+0x192>
 8000e5a:	8019      	strh	r1, [r3, #0]
 8000e5c:	2300      	movs	r3, #0
 8000e5e:	4665      	mov	r5, ip
 8000e60:	6123      	str	r3, [r4, #16]
 8000e62:	e7b9      	b.n	8000dd8 <_printf_i+0x118>
 8000e64:	6813      	ldr	r3, [r2, #0]
 8000e66:	1d19      	adds	r1, r3, #4
 8000e68:	6011      	str	r1, [r2, #0]
 8000e6a:	681d      	ldr	r5, [r3, #0]
 8000e6c:	6862      	ldr	r2, [r4, #4]
 8000e6e:	2100      	movs	r1, #0
 8000e70:	4628      	mov	r0, r5
 8000e72:	f000 fac9 	bl	8001408 <memchr>
 8000e76:	b108      	cbz	r0, 8000e7c <_printf_i+0x1bc>
 8000e78:	1b40      	subs	r0, r0, r5
 8000e7a:	6060      	str	r0, [r4, #4]
 8000e7c:	6863      	ldr	r3, [r4, #4]
 8000e7e:	6123      	str	r3, [r4, #16]
 8000e80:	2300      	movs	r3, #0
 8000e82:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e86:	e7a7      	b.n	8000dd8 <_printf_i+0x118>
 8000e88:	6923      	ldr	r3, [r4, #16]
 8000e8a:	462a      	mov	r2, r5
 8000e8c:	4639      	mov	r1, r7
 8000e8e:	4630      	mov	r0, r6
 8000e90:	47c0      	blx	r8
 8000e92:	3001      	adds	r0, #1
 8000e94:	d0aa      	beq.n	8000dec <_printf_i+0x12c>
 8000e96:	6823      	ldr	r3, [r4, #0]
 8000e98:	079b      	lsls	r3, r3, #30
 8000e9a:	d413      	bmi.n	8000ec4 <_printf_i+0x204>
 8000e9c:	68e0      	ldr	r0, [r4, #12]
 8000e9e:	9b03      	ldr	r3, [sp, #12]
 8000ea0:	4298      	cmp	r0, r3
 8000ea2:	bfb8      	it	lt
 8000ea4:	4618      	movlt	r0, r3
 8000ea6:	e7a3      	b.n	8000df0 <_printf_i+0x130>
 8000ea8:	2301      	movs	r3, #1
 8000eaa:	464a      	mov	r2, r9
 8000eac:	4639      	mov	r1, r7
 8000eae:	4630      	mov	r0, r6
 8000eb0:	47c0      	blx	r8
 8000eb2:	3001      	adds	r0, #1
 8000eb4:	d09a      	beq.n	8000dec <_printf_i+0x12c>
 8000eb6:	3501      	adds	r5, #1
 8000eb8:	68e3      	ldr	r3, [r4, #12]
 8000eba:	9a03      	ldr	r2, [sp, #12]
 8000ebc:	1a9b      	subs	r3, r3, r2
 8000ebe:	42ab      	cmp	r3, r5
 8000ec0:	dcf2      	bgt.n	8000ea8 <_printf_i+0x1e8>
 8000ec2:	e7eb      	b.n	8000e9c <_printf_i+0x1dc>
 8000ec4:	2500      	movs	r5, #0
 8000ec6:	f104 0919 	add.w	r9, r4, #25
 8000eca:	e7f5      	b.n	8000eb8 <_printf_i+0x1f8>
 8000ecc:	2b00      	cmp	r3, #0
 8000ece:	d1ac      	bne.n	8000e2a <_printf_i+0x16a>
 8000ed0:	7803      	ldrb	r3, [r0, #0]
 8000ed2:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000ed6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000eda:	e76c      	b.n	8000db6 <_printf_i+0xf6>
 8000edc:	08001579 	.word	0x08001579
 8000ee0:	0800158a 	.word	0x0800158a

08000ee4 <_putc_r>:
 8000ee4:	b570      	push	{r4, r5, r6, lr}
 8000ee6:	460d      	mov	r5, r1
 8000ee8:	4614      	mov	r4, r2
 8000eea:	4606      	mov	r6, r0
 8000eec:	b118      	cbz	r0, 8000ef6 <_putc_r+0x12>
 8000eee:	6983      	ldr	r3, [r0, #24]
 8000ef0:	b90b      	cbnz	r3, 8000ef6 <_putc_r+0x12>
 8000ef2:	f7ff fbf9 	bl	80006e8 <__sinit>
 8000ef6:	4b13      	ldr	r3, [pc, #76]	; (8000f44 <_putc_r+0x60>)
 8000ef8:	429c      	cmp	r4, r3
 8000efa:	d112      	bne.n	8000f22 <_putc_r+0x3e>
 8000efc:	6874      	ldr	r4, [r6, #4]
 8000efe:	68a3      	ldr	r3, [r4, #8]
 8000f00:	3b01      	subs	r3, #1
 8000f02:	2b00      	cmp	r3, #0
 8000f04:	60a3      	str	r3, [r4, #8]
 8000f06:	da16      	bge.n	8000f36 <_putc_r+0x52>
 8000f08:	69a2      	ldr	r2, [r4, #24]
 8000f0a:	4293      	cmp	r3, r2
 8000f0c:	db02      	blt.n	8000f14 <_putc_r+0x30>
 8000f0e:	b2eb      	uxtb	r3, r5
 8000f10:	2b0a      	cmp	r3, #10
 8000f12:	d110      	bne.n	8000f36 <_putc_r+0x52>
 8000f14:	4622      	mov	r2, r4
 8000f16:	4629      	mov	r1, r5
 8000f18:	4630      	mov	r0, r6
 8000f1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000f1e:	f000 b86b 	b.w	8000ff8 <__swbuf_r>
 8000f22:	4b09      	ldr	r3, [pc, #36]	; (8000f48 <_putc_r+0x64>)
 8000f24:	429c      	cmp	r4, r3
 8000f26:	d101      	bne.n	8000f2c <_putc_r+0x48>
 8000f28:	68b4      	ldr	r4, [r6, #8]
 8000f2a:	e7e8      	b.n	8000efe <_putc_r+0x1a>
 8000f2c:	4b07      	ldr	r3, [pc, #28]	; (8000f4c <_putc_r+0x68>)
 8000f2e:	429c      	cmp	r4, r3
 8000f30:	bf08      	it	eq
 8000f32:	68f4      	ldreq	r4, [r6, #12]
 8000f34:	e7e3      	b.n	8000efe <_putc_r+0x1a>
 8000f36:	6823      	ldr	r3, [r4, #0]
 8000f38:	b2e8      	uxtb	r0, r5
 8000f3a:	1c5a      	adds	r2, r3, #1
 8000f3c:	6022      	str	r2, [r4, #0]
 8000f3e:	701d      	strb	r5, [r3, #0]
 8000f40:	bd70      	pop	{r4, r5, r6, pc}
 8000f42:	bf00      	nop
 8000f44:	08001528 	.word	0x08001528
 8000f48:	08001548 	.word	0x08001548
 8000f4c:	08001508 	.word	0x08001508

08000f50 <_sbrk_r>:
 8000f50:	b538      	push	{r3, r4, r5, lr}
 8000f52:	2300      	movs	r3, #0
 8000f54:	4c05      	ldr	r4, [pc, #20]	; (8000f6c <_sbrk_r+0x1c>)
 8000f56:	4605      	mov	r5, r0
 8000f58:	4608      	mov	r0, r1
 8000f5a:	6023      	str	r3, [r4, #0]
 8000f5c:	f7ff fa92 	bl	8000484 <_sbrk>
 8000f60:	1c43      	adds	r3, r0, #1
 8000f62:	d102      	bne.n	8000f6a <_sbrk_r+0x1a>
 8000f64:	6823      	ldr	r3, [r4, #0]
 8000f66:	b103      	cbz	r3, 8000f6a <_sbrk_r+0x1a>
 8000f68:	602b      	str	r3, [r5, #0]
 8000f6a:	bd38      	pop	{r3, r4, r5, pc}
 8000f6c:	200000d0 	.word	0x200000d0

08000f70 <__sread>:
 8000f70:	b510      	push	{r4, lr}
 8000f72:	460c      	mov	r4, r1
 8000f74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000f78:	f000 fa56 	bl	8001428 <_read_r>
 8000f7c:	2800      	cmp	r0, #0
 8000f7e:	bfab      	itete	ge
 8000f80:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000f82:	89a3      	ldrhlt	r3, [r4, #12]
 8000f84:	181b      	addge	r3, r3, r0
 8000f86:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000f8a:	bfac      	ite	ge
 8000f8c:	6563      	strge	r3, [r4, #84]	; 0x54
 8000f8e:	81a3      	strhlt	r3, [r4, #12]
 8000f90:	bd10      	pop	{r4, pc}

08000f92 <__swrite>:
 8000f92:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000f96:	461f      	mov	r7, r3
 8000f98:	898b      	ldrh	r3, [r1, #12]
 8000f9a:	4605      	mov	r5, r0
 8000f9c:	05db      	lsls	r3, r3, #23
 8000f9e:	460c      	mov	r4, r1
 8000fa0:	4616      	mov	r6, r2
 8000fa2:	d505      	bpl.n	8000fb0 <__swrite+0x1e>
 8000fa4:	2302      	movs	r3, #2
 8000fa6:	2200      	movs	r2, #0
 8000fa8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fac:	f000 f9b6 	bl	800131c <_lseek_r>
 8000fb0:	89a3      	ldrh	r3, [r4, #12]
 8000fb2:	4632      	mov	r2, r6
 8000fb4:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000fb8:	81a3      	strh	r3, [r4, #12]
 8000fba:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000fbe:	463b      	mov	r3, r7
 8000fc0:	4628      	mov	r0, r5
 8000fc2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000fc6:	f000 b869 	b.w	800109c <_write_r>

08000fca <__sseek>:
 8000fca:	b510      	push	{r4, lr}
 8000fcc:	460c      	mov	r4, r1
 8000fce:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fd2:	f000 f9a3 	bl	800131c <_lseek_r>
 8000fd6:	1c43      	adds	r3, r0, #1
 8000fd8:	89a3      	ldrh	r3, [r4, #12]
 8000fda:	bf15      	itete	ne
 8000fdc:	6560      	strne	r0, [r4, #84]	; 0x54
 8000fde:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000fe2:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000fe6:	81a3      	strheq	r3, [r4, #12]
 8000fe8:	bf18      	it	ne
 8000fea:	81a3      	strhne	r3, [r4, #12]
 8000fec:	bd10      	pop	{r4, pc}

08000fee <__sclose>:
 8000fee:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ff2:	f000 b8d3 	b.w	800119c <_close_r>
	...

08000ff8 <__swbuf_r>:
 8000ff8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ffa:	460e      	mov	r6, r1
 8000ffc:	4614      	mov	r4, r2
 8000ffe:	4605      	mov	r5, r0
 8001000:	b118      	cbz	r0, 800100a <__swbuf_r+0x12>
 8001002:	6983      	ldr	r3, [r0, #24]
 8001004:	b90b      	cbnz	r3, 800100a <__swbuf_r+0x12>
 8001006:	f7ff fb6f 	bl	80006e8 <__sinit>
 800100a:	4b21      	ldr	r3, [pc, #132]	; (8001090 <__swbuf_r+0x98>)
 800100c:	429c      	cmp	r4, r3
 800100e:	d12a      	bne.n	8001066 <__swbuf_r+0x6e>
 8001010:	686c      	ldr	r4, [r5, #4]
 8001012:	69a3      	ldr	r3, [r4, #24]
 8001014:	60a3      	str	r3, [r4, #8]
 8001016:	89a3      	ldrh	r3, [r4, #12]
 8001018:	071a      	lsls	r2, r3, #28
 800101a:	d52e      	bpl.n	800107a <__swbuf_r+0x82>
 800101c:	6923      	ldr	r3, [r4, #16]
 800101e:	b363      	cbz	r3, 800107a <__swbuf_r+0x82>
 8001020:	6923      	ldr	r3, [r4, #16]
 8001022:	6820      	ldr	r0, [r4, #0]
 8001024:	b2f6      	uxtb	r6, r6
 8001026:	1ac0      	subs	r0, r0, r3
 8001028:	6963      	ldr	r3, [r4, #20]
 800102a:	4637      	mov	r7, r6
 800102c:	4283      	cmp	r3, r0
 800102e:	dc04      	bgt.n	800103a <__swbuf_r+0x42>
 8001030:	4621      	mov	r1, r4
 8001032:	4628      	mov	r0, r5
 8001034:	f000 f948 	bl	80012c8 <_fflush_r>
 8001038:	bb28      	cbnz	r0, 8001086 <__swbuf_r+0x8e>
 800103a:	68a3      	ldr	r3, [r4, #8]
 800103c:	3001      	adds	r0, #1
 800103e:	3b01      	subs	r3, #1
 8001040:	60a3      	str	r3, [r4, #8]
 8001042:	6823      	ldr	r3, [r4, #0]
 8001044:	1c5a      	adds	r2, r3, #1
 8001046:	6022      	str	r2, [r4, #0]
 8001048:	701e      	strb	r6, [r3, #0]
 800104a:	6963      	ldr	r3, [r4, #20]
 800104c:	4283      	cmp	r3, r0
 800104e:	d004      	beq.n	800105a <__swbuf_r+0x62>
 8001050:	89a3      	ldrh	r3, [r4, #12]
 8001052:	07db      	lsls	r3, r3, #31
 8001054:	d519      	bpl.n	800108a <__swbuf_r+0x92>
 8001056:	2e0a      	cmp	r6, #10
 8001058:	d117      	bne.n	800108a <__swbuf_r+0x92>
 800105a:	4621      	mov	r1, r4
 800105c:	4628      	mov	r0, r5
 800105e:	f000 f933 	bl	80012c8 <_fflush_r>
 8001062:	b190      	cbz	r0, 800108a <__swbuf_r+0x92>
 8001064:	e00f      	b.n	8001086 <__swbuf_r+0x8e>
 8001066:	4b0b      	ldr	r3, [pc, #44]	; (8001094 <__swbuf_r+0x9c>)
 8001068:	429c      	cmp	r4, r3
 800106a:	d101      	bne.n	8001070 <__swbuf_r+0x78>
 800106c:	68ac      	ldr	r4, [r5, #8]
 800106e:	e7d0      	b.n	8001012 <__swbuf_r+0x1a>
 8001070:	4b09      	ldr	r3, [pc, #36]	; (8001098 <__swbuf_r+0xa0>)
 8001072:	429c      	cmp	r4, r3
 8001074:	bf08      	it	eq
 8001076:	68ec      	ldreq	r4, [r5, #12]
 8001078:	e7cb      	b.n	8001012 <__swbuf_r+0x1a>
 800107a:	4621      	mov	r1, r4
 800107c:	4628      	mov	r0, r5
 800107e:	f000 f81f 	bl	80010c0 <__swsetup_r>
 8001082:	2800      	cmp	r0, #0
 8001084:	d0cc      	beq.n	8001020 <__swbuf_r+0x28>
 8001086:	f04f 37ff 	mov.w	r7, #4294967295
 800108a:	4638      	mov	r0, r7
 800108c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800108e:	bf00      	nop
 8001090:	08001528 	.word	0x08001528
 8001094:	08001548 	.word	0x08001548
 8001098:	08001508 	.word	0x08001508

0800109c <_write_r>:
 800109c:	b538      	push	{r3, r4, r5, lr}
 800109e:	4605      	mov	r5, r0
 80010a0:	4608      	mov	r0, r1
 80010a2:	4611      	mov	r1, r2
 80010a4:	2200      	movs	r2, #0
 80010a6:	4c05      	ldr	r4, [pc, #20]	; (80010bc <_write_r+0x20>)
 80010a8:	6022      	str	r2, [r4, #0]
 80010aa:	461a      	mov	r2, r3
 80010ac:	f7ff f99d 	bl	80003ea <_write>
 80010b0:	1c43      	adds	r3, r0, #1
 80010b2:	d102      	bne.n	80010ba <_write_r+0x1e>
 80010b4:	6823      	ldr	r3, [r4, #0]
 80010b6:	b103      	cbz	r3, 80010ba <_write_r+0x1e>
 80010b8:	602b      	str	r3, [r5, #0]
 80010ba:	bd38      	pop	{r3, r4, r5, pc}
 80010bc:	200000d0 	.word	0x200000d0

080010c0 <__swsetup_r>:
 80010c0:	4b32      	ldr	r3, [pc, #200]	; (800118c <__swsetup_r+0xcc>)
 80010c2:	b570      	push	{r4, r5, r6, lr}
 80010c4:	681d      	ldr	r5, [r3, #0]
 80010c6:	4606      	mov	r6, r0
 80010c8:	460c      	mov	r4, r1
 80010ca:	b125      	cbz	r5, 80010d6 <__swsetup_r+0x16>
 80010cc:	69ab      	ldr	r3, [r5, #24]
 80010ce:	b913      	cbnz	r3, 80010d6 <__swsetup_r+0x16>
 80010d0:	4628      	mov	r0, r5
 80010d2:	f7ff fb09 	bl	80006e8 <__sinit>
 80010d6:	4b2e      	ldr	r3, [pc, #184]	; (8001190 <__swsetup_r+0xd0>)
 80010d8:	429c      	cmp	r4, r3
 80010da:	d10f      	bne.n	80010fc <__swsetup_r+0x3c>
 80010dc:	686c      	ldr	r4, [r5, #4]
 80010de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010e2:	b29a      	uxth	r2, r3
 80010e4:	0715      	lsls	r5, r2, #28
 80010e6:	d42c      	bmi.n	8001142 <__swsetup_r+0x82>
 80010e8:	06d0      	lsls	r0, r2, #27
 80010ea:	d411      	bmi.n	8001110 <__swsetup_r+0x50>
 80010ec:	2209      	movs	r2, #9
 80010ee:	6032      	str	r2, [r6, #0]
 80010f0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80010f4:	81a3      	strh	r3, [r4, #12]
 80010f6:	f04f 30ff 	mov.w	r0, #4294967295
 80010fa:	e03e      	b.n	800117a <__swsetup_r+0xba>
 80010fc:	4b25      	ldr	r3, [pc, #148]	; (8001194 <__swsetup_r+0xd4>)
 80010fe:	429c      	cmp	r4, r3
 8001100:	d101      	bne.n	8001106 <__swsetup_r+0x46>
 8001102:	68ac      	ldr	r4, [r5, #8]
 8001104:	e7eb      	b.n	80010de <__swsetup_r+0x1e>
 8001106:	4b24      	ldr	r3, [pc, #144]	; (8001198 <__swsetup_r+0xd8>)
 8001108:	429c      	cmp	r4, r3
 800110a:	bf08      	it	eq
 800110c:	68ec      	ldreq	r4, [r5, #12]
 800110e:	e7e6      	b.n	80010de <__swsetup_r+0x1e>
 8001110:	0751      	lsls	r1, r2, #29
 8001112:	d512      	bpl.n	800113a <__swsetup_r+0x7a>
 8001114:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001116:	b141      	cbz	r1, 800112a <__swsetup_r+0x6a>
 8001118:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800111c:	4299      	cmp	r1, r3
 800111e:	d002      	beq.n	8001126 <__swsetup_r+0x66>
 8001120:	4630      	mov	r0, r6
 8001122:	f7ff fb73 	bl	800080c <_free_r>
 8001126:	2300      	movs	r3, #0
 8001128:	6363      	str	r3, [r4, #52]	; 0x34
 800112a:	89a3      	ldrh	r3, [r4, #12]
 800112c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001130:	81a3      	strh	r3, [r4, #12]
 8001132:	2300      	movs	r3, #0
 8001134:	6063      	str	r3, [r4, #4]
 8001136:	6923      	ldr	r3, [r4, #16]
 8001138:	6023      	str	r3, [r4, #0]
 800113a:	89a3      	ldrh	r3, [r4, #12]
 800113c:	f043 0308 	orr.w	r3, r3, #8
 8001140:	81a3      	strh	r3, [r4, #12]
 8001142:	6923      	ldr	r3, [r4, #16]
 8001144:	b94b      	cbnz	r3, 800115a <__swsetup_r+0x9a>
 8001146:	89a3      	ldrh	r3, [r4, #12]
 8001148:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800114c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001150:	d003      	beq.n	800115a <__swsetup_r+0x9a>
 8001152:	4621      	mov	r1, r4
 8001154:	4630      	mov	r0, r6
 8001156:	f000 f917 	bl	8001388 <__smakebuf_r>
 800115a:	89a2      	ldrh	r2, [r4, #12]
 800115c:	f012 0301 	ands.w	r3, r2, #1
 8001160:	d00c      	beq.n	800117c <__swsetup_r+0xbc>
 8001162:	2300      	movs	r3, #0
 8001164:	60a3      	str	r3, [r4, #8]
 8001166:	6963      	ldr	r3, [r4, #20]
 8001168:	425b      	negs	r3, r3
 800116a:	61a3      	str	r3, [r4, #24]
 800116c:	6923      	ldr	r3, [r4, #16]
 800116e:	b953      	cbnz	r3, 8001186 <__swsetup_r+0xc6>
 8001170:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001174:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8001178:	d1ba      	bne.n	80010f0 <__swsetup_r+0x30>
 800117a:	bd70      	pop	{r4, r5, r6, pc}
 800117c:	0792      	lsls	r2, r2, #30
 800117e:	bf58      	it	pl
 8001180:	6963      	ldrpl	r3, [r4, #20]
 8001182:	60a3      	str	r3, [r4, #8]
 8001184:	e7f2      	b.n	800116c <__swsetup_r+0xac>
 8001186:	2000      	movs	r0, #0
 8001188:	e7f7      	b.n	800117a <__swsetup_r+0xba>
 800118a:	bf00      	nop
 800118c:	20000044 	.word	0x20000044
 8001190:	08001528 	.word	0x08001528
 8001194:	08001548 	.word	0x08001548
 8001198:	08001508 	.word	0x08001508

0800119c <_close_r>:
 800119c:	b538      	push	{r3, r4, r5, lr}
 800119e:	2300      	movs	r3, #0
 80011a0:	4c05      	ldr	r4, [pc, #20]	; (80011b8 <_close_r+0x1c>)
 80011a2:	4605      	mov	r5, r0
 80011a4:	4608      	mov	r0, r1
 80011a6:	6023      	str	r3, [r4, #0]
 80011a8:	f7ff f93b 	bl	8000422 <_close>
 80011ac:	1c43      	adds	r3, r0, #1
 80011ae:	d102      	bne.n	80011b6 <_close_r+0x1a>
 80011b0:	6823      	ldr	r3, [r4, #0]
 80011b2:	b103      	cbz	r3, 80011b6 <_close_r+0x1a>
 80011b4:	602b      	str	r3, [r5, #0]
 80011b6:	bd38      	pop	{r3, r4, r5, pc}
 80011b8:	200000d0 	.word	0x200000d0

080011bc <__sflush_r>:
 80011bc:	898a      	ldrh	r2, [r1, #12]
 80011be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80011c2:	4605      	mov	r5, r0
 80011c4:	0710      	lsls	r0, r2, #28
 80011c6:	460c      	mov	r4, r1
 80011c8:	d458      	bmi.n	800127c <__sflush_r+0xc0>
 80011ca:	684b      	ldr	r3, [r1, #4]
 80011cc:	2b00      	cmp	r3, #0
 80011ce:	dc05      	bgt.n	80011dc <__sflush_r+0x20>
 80011d0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80011d2:	2b00      	cmp	r3, #0
 80011d4:	dc02      	bgt.n	80011dc <__sflush_r+0x20>
 80011d6:	2000      	movs	r0, #0
 80011d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80011dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80011de:	2e00      	cmp	r6, #0
 80011e0:	d0f9      	beq.n	80011d6 <__sflush_r+0x1a>
 80011e2:	2300      	movs	r3, #0
 80011e4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80011e8:	682f      	ldr	r7, [r5, #0]
 80011ea:	6a21      	ldr	r1, [r4, #32]
 80011ec:	602b      	str	r3, [r5, #0]
 80011ee:	d032      	beq.n	8001256 <__sflush_r+0x9a>
 80011f0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80011f2:	89a3      	ldrh	r3, [r4, #12]
 80011f4:	075a      	lsls	r2, r3, #29
 80011f6:	d505      	bpl.n	8001204 <__sflush_r+0x48>
 80011f8:	6863      	ldr	r3, [r4, #4]
 80011fa:	1ac0      	subs	r0, r0, r3
 80011fc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80011fe:	b10b      	cbz	r3, 8001204 <__sflush_r+0x48>
 8001200:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001202:	1ac0      	subs	r0, r0, r3
 8001204:	2300      	movs	r3, #0
 8001206:	4602      	mov	r2, r0
 8001208:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800120a:	6a21      	ldr	r1, [r4, #32]
 800120c:	4628      	mov	r0, r5
 800120e:	47b0      	blx	r6
 8001210:	1c43      	adds	r3, r0, #1
 8001212:	89a3      	ldrh	r3, [r4, #12]
 8001214:	d106      	bne.n	8001224 <__sflush_r+0x68>
 8001216:	6829      	ldr	r1, [r5, #0]
 8001218:	291d      	cmp	r1, #29
 800121a:	d848      	bhi.n	80012ae <__sflush_r+0xf2>
 800121c:	4a29      	ldr	r2, [pc, #164]	; (80012c4 <__sflush_r+0x108>)
 800121e:	40ca      	lsrs	r2, r1
 8001220:	07d6      	lsls	r6, r2, #31
 8001222:	d544      	bpl.n	80012ae <__sflush_r+0xf2>
 8001224:	2200      	movs	r2, #0
 8001226:	6062      	str	r2, [r4, #4]
 8001228:	6922      	ldr	r2, [r4, #16]
 800122a:	04d9      	lsls	r1, r3, #19
 800122c:	6022      	str	r2, [r4, #0]
 800122e:	d504      	bpl.n	800123a <__sflush_r+0x7e>
 8001230:	1c42      	adds	r2, r0, #1
 8001232:	d101      	bne.n	8001238 <__sflush_r+0x7c>
 8001234:	682b      	ldr	r3, [r5, #0]
 8001236:	b903      	cbnz	r3, 800123a <__sflush_r+0x7e>
 8001238:	6560      	str	r0, [r4, #84]	; 0x54
 800123a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800123c:	602f      	str	r7, [r5, #0]
 800123e:	2900      	cmp	r1, #0
 8001240:	d0c9      	beq.n	80011d6 <__sflush_r+0x1a>
 8001242:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001246:	4299      	cmp	r1, r3
 8001248:	d002      	beq.n	8001250 <__sflush_r+0x94>
 800124a:	4628      	mov	r0, r5
 800124c:	f7ff fade 	bl	800080c <_free_r>
 8001250:	2000      	movs	r0, #0
 8001252:	6360      	str	r0, [r4, #52]	; 0x34
 8001254:	e7c0      	b.n	80011d8 <__sflush_r+0x1c>
 8001256:	2301      	movs	r3, #1
 8001258:	4628      	mov	r0, r5
 800125a:	47b0      	blx	r6
 800125c:	1c41      	adds	r1, r0, #1
 800125e:	d1c8      	bne.n	80011f2 <__sflush_r+0x36>
 8001260:	682b      	ldr	r3, [r5, #0]
 8001262:	2b00      	cmp	r3, #0
 8001264:	d0c5      	beq.n	80011f2 <__sflush_r+0x36>
 8001266:	2b1d      	cmp	r3, #29
 8001268:	d001      	beq.n	800126e <__sflush_r+0xb2>
 800126a:	2b16      	cmp	r3, #22
 800126c:	d101      	bne.n	8001272 <__sflush_r+0xb6>
 800126e:	602f      	str	r7, [r5, #0]
 8001270:	e7b1      	b.n	80011d6 <__sflush_r+0x1a>
 8001272:	89a3      	ldrh	r3, [r4, #12]
 8001274:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001278:	81a3      	strh	r3, [r4, #12]
 800127a:	e7ad      	b.n	80011d8 <__sflush_r+0x1c>
 800127c:	690f      	ldr	r7, [r1, #16]
 800127e:	2f00      	cmp	r7, #0
 8001280:	d0a9      	beq.n	80011d6 <__sflush_r+0x1a>
 8001282:	0793      	lsls	r3, r2, #30
 8001284:	bf18      	it	ne
 8001286:	2300      	movne	r3, #0
 8001288:	680e      	ldr	r6, [r1, #0]
 800128a:	bf08      	it	eq
 800128c:	694b      	ldreq	r3, [r1, #20]
 800128e:	eba6 0807 	sub.w	r8, r6, r7
 8001292:	600f      	str	r7, [r1, #0]
 8001294:	608b      	str	r3, [r1, #8]
 8001296:	f1b8 0f00 	cmp.w	r8, #0
 800129a:	dd9c      	ble.n	80011d6 <__sflush_r+0x1a>
 800129c:	4643      	mov	r3, r8
 800129e:	463a      	mov	r2, r7
 80012a0:	6a21      	ldr	r1, [r4, #32]
 80012a2:	4628      	mov	r0, r5
 80012a4:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80012a6:	47b0      	blx	r6
 80012a8:	2800      	cmp	r0, #0
 80012aa:	dc06      	bgt.n	80012ba <__sflush_r+0xfe>
 80012ac:	89a3      	ldrh	r3, [r4, #12]
 80012ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012b2:	81a3      	strh	r3, [r4, #12]
 80012b4:	f04f 30ff 	mov.w	r0, #4294967295
 80012b8:	e78e      	b.n	80011d8 <__sflush_r+0x1c>
 80012ba:	4407      	add	r7, r0
 80012bc:	eba8 0800 	sub.w	r8, r8, r0
 80012c0:	e7e9      	b.n	8001296 <__sflush_r+0xda>
 80012c2:	bf00      	nop
 80012c4:	20400001 	.word	0x20400001

080012c8 <_fflush_r>:
 80012c8:	b538      	push	{r3, r4, r5, lr}
 80012ca:	690b      	ldr	r3, [r1, #16]
 80012cc:	4605      	mov	r5, r0
 80012ce:	460c      	mov	r4, r1
 80012d0:	b1db      	cbz	r3, 800130a <_fflush_r+0x42>
 80012d2:	b118      	cbz	r0, 80012dc <_fflush_r+0x14>
 80012d4:	6983      	ldr	r3, [r0, #24]
 80012d6:	b90b      	cbnz	r3, 80012dc <_fflush_r+0x14>
 80012d8:	f7ff fa06 	bl	80006e8 <__sinit>
 80012dc:	4b0c      	ldr	r3, [pc, #48]	; (8001310 <_fflush_r+0x48>)
 80012de:	429c      	cmp	r4, r3
 80012e0:	d109      	bne.n	80012f6 <_fflush_r+0x2e>
 80012e2:	686c      	ldr	r4, [r5, #4]
 80012e4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80012e8:	b17b      	cbz	r3, 800130a <_fflush_r+0x42>
 80012ea:	4621      	mov	r1, r4
 80012ec:	4628      	mov	r0, r5
 80012ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80012f2:	f7ff bf63 	b.w	80011bc <__sflush_r>
 80012f6:	4b07      	ldr	r3, [pc, #28]	; (8001314 <_fflush_r+0x4c>)
 80012f8:	429c      	cmp	r4, r3
 80012fa:	d101      	bne.n	8001300 <_fflush_r+0x38>
 80012fc:	68ac      	ldr	r4, [r5, #8]
 80012fe:	e7f1      	b.n	80012e4 <_fflush_r+0x1c>
 8001300:	4b05      	ldr	r3, [pc, #20]	; (8001318 <_fflush_r+0x50>)
 8001302:	429c      	cmp	r4, r3
 8001304:	bf08      	it	eq
 8001306:	68ec      	ldreq	r4, [r5, #12]
 8001308:	e7ec      	b.n	80012e4 <_fflush_r+0x1c>
 800130a:	2000      	movs	r0, #0
 800130c:	bd38      	pop	{r3, r4, r5, pc}
 800130e:	bf00      	nop
 8001310:	08001528 	.word	0x08001528
 8001314:	08001548 	.word	0x08001548
 8001318:	08001508 	.word	0x08001508

0800131c <_lseek_r>:
 800131c:	b538      	push	{r3, r4, r5, lr}
 800131e:	4605      	mov	r5, r0
 8001320:	4608      	mov	r0, r1
 8001322:	4611      	mov	r1, r2
 8001324:	2200      	movs	r2, #0
 8001326:	4c05      	ldr	r4, [pc, #20]	; (800133c <_lseek_r+0x20>)
 8001328:	6022      	str	r2, [r4, #0]
 800132a:	461a      	mov	r2, r3
 800132c:	f7ff f89d 	bl	800046a <_lseek>
 8001330:	1c43      	adds	r3, r0, #1
 8001332:	d102      	bne.n	800133a <_lseek_r+0x1e>
 8001334:	6823      	ldr	r3, [r4, #0]
 8001336:	b103      	cbz	r3, 800133a <_lseek_r+0x1e>
 8001338:	602b      	str	r3, [r5, #0]
 800133a:	bd38      	pop	{r3, r4, r5, pc}
 800133c:	200000d0 	.word	0x200000d0

08001340 <__swhatbuf_r>:
 8001340:	b570      	push	{r4, r5, r6, lr}
 8001342:	460e      	mov	r6, r1
 8001344:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001348:	b096      	sub	sp, #88	; 0x58
 800134a:	2900      	cmp	r1, #0
 800134c:	4614      	mov	r4, r2
 800134e:	461d      	mov	r5, r3
 8001350:	da07      	bge.n	8001362 <__swhatbuf_r+0x22>
 8001352:	2300      	movs	r3, #0
 8001354:	602b      	str	r3, [r5, #0]
 8001356:	89b3      	ldrh	r3, [r6, #12]
 8001358:	061a      	lsls	r2, r3, #24
 800135a:	d410      	bmi.n	800137e <__swhatbuf_r+0x3e>
 800135c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001360:	e00e      	b.n	8001380 <__swhatbuf_r+0x40>
 8001362:	466a      	mov	r2, sp
 8001364:	f000 f872 	bl	800144c <_fstat_r>
 8001368:	2800      	cmp	r0, #0
 800136a:	dbf2      	blt.n	8001352 <__swhatbuf_r+0x12>
 800136c:	9a01      	ldr	r2, [sp, #4]
 800136e:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001372:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001376:	425a      	negs	r2, r3
 8001378:	415a      	adcs	r2, r3
 800137a:	602a      	str	r2, [r5, #0]
 800137c:	e7ee      	b.n	800135c <__swhatbuf_r+0x1c>
 800137e:	2340      	movs	r3, #64	; 0x40
 8001380:	2000      	movs	r0, #0
 8001382:	6023      	str	r3, [r4, #0]
 8001384:	b016      	add	sp, #88	; 0x58
 8001386:	bd70      	pop	{r4, r5, r6, pc}

08001388 <__smakebuf_r>:
 8001388:	898b      	ldrh	r3, [r1, #12]
 800138a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800138c:	079d      	lsls	r5, r3, #30
 800138e:	4606      	mov	r6, r0
 8001390:	460c      	mov	r4, r1
 8001392:	d507      	bpl.n	80013a4 <__smakebuf_r+0x1c>
 8001394:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001398:	6023      	str	r3, [r4, #0]
 800139a:	6123      	str	r3, [r4, #16]
 800139c:	2301      	movs	r3, #1
 800139e:	6163      	str	r3, [r4, #20]
 80013a0:	b002      	add	sp, #8
 80013a2:	bd70      	pop	{r4, r5, r6, pc}
 80013a4:	ab01      	add	r3, sp, #4
 80013a6:	466a      	mov	r2, sp
 80013a8:	f7ff ffca 	bl	8001340 <__swhatbuf_r>
 80013ac:	9900      	ldr	r1, [sp, #0]
 80013ae:	4605      	mov	r5, r0
 80013b0:	4630      	mov	r0, r6
 80013b2:	f7ff fa77 	bl	80008a4 <_malloc_r>
 80013b6:	b948      	cbnz	r0, 80013cc <__smakebuf_r+0x44>
 80013b8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013bc:	059a      	lsls	r2, r3, #22
 80013be:	d4ef      	bmi.n	80013a0 <__smakebuf_r+0x18>
 80013c0:	f023 0303 	bic.w	r3, r3, #3
 80013c4:	f043 0302 	orr.w	r3, r3, #2
 80013c8:	81a3      	strh	r3, [r4, #12]
 80013ca:	e7e3      	b.n	8001394 <__smakebuf_r+0xc>
 80013cc:	4b0d      	ldr	r3, [pc, #52]	; (8001404 <__smakebuf_r+0x7c>)
 80013ce:	62b3      	str	r3, [r6, #40]	; 0x28
 80013d0:	89a3      	ldrh	r3, [r4, #12]
 80013d2:	6020      	str	r0, [r4, #0]
 80013d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80013d8:	81a3      	strh	r3, [r4, #12]
 80013da:	9b00      	ldr	r3, [sp, #0]
 80013dc:	6120      	str	r0, [r4, #16]
 80013de:	6163      	str	r3, [r4, #20]
 80013e0:	9b01      	ldr	r3, [sp, #4]
 80013e2:	b15b      	cbz	r3, 80013fc <__smakebuf_r+0x74>
 80013e4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80013e8:	4630      	mov	r0, r6
 80013ea:	f000 f841 	bl	8001470 <_isatty_r>
 80013ee:	b128      	cbz	r0, 80013fc <__smakebuf_r+0x74>
 80013f0:	89a3      	ldrh	r3, [r4, #12]
 80013f2:	f023 0303 	bic.w	r3, r3, #3
 80013f6:	f043 0301 	orr.w	r3, r3, #1
 80013fa:	81a3      	strh	r3, [r4, #12]
 80013fc:	89a3      	ldrh	r3, [r4, #12]
 80013fe:	431d      	orrs	r5, r3
 8001400:	81a5      	strh	r5, [r4, #12]
 8001402:	e7cd      	b.n	80013a0 <__smakebuf_r+0x18>
 8001404:	080006b1 	.word	0x080006b1

08001408 <memchr>:
 8001408:	b510      	push	{r4, lr}
 800140a:	b2c9      	uxtb	r1, r1
 800140c:	4402      	add	r2, r0
 800140e:	4290      	cmp	r0, r2
 8001410:	4603      	mov	r3, r0
 8001412:	d101      	bne.n	8001418 <memchr+0x10>
 8001414:	2300      	movs	r3, #0
 8001416:	e003      	b.n	8001420 <memchr+0x18>
 8001418:	781c      	ldrb	r4, [r3, #0]
 800141a:	3001      	adds	r0, #1
 800141c:	428c      	cmp	r4, r1
 800141e:	d1f6      	bne.n	800140e <memchr+0x6>
 8001420:	4618      	mov	r0, r3
 8001422:	bd10      	pop	{r4, pc}

08001424 <__malloc_lock>:
 8001424:	4770      	bx	lr

08001426 <__malloc_unlock>:
 8001426:	4770      	bx	lr

08001428 <_read_r>:
 8001428:	b538      	push	{r3, r4, r5, lr}
 800142a:	4605      	mov	r5, r0
 800142c:	4608      	mov	r0, r1
 800142e:	4611      	mov	r1, r2
 8001430:	2200      	movs	r2, #0
 8001432:	4c05      	ldr	r4, [pc, #20]	; (8001448 <_read_r+0x20>)
 8001434:	6022      	str	r2, [r4, #0]
 8001436:	461a      	mov	r2, r3
 8001438:	f7fe ffba 	bl	80003b0 <_read>
 800143c:	1c43      	adds	r3, r0, #1
 800143e:	d102      	bne.n	8001446 <_read_r+0x1e>
 8001440:	6823      	ldr	r3, [r4, #0]
 8001442:	b103      	cbz	r3, 8001446 <_read_r+0x1e>
 8001444:	602b      	str	r3, [r5, #0]
 8001446:	bd38      	pop	{r3, r4, r5, pc}
 8001448:	200000d0 	.word	0x200000d0

0800144c <_fstat_r>:
 800144c:	b538      	push	{r3, r4, r5, lr}
 800144e:	2300      	movs	r3, #0
 8001450:	4c06      	ldr	r4, [pc, #24]	; (800146c <_fstat_r+0x20>)
 8001452:	4605      	mov	r5, r0
 8001454:	4608      	mov	r0, r1
 8001456:	4611      	mov	r1, r2
 8001458:	6023      	str	r3, [r4, #0]
 800145a:	f7fe ffed 	bl	8000438 <_fstat>
 800145e:	1c43      	adds	r3, r0, #1
 8001460:	d102      	bne.n	8001468 <_fstat_r+0x1c>
 8001462:	6823      	ldr	r3, [r4, #0]
 8001464:	b103      	cbz	r3, 8001468 <_fstat_r+0x1c>
 8001466:	602b      	str	r3, [r5, #0]
 8001468:	bd38      	pop	{r3, r4, r5, pc}
 800146a:	bf00      	nop
 800146c:	200000d0 	.word	0x200000d0

08001470 <_isatty_r>:
 8001470:	b538      	push	{r3, r4, r5, lr}
 8001472:	2300      	movs	r3, #0
 8001474:	4c05      	ldr	r4, [pc, #20]	; (800148c <_isatty_r+0x1c>)
 8001476:	4605      	mov	r5, r0
 8001478:	4608      	mov	r0, r1
 800147a:	6023      	str	r3, [r4, #0]
 800147c:	f7fe ffeb 	bl	8000456 <_isatty>
 8001480:	1c43      	adds	r3, r0, #1
 8001482:	d102      	bne.n	800148a <_isatty_r+0x1a>
 8001484:	6823      	ldr	r3, [r4, #0]
 8001486:	b103      	cbz	r3, 800148a <_isatty_r+0x1a>
 8001488:	602b      	str	r3, [r5, #0]
 800148a:	bd38      	pop	{r3, r4, r5, pc}
 800148c:	200000d0 	.word	0x200000d0

08001490 <_init>:
 8001490:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001492:	bf00      	nop
 8001494:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001496:	bc08      	pop	{r3}
 8001498:	469e      	mov	lr, r3
 800149a:	4770      	bx	lr

0800149c <_fini>:
 800149c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800149e:	bf00      	nop
 80014a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014a2:	bc08      	pop	{r3}
 80014a4:	469e      	mov	lr, r3
 80014a6:	4770      	bx	lr
