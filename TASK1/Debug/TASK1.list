
TASK1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000840  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000010  08000970  08000970  00010970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000980  08000980  00010988  2**0
                  CONTENTS
  4 .ARM          00000000  08000980  08000980  00010988  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000980  08000988  00010988  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000980  08000980  00010980  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000984  08000984  00010984  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010988  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000988  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000988  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010988  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000059f  00000000  00000000  000109b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000002bd  00000000  00000000  00010f50  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000f0  00000000  00000000  00011210  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 000000a8  00000000  00000000  00011300  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000160b  00000000  00000000  000113a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000081c  00000000  00000000  000129b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00005f7b  00000000  00000000  000131cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  0001914a  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000025c  00000000  00000000  000191c8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000958 	.word	0x08000958

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000958 	.word	0x08000958

08000170 <RCC_u8EnPripheral>:
  	
}


u8 RCC_u8EnPripheral(u8 Copy_u8PrefralEN)
{
 8000170:	b480      	push	{r7}
 8000172:	b085      	sub	sp, #20
 8000174:	af00      	add	r7, sp, #0
 8000176:	4603      	mov	r3, r0
 8000178:	71fb      	strb	r3, [r7, #7]
	u8 Local_u8ST_ERROR =STD_TYPES_OK;
 800017a:	2301      	movs	r3, #1
 800017c:	73fb      	strb	r3, [r7, #15]
	if(Copy_u8PrefralEN<32)
 800017e:	79fb      	ldrb	r3, [r7, #7]
 8000180:	2b1f      	cmp	r3, #31
 8000182:	d809      	bhi.n	8000198 <RCC_u8EnPripheral+0x28>
	{
		RCC_APB2EN_REG |= (1<<Copy_u8PrefralEN);
 8000184:	4b1c      	ldr	r3, [pc, #112]	; (80001f8 <RCC_u8EnPripheral+0x88>)
 8000186:	681b      	ldr	r3, [r3, #0]
 8000188:	79fa      	ldrb	r2, [r7, #7]
 800018a:	2101      	movs	r1, #1
 800018c:	fa01 f202 	lsl.w	r2, r1, r2
 8000190:	4611      	mov	r1, r2
 8000192:	4a19      	ldr	r2, [pc, #100]	; (80001f8 <RCC_u8EnPripheral+0x88>)
 8000194:	430b      	orrs	r3, r1
 8000196:	6013      	str	r3, [r2, #0]
	}
	if(Copy_u8PrefralEN >= 32 && Copy_u8PrefralEN <64)
 8000198:	79fb      	ldrb	r3, [r7, #7]
 800019a:	2b1f      	cmp	r3, #31
 800019c:	d90f      	bls.n	80001be <RCC_u8EnPripheral+0x4e>
 800019e:	79fb      	ldrb	r3, [r7, #7]
 80001a0:	2b3f      	cmp	r3, #63	; 0x3f
 80001a2:	d80c      	bhi.n	80001be <RCC_u8EnPripheral+0x4e>
	{
		Copy_u8PrefralEN  -=32;
 80001a4:	79fb      	ldrb	r3, [r7, #7]
 80001a6:	3b20      	subs	r3, #32
 80001a8:	71fb      	strb	r3, [r7, #7]
		RCC_APB1EN_REG |=(1<<Copy_u8PrefralEN);
 80001aa:	4b14      	ldr	r3, [pc, #80]	; (80001fc <RCC_u8EnPripheral+0x8c>)
 80001ac:	681b      	ldr	r3, [r3, #0]
 80001ae:	79fa      	ldrb	r2, [r7, #7]
 80001b0:	2101      	movs	r1, #1
 80001b2:	fa01 f202 	lsl.w	r2, r1, r2
 80001b6:	4611      	mov	r1, r2
 80001b8:	4a10      	ldr	r2, [pc, #64]	; (80001fc <RCC_u8EnPripheral+0x8c>)
 80001ba:	430b      	orrs	r3, r1
 80001bc:	6013      	str	r3, [r2, #0]
	}
	if(Copy_u8PrefralEN >= 32 && Copy_u8PrefralEN <64)
 80001be:	79fb      	ldrb	r3, [r7, #7]
 80001c0:	2b1f      	cmp	r3, #31
 80001c2:	d910      	bls.n	80001e6 <RCC_u8EnPripheral+0x76>
 80001c4:	79fb      	ldrb	r3, [r7, #7]
 80001c6:	2b3f      	cmp	r3, #63	; 0x3f
 80001c8:	d80d      	bhi.n	80001e6 <RCC_u8EnPripheral+0x76>
	{
		Copy_u8PrefralEN  -=64;
 80001ca:	79fb      	ldrb	r3, [r7, #7]
 80001cc:	3b40      	subs	r3, #64	; 0x40
 80001ce:	71fb      	strb	r3, [r7, #7]
		RCC_AHPEN_REG |=(1<<Copy_u8PrefralEN);
 80001d0:	4b0b      	ldr	r3, [pc, #44]	; (8000200 <RCC_u8EnPripheral+0x90>)
 80001d2:	681b      	ldr	r3, [r3, #0]
 80001d4:	79fa      	ldrb	r2, [r7, #7]
 80001d6:	2101      	movs	r1, #1
 80001d8:	fa01 f202 	lsl.w	r2, r1, r2
 80001dc:	4611      	mov	r1, r2
 80001de:	4a08      	ldr	r2, [pc, #32]	; (8000200 <RCC_u8EnPripheral+0x90>)
 80001e0:	430b      	orrs	r3, r1
 80001e2:	6013      	str	r3, [r2, #0]
 80001e4:	e001      	b.n	80001ea <RCC_u8EnPripheral+0x7a>
	}
	else
	{
		Local_u8ST_ERROR = STD_TYPES_NOK;
 80001e6:	2300      	movs	r3, #0
 80001e8:	73fb      	strb	r3, [r7, #15]
	}
	return Local_u8ST_ERROR;
 80001ea:	7bfb      	ldrb	r3, [r7, #15]
	
}
 80001ec:	4618      	mov	r0, r3
 80001ee:	3714      	adds	r7, #20
 80001f0:	46bd      	mov	sp, r7
 80001f2:	bc80      	pop	{r7}
 80001f4:	4770      	bx	lr
 80001f6:	bf00      	nop
 80001f8:	40021018 	.word	0x40021018
 80001fc:	4002101c 	.word	0x4002101c
 8000200:	40021014 	.word	0x40021014

08000204 <GPIO_voidInit>:
#include "GPIO_interface.h"
#include "GPIO_config.h" 
#include "GPIO_private.h"

u8   GPIO_voidInit(PIN_CINFIG *Copy_strPinConfig)
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	u8 local_statError =STD_TYPES_OK;
 800020c:	2301      	movs	r3, #1
 800020e:	73fb      	strb	r3, [r7, #15]
    if((Copy_strPinConfig->copy_u8port <=GPIOC_U8_PORT) && (Copy_strPinConfig->copy_u8pinNum <= GPIO_U8_PIN15) && (Copy_strPinConfig->copy_PinMode<=0xf))
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	781b      	ldrb	r3, [r3, #0]
 8000214:	2b02      	cmp	r3, #2
 8000216:	f200 8186 	bhi.w	8000526 <GPIO_voidInit+0x322>
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	785b      	ldrb	r3, [r3, #1]
 800021e:	2b0f      	cmp	r3, #15
 8000220:	f200 8181 	bhi.w	8000526 <GPIO_voidInit+0x322>
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	789b      	ldrb	r3, [r3, #2]
 8000228:	2b0f      	cmp	r3, #15
 800022a:	f200 817c 	bhi.w	8000526 <GPIO_voidInit+0x322>
  	{
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	785b      	ldrb	r3, [r3, #1]
 8000232:	2b07      	cmp	r3, #7
 8000234:	f200 80aa 	bhi.w	800038c <GPIO_voidInit+0x188>
	{
	  if(Copy_strPinConfig->copy_u8port ==GPIOA_U8_PORT)
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	781b      	ldrb	r3, [r3, #0]
 800023c:	2b00      	cmp	r3, #0
 800023e:	d133      	bne.n	80002a8 <GPIO_voidInit+0xa4>
	  {
		  GPIOA_U32_CRL_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 8000240:	4b8a      	ldr	r3, [pc, #552]	; (800046c <GPIO_voidInit+0x268>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	687a      	ldr	r2, [r7, #4]
 8000246:	7852      	ldrb	r2, [r2, #1]
 8000248:	0092      	lsls	r2, r2, #2
 800024a:	210f      	movs	r1, #15
 800024c:	fa01 f202 	lsl.w	r2, r1, r2
 8000250:	43d2      	mvns	r2, r2
 8000252:	4611      	mov	r1, r2
 8000254:	4a85      	ldr	r2, [pc, #532]	; (800046c <GPIO_voidInit+0x268>)
 8000256:	400b      	ands	r3, r1
 8000258:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 800025a:	687b      	ldr	r3, [r7, #4]
 800025c:	789b      	ldrb	r3, [r3, #2]
 800025e:	2b0c      	cmp	r3, #12
 8000260:	d114      	bne.n	800028c <GPIO_voidInit+0x88>
		  {
			GPIOA_U32_CRL_REG |=(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 8000262:	4b82      	ldr	r3, [pc, #520]	; (800046c <GPIO_voidInit+0x268>)
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	687a      	ldr	r2, [r7, #4]
 8000268:	7852      	ldrb	r2, [r2, #1]
 800026a:	0092      	lsls	r2, r2, #2
 800026c:	2108      	movs	r1, #8
 800026e:	fa01 f202 	lsl.w	r2, r1, r2
 8000272:	4611      	mov	r1, r2
 8000274:	4a7d      	ldr	r2, [pc, #500]	; (800046c <GPIO_voidInit+0x268>)
 8000276:	430b      	orrs	r3, r1
 8000278:	6013      	str	r3, [r2, #0]
            GPIOA_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	785b      	ldrb	r3, [r3, #1]
 800027e:	461a      	mov	r2, r3
 8000280:	2301      	movs	r3, #1
 8000282:	fa03 f202 	lsl.w	r2, r3, r2
 8000286:	4b7a      	ldr	r3, [pc, #488]	; (8000470 <GPIO_voidInit+0x26c>)
 8000288:	601a      	str	r2, [r3, #0]
 800028a:	e00d      	b.n	80002a8 <GPIO_voidInit+0xa4>
		  }
		  else
		  {

			 GPIOA_U32_CRL_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 800028c:	4b77      	ldr	r3, [pc, #476]	; (800046c <GPIO_voidInit+0x268>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	687a      	ldr	r2, [r7, #4]
 8000292:	7892      	ldrb	r2, [r2, #2]
 8000294:	4611      	mov	r1, r2
 8000296:	687a      	ldr	r2, [r7, #4]
 8000298:	7852      	ldrb	r2, [r2, #1]
 800029a:	0092      	lsls	r2, r2, #2
 800029c:	fa01 f202 	lsl.w	r2, r1, r2
 80002a0:	4611      	mov	r1, r2
 80002a2:	4a72      	ldr	r2, [pc, #456]	; (800046c <GPIO_voidInit+0x268>)
 80002a4:	430b      	orrs	r3, r1
 80002a6:	6013      	str	r3, [r2, #0]
		  }
	
	  }
	  if(Copy_strPinConfig->copy_u8port ==GPIOB_U8_PORT)
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	781b      	ldrb	r3, [r3, #0]
 80002ac:	2b01      	cmp	r3, #1
 80002ae:	d133      	bne.n	8000318 <GPIO_voidInit+0x114>
	  {
		  GPIOB_U32_CRL_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80002b0:	4b70      	ldr	r3, [pc, #448]	; (8000474 <GPIO_voidInit+0x270>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	687a      	ldr	r2, [r7, #4]
 80002b6:	7852      	ldrb	r2, [r2, #1]
 80002b8:	0092      	lsls	r2, r2, #2
 80002ba:	210f      	movs	r1, #15
 80002bc:	fa01 f202 	lsl.w	r2, r1, r2
 80002c0:	43d2      	mvns	r2, r2
 80002c2:	4611      	mov	r1, r2
 80002c4:	4a6b      	ldr	r2, [pc, #428]	; (8000474 <GPIO_voidInit+0x270>)
 80002c6:	400b      	ands	r3, r1
 80002c8:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	789b      	ldrb	r3, [r3, #2]
 80002ce:	2b0c      	cmp	r3, #12
 80002d0:	d114      	bne.n	80002fc <GPIO_voidInit+0xf8>
		  {
			GPIOB_U32_CRL_REG |=(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80002d2:	4b68      	ldr	r3, [pc, #416]	; (8000474 <GPIO_voidInit+0x270>)
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	687a      	ldr	r2, [r7, #4]
 80002d8:	7852      	ldrb	r2, [r2, #1]
 80002da:	0092      	lsls	r2, r2, #2
 80002dc:	2108      	movs	r1, #8
 80002de:	fa01 f202 	lsl.w	r2, r1, r2
 80002e2:	4611      	mov	r1, r2
 80002e4:	4a63      	ldr	r2, [pc, #396]	; (8000474 <GPIO_voidInit+0x270>)
 80002e6:	430b      	orrs	r3, r1
 80002e8:	6013      	str	r3, [r2, #0]
            GPIOB_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	785b      	ldrb	r3, [r3, #1]
 80002ee:	461a      	mov	r2, r3
 80002f0:	2301      	movs	r3, #1
 80002f2:	fa03 f202 	lsl.w	r2, r3, r2
 80002f6:	4b60      	ldr	r3, [pc, #384]	; (8000478 <GPIO_voidInit+0x274>)
 80002f8:	601a      	str	r2, [r3, #0]
 80002fa:	e00d      	b.n	8000318 <GPIO_voidInit+0x114>
		  }
		  else
		  {
			 GPIOB_U32_CRL_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 80002fc:	4b5d      	ldr	r3, [pc, #372]	; (8000474 <GPIO_voidInit+0x270>)
 80002fe:	681b      	ldr	r3, [r3, #0]
 8000300:	687a      	ldr	r2, [r7, #4]
 8000302:	7892      	ldrb	r2, [r2, #2]
 8000304:	4611      	mov	r1, r2
 8000306:	687a      	ldr	r2, [r7, #4]
 8000308:	7852      	ldrb	r2, [r2, #1]
 800030a:	0092      	lsls	r2, r2, #2
 800030c:	fa01 f202 	lsl.w	r2, r1, r2
 8000310:	4611      	mov	r1, r2
 8000312:	4a58      	ldr	r2, [pc, #352]	; (8000474 <GPIO_voidInit+0x270>)
 8000314:	430b      	orrs	r3, r1
 8000316:	6013      	str	r3, [r2, #0]
		  }
	
	  }
	  if(Copy_strPinConfig->copy_u8port ==GPIOC_U8_PORT)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	781b      	ldrb	r3, [r3, #0]
 800031c:	2b02      	cmp	r3, #2
 800031e:	f040 8105 	bne.w	800052c <GPIO_voidInit+0x328>
	  {
		  GPIOC_U32_CRL_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 8000322:	4b56      	ldr	r3, [pc, #344]	; (800047c <GPIO_voidInit+0x278>)
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	687a      	ldr	r2, [r7, #4]
 8000328:	7852      	ldrb	r2, [r2, #1]
 800032a:	0092      	lsls	r2, r2, #2
 800032c:	210f      	movs	r1, #15
 800032e:	fa01 f202 	lsl.w	r2, r1, r2
 8000332:	43d2      	mvns	r2, r2
 8000334:	4611      	mov	r1, r2
 8000336:	4a51      	ldr	r2, [pc, #324]	; (800047c <GPIO_voidInit+0x278>)
 8000338:	400b      	ands	r3, r1
 800033a:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	789b      	ldrb	r3, [r3, #2]
 8000340:	2b0c      	cmp	r3, #12
 8000342:	d114      	bne.n	800036e <GPIO_voidInit+0x16a>
		  {
			GPIOC_U32_CRL_REG |=(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 8000344:	4b4d      	ldr	r3, [pc, #308]	; (800047c <GPIO_voidInit+0x278>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	687a      	ldr	r2, [r7, #4]
 800034a:	7852      	ldrb	r2, [r2, #1]
 800034c:	0092      	lsls	r2, r2, #2
 800034e:	2108      	movs	r1, #8
 8000350:	fa01 f202 	lsl.w	r2, r1, r2
 8000354:	4611      	mov	r1, r2
 8000356:	4a49      	ldr	r2, [pc, #292]	; (800047c <GPIO_voidInit+0x278>)
 8000358:	430b      	orrs	r3, r1
 800035a:	6013      	str	r3, [r2, #0]
            GPIOC_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	785b      	ldrb	r3, [r3, #1]
 8000360:	461a      	mov	r2, r3
 8000362:	2301      	movs	r3, #1
 8000364:	fa03 f202 	lsl.w	r2, r3, r2
 8000368:	4b45      	ldr	r3, [pc, #276]	; (8000480 <GPIO_voidInit+0x27c>)
 800036a:	601a      	str	r2, [r3, #0]
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 800036c:	e0de      	b.n	800052c <GPIO_voidInit+0x328>
		  }
		  else
		  {
			 GPIOC_U32_CRL_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 800036e:	4b43      	ldr	r3, [pc, #268]	; (800047c <GPIO_voidInit+0x278>)
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	687a      	ldr	r2, [r7, #4]
 8000374:	7892      	ldrb	r2, [r2, #2]
 8000376:	4611      	mov	r1, r2
 8000378:	687a      	ldr	r2, [r7, #4]
 800037a:	7852      	ldrb	r2, [r2, #1]
 800037c:	0092      	lsls	r2, r2, #2
 800037e:	fa01 f202 	lsl.w	r2, r1, r2
 8000382:	4611      	mov	r1, r2
 8000384:	4a3d      	ldr	r2, [pc, #244]	; (800047c <GPIO_voidInit+0x278>)
 8000386:	430b      	orrs	r3, r1
 8000388:	6013      	str	r3, [r2, #0]
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 800038a:	e0cf      	b.n	800052c <GPIO_voidInit+0x328>
	
	  }
	}
    else
    {
    	Copy_strPinConfig->copy_u8pinNum  -= 8;
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	785b      	ldrb	r3, [r3, #1]
 8000390:	3b08      	subs	r3, #8
 8000392:	b2da      	uxtb	r2, r3
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	705a      	strb	r2, [r3, #1]
		if(Copy_strPinConfig->copy_u8port ==GPIOA_U8_PORT)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	781b      	ldrb	r3, [r3, #0]
 800039c:	2b00      	cmp	r3, #0
 800039e:	d139      	bne.n	8000414 <GPIO_voidInit+0x210>
	    {
	   	GPIOA_U32_CRH_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80003a0:	4b38      	ldr	r3, [pc, #224]	; (8000484 <GPIO_voidInit+0x280>)
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	687a      	ldr	r2, [r7, #4]
 80003a6:	7852      	ldrb	r2, [r2, #1]
 80003a8:	0092      	lsls	r2, r2, #2
 80003aa:	210f      	movs	r1, #15
 80003ac:	fa01 f202 	lsl.w	r2, r1, r2
 80003b0:	43d2      	mvns	r2, r2
 80003b2:	4611      	mov	r1, r2
 80003b4:	4a33      	ldr	r2, [pc, #204]	; (8000484 <GPIO_voidInit+0x280>)
 80003b6:	400b      	ands	r3, r1
 80003b8:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	789b      	ldrb	r3, [r3, #2]
 80003be:	2b0c      	cmp	r3, #12
 80003c0:	d11a      	bne.n	80003f8 <GPIO_voidInit+0x1f4>
		  {
			GPIOA_U32_CRH_REG |=(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80003c2:	4b30      	ldr	r3, [pc, #192]	; (8000484 <GPIO_voidInit+0x280>)
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	687a      	ldr	r2, [r7, #4]
 80003c8:	7852      	ldrb	r2, [r2, #1]
 80003ca:	0092      	lsls	r2, r2, #2
 80003cc:	2108      	movs	r1, #8
 80003ce:	fa01 f202 	lsl.w	r2, r1, r2
 80003d2:	4611      	mov	r1, r2
 80003d4:	4a2b      	ldr	r2, [pc, #172]	; (8000484 <GPIO_voidInit+0x280>)
 80003d6:	430b      	orrs	r3, r1
 80003d8:	6013      	str	r3, [r2, #0]
			Copy_strPinConfig->copy_u8pinNum  += 8;
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	785b      	ldrb	r3, [r3, #1]
 80003de:	3308      	adds	r3, #8
 80003e0:	b2da      	uxtb	r2, r3
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	705a      	strb	r2, [r3, #1]
            GPIOA_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	785b      	ldrb	r3, [r3, #1]
 80003ea:	461a      	mov	r2, r3
 80003ec:	2301      	movs	r3, #1
 80003ee:	fa03 f202 	lsl.w	r2, r3, r2
 80003f2:	4b1f      	ldr	r3, [pc, #124]	; (8000470 <GPIO_voidInit+0x26c>)
 80003f4:	601a      	str	r2, [r3, #0]
 80003f6:	e00d      	b.n	8000414 <GPIO_voidInit+0x210>
		  }
		  else
		  {
			 GPIOA_U32_CRH_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 80003f8:	4b22      	ldr	r3, [pc, #136]	; (8000484 <GPIO_voidInit+0x280>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	687a      	ldr	r2, [r7, #4]
 80003fe:	7892      	ldrb	r2, [r2, #2]
 8000400:	4611      	mov	r1, r2
 8000402:	687a      	ldr	r2, [r7, #4]
 8000404:	7852      	ldrb	r2, [r2, #1]
 8000406:	0092      	lsls	r2, r2, #2
 8000408:	fa01 f202 	lsl.w	r2, r1, r2
 800040c:	4611      	mov	r1, r2
 800040e:	4a1d      	ldr	r2, [pc, #116]	; (8000484 <GPIO_voidInit+0x280>)
 8000410:	430b      	orrs	r3, r1
 8000412:	6013      	str	r3, [r2, #0]
		  }
	
	  }
	  if(Copy_strPinConfig->copy_u8port ==GPIOB_U8_PORT)
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	781b      	ldrb	r3, [r3, #0]
 8000418:	2b01      	cmp	r3, #1
 800041a:	d145      	bne.n	80004a8 <GPIO_voidInit+0x2a4>
	  {
		  GPIOB_U32_CRH_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 800041c:	4b1a      	ldr	r3, [pc, #104]	; (8000488 <GPIO_voidInit+0x284>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	687a      	ldr	r2, [r7, #4]
 8000422:	7852      	ldrb	r2, [r2, #1]
 8000424:	0092      	lsls	r2, r2, #2
 8000426:	210f      	movs	r1, #15
 8000428:	fa01 f202 	lsl.w	r2, r1, r2
 800042c:	43d2      	mvns	r2, r2
 800042e:	4611      	mov	r1, r2
 8000430:	4a15      	ldr	r2, [pc, #84]	; (8000488 <GPIO_voidInit+0x284>)
 8000432:	400b      	ands	r3, r1
 8000434:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	789b      	ldrb	r3, [r3, #2]
 800043a:	2b0c      	cmp	r3, #12
 800043c:	d126      	bne.n	800048c <GPIO_voidInit+0x288>
		  {
			GPIOB_U32_CRH_REG =(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	785b      	ldrb	r3, [r3, #1]
 8000442:	009b      	lsls	r3, r3, #2
 8000444:	2208      	movs	r2, #8
 8000446:	409a      	lsls	r2, r3
 8000448:	4b0f      	ldr	r3, [pc, #60]	; (8000488 <GPIO_voidInit+0x284>)
 800044a:	601a      	str	r2, [r3, #0]
			Copy_strPinConfig->copy_u8pinNum  += 8;
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	785b      	ldrb	r3, [r3, #1]
 8000450:	3308      	adds	r3, #8
 8000452:	b2da      	uxtb	r2, r3
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	705a      	strb	r2, [r3, #1]
            GPIOB_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	785b      	ldrb	r3, [r3, #1]
 800045c:	461a      	mov	r2, r3
 800045e:	2301      	movs	r3, #1
 8000460:	fa03 f202 	lsl.w	r2, r3, r2
 8000464:	4b04      	ldr	r3, [pc, #16]	; (8000478 <GPIO_voidInit+0x274>)
 8000466:	601a      	str	r2, [r3, #0]
 8000468:	e01e      	b.n	80004a8 <GPIO_voidInit+0x2a4>
 800046a:	bf00      	nop
 800046c:	40010800 	.word	0x40010800
 8000470:	40010810 	.word	0x40010810
 8000474:	40010c00 	.word	0x40010c00
 8000478:	40010c10 	.word	0x40010c10
 800047c:	40011000 	.word	0x40011000
 8000480:	40011010 	.word	0x40011010
 8000484:	40010804 	.word	0x40010804
 8000488:	40010c04 	.word	0x40010c04
		  }
		  else
		  {
			 GPIOB_U32_CRH_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 800048c:	4b2b      	ldr	r3, [pc, #172]	; (800053c <GPIO_voidInit+0x338>)
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	687a      	ldr	r2, [r7, #4]
 8000492:	7892      	ldrb	r2, [r2, #2]
 8000494:	4611      	mov	r1, r2
 8000496:	687a      	ldr	r2, [r7, #4]
 8000498:	7852      	ldrb	r2, [r2, #1]
 800049a:	0092      	lsls	r2, r2, #2
 800049c:	fa01 f202 	lsl.w	r2, r1, r2
 80004a0:	4611      	mov	r1, r2
 80004a2:	4a26      	ldr	r2, [pc, #152]	; (800053c <GPIO_voidInit+0x338>)
 80004a4:	430b      	orrs	r3, r1
 80004a6:	6013      	str	r3, [r2, #0]
		  }
	
	  }
	  if(Copy_strPinConfig->copy_u8port ==GPIOC_U8_PORT)
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	781b      	ldrb	r3, [r3, #0]
 80004ac:	2b02      	cmp	r3, #2
 80004ae:	d13d      	bne.n	800052c <GPIO_voidInit+0x328>
	  {
		  GPIOC_U32_CRH_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80004b0:	4b23      	ldr	r3, [pc, #140]	; (8000540 <GPIO_voidInit+0x33c>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	687a      	ldr	r2, [r7, #4]
 80004b6:	7852      	ldrb	r2, [r2, #1]
 80004b8:	0092      	lsls	r2, r2, #2
 80004ba:	210f      	movs	r1, #15
 80004bc:	fa01 f202 	lsl.w	r2, r1, r2
 80004c0:	43d2      	mvns	r2, r2
 80004c2:	4611      	mov	r1, r2
 80004c4:	4a1e      	ldr	r2, [pc, #120]	; (8000540 <GPIO_voidInit+0x33c>)
 80004c6:	400b      	ands	r3, r1
 80004c8:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	789b      	ldrb	r3, [r3, #2]
 80004ce:	2b0c      	cmp	r3, #12
 80004d0:	d11a      	bne.n	8000508 <GPIO_voidInit+0x304>
		  {
			GPIOC_U32_CRH_REG |=(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80004d2:	4b1b      	ldr	r3, [pc, #108]	; (8000540 <GPIO_voidInit+0x33c>)
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	687a      	ldr	r2, [r7, #4]
 80004d8:	7852      	ldrb	r2, [r2, #1]
 80004da:	0092      	lsls	r2, r2, #2
 80004dc:	2108      	movs	r1, #8
 80004de:	fa01 f202 	lsl.w	r2, r1, r2
 80004e2:	4611      	mov	r1, r2
 80004e4:	4a16      	ldr	r2, [pc, #88]	; (8000540 <GPIO_voidInit+0x33c>)
 80004e6:	430b      	orrs	r3, r1
 80004e8:	6013      	str	r3, [r2, #0]
			Copy_strPinConfig->copy_u8pinNum  += 8;
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	785b      	ldrb	r3, [r3, #1]
 80004ee:	3308      	adds	r3, #8
 80004f0:	b2da      	uxtb	r2, r3
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	705a      	strb	r2, [r3, #1]
            GPIOC_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	785b      	ldrb	r3, [r3, #1]
 80004fa:	461a      	mov	r2, r3
 80004fc:	2301      	movs	r3, #1
 80004fe:	fa03 f202 	lsl.w	r2, r3, r2
 8000502:	4b10      	ldr	r3, [pc, #64]	; (8000544 <GPIO_voidInit+0x340>)
 8000504:	601a      	str	r2, [r3, #0]
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 8000506:	e011      	b.n	800052c <GPIO_voidInit+0x328>
		  }
		  else
		  {
			 GPIOC_U32_CRH_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 8000508:	4b0d      	ldr	r3, [pc, #52]	; (8000540 <GPIO_voidInit+0x33c>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	687a      	ldr	r2, [r7, #4]
 800050e:	7892      	ldrb	r2, [r2, #2]
 8000510:	4611      	mov	r1, r2
 8000512:	687a      	ldr	r2, [r7, #4]
 8000514:	7852      	ldrb	r2, [r2, #1]
 8000516:	0092      	lsls	r2, r2, #2
 8000518:	fa01 f202 	lsl.w	r2, r1, r2
 800051c:	4611      	mov	r1, r2
 800051e:	4a08      	ldr	r2, [pc, #32]	; (8000540 <GPIO_voidInit+0x33c>)
 8000520:	430b      	orrs	r3, r1
 8000522:	6013      	str	r3, [r2, #0]
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 8000524:	e002      	b.n	800052c <GPIO_voidInit+0x328>
	}		
	  
 }
   else
	{
		local_statError =STD_TYPES_NOK;
 8000526:	2300      	movs	r3, #0
 8000528:	73fb      	strb	r3, [r7, #15]
 800052a:	e000      	b.n	800052e <GPIO_voidInit+0x32a>
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 800052c:	bf00      	nop
	}
	return local_statError;
 800052e:	7bfb      	ldrb	r3, [r7, #15]
}    
 8000530:	4618      	mov	r0, r3
 8000532:	3714      	adds	r7, #20
 8000534:	46bd      	mov	sp, r7
 8000536:	bc80      	pop	{r7}
 8000538:	4770      	bx	lr
 800053a:	bf00      	nop
 800053c:	40010c04 	.word	0x40010c04
 8000540:	40011004 	.word	0x40011004
 8000544:	40011010 	.word	0x40011010

08000548 <GPIO_u8SetPinValue>:


u8   GPIO_u8SetPinValue(u8 copy_u8port,u8 copy_u8pinNum,u8 copy_u8Val)
{
 8000548:	b480      	push	{r7}
 800054a:	b085      	sub	sp, #20
 800054c:	af00      	add	r7, sp, #0
 800054e:	4603      	mov	r3, r0
 8000550:	71fb      	strb	r3, [r7, #7]
 8000552:	460b      	mov	r3, r1
 8000554:	71bb      	strb	r3, [r7, #6]
 8000556:	4613      	mov	r3, r2
 8000558:	717b      	strb	r3, [r7, #5]
	u8 local_u8StatError  = STD_TYPES_OK;
 800055a:	2301      	movs	r3, #1
 800055c:	73fb      	strb	r3, [r7, #15]
	if(copy_u8port <= GPIOC_U8_PORT && copy_u8pinNum <= GPIO_U8_PIN15 && copy_u8Val <= GPIO_U8_HIGH)
 800055e:	79fb      	ldrb	r3, [r7, #7]
 8000560:	2b02      	cmp	r3, #2
 8000562:	d84d      	bhi.n	8000600 <GPIO_u8SetPinValue+0xb8>
 8000564:	79bb      	ldrb	r3, [r7, #6]
 8000566:	2b0f      	cmp	r3, #15
 8000568:	d84a      	bhi.n	8000600 <GPIO_u8SetPinValue+0xb8>
 800056a:	797b      	ldrb	r3, [r7, #5]
 800056c:	2b01      	cmp	r3, #1
 800056e:	d847      	bhi.n	8000600 <GPIO_u8SetPinValue+0xb8>
	{
	  if(copy_u8port == GPIOA_U8_PORT)
 8000570:	79fb      	ldrb	r3, [r7, #7]
 8000572:	2b00      	cmp	r3, #0
 8000574:	d114      	bne.n	80005a0 <GPIO_u8SetPinValue+0x58>
	  {
		if(copy_u8Val == GPIO_U8_LOW)
 8000576:	797b      	ldrb	r3, [r7, #5]
 8000578:	2b00      	cmp	r3, #0
 800057a:	d108      	bne.n	800058e <GPIO_u8SetPinValue+0x46>
		{
			copy_u8pinNum +=16;
 800057c:	79bb      	ldrb	r3, [r7, #6]
 800057e:	3310      	adds	r3, #16
 8000580:	71bb      	strb	r3, [r7, #6]
			GPIOA_U32_BSRR_REG = (1<<copy_u8pinNum); 
 8000582:	79bb      	ldrb	r3, [r7, #6]
 8000584:	2201      	movs	r2, #1
 8000586:	409a      	lsls	r2, r3
 8000588:	4b22      	ldr	r3, [pc, #136]	; (8000614 <GPIO_u8SetPinValue+0xcc>)
 800058a:	601a      	str	r2, [r3, #0]
	  if(copy_u8port == GPIOA_U8_PORT)
 800058c:	e03b      	b.n	8000606 <GPIO_u8SetPinValue+0xbe>
		}
        else if(copy_u8Val == GPIO_U8_HIGH)
 800058e:	797b      	ldrb	r3, [r7, #5]
 8000590:	2b01      	cmp	r3, #1
 8000592:	d138      	bne.n	8000606 <GPIO_u8SetPinValue+0xbe>
        {
		GPIOA_U32_BSRR_REG = (1<<copy_u8pinNum);
 8000594:	79bb      	ldrb	r3, [r7, #6]
 8000596:	2201      	movs	r2, #1
 8000598:	409a      	lsls	r2, r3
 800059a:	4b1e      	ldr	r3, [pc, #120]	; (8000614 <GPIO_u8SetPinValue+0xcc>)
 800059c:	601a      	str	r2, [r3, #0]
	  if(copy_u8port == GPIOA_U8_PORT)
 800059e:	e032      	b.n	8000606 <GPIO_u8SetPinValue+0xbe>
		}			
	  }
	  
	else if(copy_u8port == GPIOB_U8_PORT)
 80005a0:	79fb      	ldrb	r3, [r7, #7]
 80005a2:	2b01      	cmp	r3, #1
 80005a4:	d114      	bne.n	80005d0 <GPIO_u8SetPinValue+0x88>
	  {
		if(copy_u8Val == GPIO_U8_LOW)
 80005a6:	797b      	ldrb	r3, [r7, #5]
 80005a8:	2b00      	cmp	r3, #0
 80005aa:	d108      	bne.n	80005be <GPIO_u8SetPinValue+0x76>
		{
			copy_u8pinNum +=16;
 80005ac:	79bb      	ldrb	r3, [r7, #6]
 80005ae:	3310      	adds	r3, #16
 80005b0:	71bb      	strb	r3, [r7, #6]
			GPIOB_U32_BSRR_REG = (1<<copy_u8pinNum); 
 80005b2:	79bb      	ldrb	r3, [r7, #6]
 80005b4:	2201      	movs	r2, #1
 80005b6:	409a      	lsls	r2, r3
 80005b8:	4b17      	ldr	r3, [pc, #92]	; (8000618 <GPIO_u8SetPinValue+0xd0>)
 80005ba:	601a      	str	r2, [r3, #0]
	  if(copy_u8port == GPIOA_U8_PORT)
 80005bc:	e023      	b.n	8000606 <GPIO_u8SetPinValue+0xbe>
		}
        else if(copy_u8Val == GPIO_U8_HIGH)
 80005be:	797b      	ldrb	r3, [r7, #5]
 80005c0:	2b01      	cmp	r3, #1
 80005c2:	d120      	bne.n	8000606 <GPIO_u8SetPinValue+0xbe>
        {
		GPIOB_U32_BSRR_REG = (1<<copy_u8pinNum);
 80005c4:	79bb      	ldrb	r3, [r7, #6]
 80005c6:	2201      	movs	r2, #1
 80005c8:	409a      	lsls	r2, r3
 80005ca:	4b13      	ldr	r3, [pc, #76]	; (8000618 <GPIO_u8SetPinValue+0xd0>)
 80005cc:	601a      	str	r2, [r3, #0]
	  if(copy_u8port == GPIOA_U8_PORT)
 80005ce:	e01a      	b.n	8000606 <GPIO_u8SetPinValue+0xbe>
		}			
	  }
	  
	 else if(copy_u8port == GPIOC_U8_PORT)
 80005d0:	79fb      	ldrb	r3, [r7, #7]
 80005d2:	2b02      	cmp	r3, #2
 80005d4:	d117      	bne.n	8000606 <GPIO_u8SetPinValue+0xbe>
	  {
		if(copy_u8Val == GPIO_U8_LOW)
 80005d6:	797b      	ldrb	r3, [r7, #5]
 80005d8:	2b00      	cmp	r3, #0
 80005da:	d108      	bne.n	80005ee <GPIO_u8SetPinValue+0xa6>
		{
			copy_u8pinNum +=16;
 80005dc:	79bb      	ldrb	r3, [r7, #6]
 80005de:	3310      	adds	r3, #16
 80005e0:	71bb      	strb	r3, [r7, #6]
			GPIOC_U32_BSRR_REG = (1<<copy_u8pinNum); 
 80005e2:	79bb      	ldrb	r3, [r7, #6]
 80005e4:	2201      	movs	r2, #1
 80005e6:	409a      	lsls	r2, r3
 80005e8:	4b0c      	ldr	r3, [pc, #48]	; (800061c <GPIO_u8SetPinValue+0xd4>)
 80005ea:	601a      	str	r2, [r3, #0]
	  if(copy_u8port == GPIOA_U8_PORT)
 80005ec:	e00b      	b.n	8000606 <GPIO_u8SetPinValue+0xbe>
		}
        else if(copy_u8Val == GPIO_U8_HIGH)
 80005ee:	797b      	ldrb	r3, [r7, #5]
 80005f0:	2b01      	cmp	r3, #1
 80005f2:	d108      	bne.n	8000606 <GPIO_u8SetPinValue+0xbe>
        {
		GPIOC_U32_BSRR_REG = (1<<copy_u8pinNum);
 80005f4:	79bb      	ldrb	r3, [r7, #6]
 80005f6:	2201      	movs	r2, #1
 80005f8:	409a      	lsls	r2, r3
 80005fa:	4b08      	ldr	r3, [pc, #32]	; (800061c <GPIO_u8SetPinValue+0xd4>)
 80005fc:	601a      	str	r2, [r3, #0]
	  if(copy_u8port == GPIOA_U8_PORT)
 80005fe:	e002      	b.n	8000606 <GPIO_u8SetPinValue+0xbe>
	  }

	}
	else
	{
		local_u8StatError  = STD_TYPES_NOK;
 8000600:	2300      	movs	r3, #0
 8000602:	73fb      	strb	r3, [r7, #15]
 8000604:	e000      	b.n	8000608 <GPIO_u8SetPinValue+0xc0>
	  if(copy_u8port == GPIOA_U8_PORT)
 8000606:	bf00      	nop
	}
	return local_u8StatError;              
 8000608:	7bfb      	ldrb	r3, [r7, #15]
}
 800060a:	4618      	mov	r0, r3
 800060c:	3714      	adds	r7, #20
 800060e:	46bd      	mov	sp, r7
 8000610:	bc80      	pop	{r7}
 8000612:	4770      	bx	lr
 8000614:	40010810 	.word	0x40010810
 8000618:	40010c10 	.word	0x40010c10
 800061c:	40011010 	.word	0x40011010

08000620 <GPIO_u8GetPinValue>:

u8   GPIO_u8GetPinValue(u8 copy_u8port,u8 copy_u8pinNum,u8 *get_u8PinVal)
{
 8000620:	b480      	push	{r7}
 8000622:	b085      	sub	sp, #20
 8000624:	af00      	add	r7, sp, #0
 8000626:	4603      	mov	r3, r0
 8000628:	603a      	str	r2, [r7, #0]
 800062a:	71fb      	strb	r3, [r7, #7]
 800062c:	460b      	mov	r3, r1
 800062e:	71bb      	strb	r3, [r7, #6]
  	u8 local_u8StatError  = STD_TYPES_OK;
 8000630:	2301      	movs	r3, #1
 8000632:	73fb      	strb	r3, [r7, #15]
	if(copy_u8port <= GPIOC_U8_PORT && copy_u8pinNum <= GPIO_U8_PIN15 && get_u8PinVal !=NULL)
 8000634:	79fb      	ldrb	r3, [r7, #7]
 8000636:	2b02      	cmp	r3, #2
 8000638:	d832      	bhi.n	80006a0 <GPIO_u8GetPinValue+0x80>
 800063a:	79bb      	ldrb	r3, [r7, #6]
 800063c:	2b0f      	cmp	r3, #15
 800063e:	d82f      	bhi.n	80006a0 <GPIO_u8GetPinValue+0x80>
 8000640:	683b      	ldr	r3, [r7, #0]
 8000642:	2b00      	cmp	r3, #0
 8000644:	d02c      	beq.n	80006a0 <GPIO_u8GetPinValue+0x80>
	{
		if(copy_u8port == GPIOA_U8_PORT)
 8000646:	79fb      	ldrb	r3, [r7, #7]
 8000648:	2b00      	cmp	r3, #0
 800064a:	d10b      	bne.n	8000664 <GPIO_u8GetPinValue+0x44>
		{
		*get_u8PinVal = ((GPIOA_U32_IDR_REG >> copy_u8pinNum)&1);
 800064c:	4b19      	ldr	r3, [pc, #100]	; (80006b4 <GPIO_u8GetPinValue+0x94>)
 800064e:	681a      	ldr	r2, [r3, #0]
 8000650:	79bb      	ldrb	r3, [r7, #6]
 8000652:	fa22 f303 	lsr.w	r3, r2, r3
 8000656:	b2db      	uxtb	r3, r3
 8000658:	f003 0301 	and.w	r3, r3, #1
 800065c:	b2da      	uxtb	r2, r3
 800065e:	683b      	ldr	r3, [r7, #0]
 8000660:	701a      	strb	r2, [r3, #0]
		if(copy_u8port == GPIOA_U8_PORT)
 8000662:	e020      	b.n	80006a6 <GPIO_u8GetPinValue+0x86>
		}
	    else if(copy_u8port == GPIOB_U8_PORT)
 8000664:	79fb      	ldrb	r3, [r7, #7]
 8000666:	2b01      	cmp	r3, #1
 8000668:	d10b      	bne.n	8000682 <GPIO_u8GetPinValue+0x62>
		{

		*get_u8PinVal = ((GPIOB_U32_IDR_REG >> copy_u8pinNum)&1);
 800066a:	4b13      	ldr	r3, [pc, #76]	; (80006b8 <GPIO_u8GetPinValue+0x98>)
 800066c:	681a      	ldr	r2, [r3, #0]
 800066e:	79bb      	ldrb	r3, [r7, #6]
 8000670:	fa22 f303 	lsr.w	r3, r2, r3
 8000674:	b2db      	uxtb	r3, r3
 8000676:	f003 0301 	and.w	r3, r3, #1
 800067a:	b2da      	uxtb	r2, r3
 800067c:	683b      	ldr	r3, [r7, #0]
 800067e:	701a      	strb	r2, [r3, #0]
		if(copy_u8port == GPIOA_U8_PORT)
 8000680:	e011      	b.n	80006a6 <GPIO_u8GetPinValue+0x86>
		}
	    else if(copy_u8port == GPIOC_U8_PORT)
 8000682:	79fb      	ldrb	r3, [r7, #7]
 8000684:	2b02      	cmp	r3, #2
 8000686:	d10e      	bne.n	80006a6 <GPIO_u8GetPinValue+0x86>
		{
		*get_u8PinVal = ((GPIOC_U32_IDR_REG >> copy_u8pinNum)&1);
 8000688:	4b0c      	ldr	r3, [pc, #48]	; (80006bc <GPIO_u8GetPinValue+0x9c>)
 800068a:	681a      	ldr	r2, [r3, #0]
 800068c:	79bb      	ldrb	r3, [r7, #6]
 800068e:	fa22 f303 	lsr.w	r3, r2, r3
 8000692:	b2db      	uxtb	r3, r3
 8000694:	f003 0301 	and.w	r3, r3, #1
 8000698:	b2da      	uxtb	r2, r3
 800069a:	683b      	ldr	r3, [r7, #0]
 800069c:	701a      	strb	r2, [r3, #0]
		if(copy_u8port == GPIOA_U8_PORT)
 800069e:	e002      	b.n	80006a6 <GPIO_u8GetPinValue+0x86>
		}		
	}	
	else
	{
		local_u8StatError  = STD_TYPES_NOK;
 80006a0:	2300      	movs	r3, #0
 80006a2:	73fb      	strb	r3, [r7, #15]
 80006a4:	e000      	b.n	80006a8 <GPIO_u8GetPinValue+0x88>
		if(copy_u8port == GPIOA_U8_PORT)
 80006a6:	bf00      	nop
	}
	return local_u8StatError;
 80006a8:	7bfb      	ldrb	r3, [r7, #15]
}
 80006aa:	4618      	mov	r0, r3
 80006ac:	3714      	adds	r7, #20
 80006ae:	46bd      	mov	sp, r7
 80006b0:	bc80      	pop	{r7}
 80006b2:	4770      	bx	lr
 80006b4:	40010808 	.word	0x40010808
 80006b8:	40010c08 	.word	0x40010c08
 80006bc:	40011008 	.word	0x40011008

080006c0 <sys_tictime>:
#include "STM32f103XX.h"

#include "SYSTICK_TIMER_interface.h"

void sys_tictime(u32 val)
{
 80006c0:	b480      	push	{r7}
 80006c2:	b083      	sub	sp, #12
 80006c4:	af00      	add	r7, sp, #0
 80006c6:	6078      	str	r0, [r7, #4]
	SYST_RVR  = val;
 80006c8:	4a06      	ldr	r2, [pc, #24]	; (80006e4 <sys_tictime+0x24>)
 80006ca:	687b      	ldr	r3, [r7, #4]
 80006cc:	6013      	str	r3, [r2, #0]
	SYST_CSR |=1;
 80006ce:	4b06      	ldr	r3, [pc, #24]	; (80006e8 <sys_tictime+0x28>)
 80006d0:	681b      	ldr	r3, [r3, #0]
 80006d2:	4a05      	ldr	r2, [pc, #20]	; (80006e8 <sys_tictime+0x28>)
 80006d4:	f043 0301 	orr.w	r3, r3, #1
 80006d8:	6013      	str	r3, [r2, #0]

}
 80006da:	bf00      	nop
 80006dc:	370c      	adds	r7, #12
 80006de:	46bd      	mov	sp, r7
 80006e0:	bc80      	pop	{r7}
 80006e2:	4770      	bx	lr
 80006e4:	e000e014 	.word	0xe000e014
 80006e8:	e000e010 	.word	0xe000e010

080006ec <ReturnSystickval>:
u32 ReturnSystickval(void)
{
 80006ec:	b480      	push	{r7}
 80006ee:	b083      	sub	sp, #12
 80006f0:	af00      	add	r7, sp, #0
 u32 x;
  x=  SYST_CVR;
 80006f2:	4b06      	ldr	r3, [pc, #24]	; (800070c <ReturnSystickval+0x20>)
 80006f4:	681b      	ldr	r3, [r3, #0]
 80006f6:	607b      	str	r3, [r7, #4]
  SYST_CVR =0x545855;
 80006f8:	4b04      	ldr	r3, [pc, #16]	; (800070c <ReturnSystickval+0x20>)
 80006fa:	4a05      	ldr	r2, [pc, #20]	; (8000710 <ReturnSystickval+0x24>)
 80006fc:	601a      	str	r2, [r3, #0]
	return x;
 80006fe:	687b      	ldr	r3, [r7, #4]
}
 8000700:	4618      	mov	r0, r3
 8000702:	370c      	adds	r7, #12
 8000704:	46bd      	mov	sp, r7
 8000706:	bc80      	pop	{r7}
 8000708:	4770      	bx	lr
 800070a:	bf00      	nop
 800070c:	e000e018 	.word	0xe000e018
 8000710:	00545855 	.word	0x00545855

08000714 <disableSys_tmr>:
void disableSys_tmr(void)
{
 8000714:	b480      	push	{r7}
 8000716:	af00      	add	r7, sp, #0
	SYST_CSR =0;
 8000718:	4b03      	ldr	r3, [pc, #12]	; (8000728 <disableSys_tmr+0x14>)
 800071a:	2200      	movs	r2, #0
 800071c:	601a      	str	r2, [r3, #0]
}
 800071e:	bf00      	nop
 8000720:	46bd      	mov	sp, r7
 8000722:	bc80      	pop	{r7}
 8000724:	4770      	bx	lr
 8000726:	bf00      	nop
 8000728:	e000e010 	.word	0xe000e010

0800072c <main>:
#include "GPIO_interface.h"
#include "SYSTICK_TIMER_interface.h"


int main(void)
{
 800072c:	b580      	push	{r7, lr}
 800072e:	b086      	sub	sp, #24
 8000730:	af00      	add	r7, sp, #0
	 u8 x=0;
 8000732:	2300      	movs	r3, #0
 8000734:	74fb      	strb	r3, [r7, #19]
	 u32 res=2000000;
 8000736:	4b58      	ldr	r3, [pc, #352]	; (8000898 <main+0x16c>)
 8000738:	617b      	str	r3, [r7, #20]
	PIN_CINFIG str  ={GPIOB_U8_PORT,GPIO_U8_PIN4,GPIO_U8_INPUT_PULLDOWN};
 800073a:	4a58      	ldr	r2, [pc, #352]	; (800089c <main+0x170>)
 800073c:	f107 0310 	add.w	r3, r7, #16
 8000740:	6812      	ldr	r2, [r2, #0]
 8000742:	4611      	mov	r1, r2
 8000744:	8019      	strh	r1, [r3, #0]
 8000746:	3302      	adds	r3, #2
 8000748:	0c12      	lsrs	r2, r2, #16
 800074a:	701a      	strb	r2, [r3, #0]


	PIN_CINFIG str3  ={GPIOA_U8_PORT,GPIO_U8_PIN1,GPIO_U8_OUTPUT_PUSH_PULL_10MHZ };
 800074c:	4a54      	ldr	r2, [pc, #336]	; (80008a0 <main+0x174>)
 800074e:	f107 030c 	add.w	r3, r7, #12
 8000752:	6812      	ldr	r2, [r2, #0]
 8000754:	4611      	mov	r1, r2
 8000756:	8019      	strh	r1, [r3, #0]
 8000758:	3302      	adds	r3, #2
 800075a:	0c12      	lsrs	r2, r2, #16
 800075c:	701a      	strb	r2, [r3, #0]
	PIN_CINFIG str4 ={GPIOA_U8_PORT,GPIO_U8_PIN4,GPIO_U8_OUTPUT_PUSH_PULL_10MHZ };
 800075e:	4a51      	ldr	r2, [pc, #324]	; (80008a4 <main+0x178>)
 8000760:	f107 0308 	add.w	r3, r7, #8
 8000764:	6812      	ldr	r2, [r2, #0]
 8000766:	4611      	mov	r1, r2
 8000768:	8019      	strh	r1, [r3, #0]
 800076a:	3302      	adds	r3, #2
 800076c:	0c12      	lsrs	r2, r2, #16
 800076e:	701a      	strb	r2, [r3, #0]
	PIN_CINFIG str5 ={GPIOA_U8_PORT,GPIO_U8_PIN7,GPIO_U8_OUTPUT_PUSH_PULL_10MHZ };
 8000770:	4a4d      	ldr	r2, [pc, #308]	; (80008a8 <main+0x17c>)
 8000772:	1d3b      	adds	r3, r7, #4
 8000774:	6812      	ldr	r2, [r2, #0]
 8000776:	4611      	mov	r1, r2
 8000778:	8019      	strh	r1, [r3, #0]
 800077a:	3302      	adds	r3, #2
 800077c:	0c12      	lsrs	r2, r2, #16
 800077e:	701a      	strb	r2, [r3, #0]

	RCC_u8EnPripheral(GPIO_U8_PORTB_CLK);
 8000780:	2003      	movs	r0, #3
 8000782:	f7ff fcf5 	bl	8000170 <RCC_u8EnPripheral>
	RCC_u8EnPripheral(GPIO_U8_PORTA_CLK);
 8000786:	2002      	movs	r0, #2
 8000788:	f7ff fcf2 	bl	8000170 <RCC_u8EnPripheral>


	GPIO_voidInit(&str);
 800078c:	f107 0310 	add.w	r3, r7, #16
 8000790:	4618      	mov	r0, r3
 8000792:	f7ff fd37 	bl	8000204 <GPIO_voidInit>


    GPIO_voidInit(&str3);
 8000796:	f107 030c 	add.w	r3, r7, #12
 800079a:	4618      	mov	r0, r3
 800079c:	f7ff fd32 	bl	8000204 <GPIO_voidInit>
	GPIO_voidInit(&str4);
 80007a0:	f107 0308 	add.w	r3, r7, #8
 80007a4:	4618      	mov	r0, r3
 80007a6:	f7ff fd2d 	bl	8000204 <GPIO_voidInit>
	GPIO_voidInit(&str5);
 80007aa:	1d3b      	adds	r3, r7, #4
 80007ac:	4618      	mov	r0, r3
 80007ae:	f7ff fd29 	bl	8000204 <GPIO_voidInit>

	GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN1,GPIO_U8_LOW);
 80007b2:	2200      	movs	r2, #0
 80007b4:	2101      	movs	r1, #1
 80007b6:	2000      	movs	r0, #0
 80007b8:	f7ff fec6 	bl	8000548 <GPIO_u8SetPinValue>
	GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN4,GPIO_U8_LOW);
 80007bc:	2200      	movs	r2, #0
 80007be:	2104      	movs	r1, #4
 80007c0:	2000      	movs	r0, #0
 80007c2:	f7ff fec1 	bl	8000548 <GPIO_u8SetPinValue>
	GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN7,GPIO_U8_LOW);
 80007c6:	2200      	movs	r2, #0
 80007c8:	2107      	movs	r1, #7
 80007ca:	2000      	movs	r0, #0
 80007cc:	f7ff febc 	bl	8000548 <GPIO_u8SetPinValue>
	GPIO_u8SetPinValue(GPIOB_U8_PORT,GPIO_U8_PIN4,GPIO_U8_LOW);
 80007d0:	2200      	movs	r2, #0
 80007d2:	2104      	movs	r1, #4
 80007d4:	2001      	movs	r0, #1
 80007d6:	f7ff feb7 	bl	8000548 <GPIO_u8SetPinValue>

	for(;;)
	{
	while(x!=1)
 80007da:	e006      	b.n	80007ea <main+0xbe>
	{
		GPIO_u8GetPinValue(GPIOB_U8_PORT,GPIO_U8_PIN4,&x);
 80007dc:	f107 0313 	add.w	r3, r7, #19
 80007e0:	461a      	mov	r2, r3
 80007e2:	2104      	movs	r1, #4
 80007e4:	2001      	movs	r0, #1
 80007e6:	f7ff ff1b 	bl	8000620 <GPIO_u8GetPinValue>
	while(x!=1)
 80007ea:	7cfb      	ldrb	r3, [r7, #19]
 80007ec:	2b01      	cmp	r3, #1
 80007ee:	d1f5      	bne.n	80007dc <main+0xb0>
	}
			sys_tictime(7000000);
 80007f0:	482e      	ldr	r0, [pc, #184]	; (80008ac <main+0x180>)
 80007f2:	f7ff ff65 	bl	80006c0 <sys_tictime>
			while(1)
			{
				GPIO_u8GetPinValue(GPIOB_U8_PORT,GPIO_U8_PIN4,&x);
 80007f6:	f107 0313 	add.w	r3, r7, #19
 80007fa:	461a      	mov	r2, r3
 80007fc:	2104      	movs	r1, #4
 80007fe:	2001      	movs	r0, #1
 8000800:	f7ff ff0e 	bl	8000620 <GPIO_u8GetPinValue>
				if(x!=1)
 8000804:	7cfb      	ldrb	r3, [r7, #19]
 8000806:	2b01      	cmp	r3, #1
 8000808:	d0f5      	beq.n	80007f6 <main+0xca>
				{
				res =	ReturnSystickval();
 800080a:	f7ff ff6f 	bl	80006ec <ReturnSystickval>
 800080e:	6178      	str	r0, [r7, #20]
				disableSys_tmr();
 8000810:	f7ff ff80 	bl	8000714 <disableSys_tmr>
				break;
 8000814:	bf00      	nop
				}
			}

	  if(res>4000000)
 8000816:	697b      	ldr	r3, [r7, #20]
 8000818:	4a25      	ldr	r2, [pc, #148]	; (80008b0 <main+0x184>)
 800081a:	4293      	cmp	r3, r2
 800081c:	d90f      	bls.n	800083e <main+0x112>
	  {
         GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN1,GPIO_U8_HIGH);
 800081e:	2201      	movs	r2, #1
 8000820:	2101      	movs	r1, #1
 8000822:	2000      	movs	r0, #0
 8000824:	f7ff fe90 	bl	8000548 <GPIO_u8SetPinValue>
         GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN4,GPIO_U8_LOW);
 8000828:	2200      	movs	r2, #0
 800082a:	2104      	movs	r1, #4
 800082c:	2000      	movs	r0, #0
 800082e:	f7ff fe8b 	bl	8000548 <GPIO_u8SetPinValue>
         GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN7,GPIO_U8_LOW);
 8000832:	2200      	movs	r2, #0
 8000834:	2107      	movs	r1, #7
 8000836:	2000      	movs	r0, #0
 8000838:	f7ff fe86 	bl	8000548 <GPIO_u8SetPinValue>
 800083c:	e7d5      	b.n	80007ea <main+0xbe>

	  }

		else if((res<4000000) && (res>2000000))
 800083e:	697b      	ldr	r3, [r7, #20]
 8000840:	4a1c      	ldr	r2, [pc, #112]	; (80008b4 <main+0x188>)
 8000842:	4293      	cmp	r3, r2
 8000844:	d813      	bhi.n	800086e <main+0x142>
 8000846:	697b      	ldr	r3, [r7, #20]
 8000848:	4a13      	ldr	r2, [pc, #76]	; (8000898 <main+0x16c>)
 800084a:	4293      	cmp	r3, r2
 800084c:	d90f      	bls.n	800086e <main+0x142>
        {
        	 GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN4,GPIO_U8_HIGH);
 800084e:	2201      	movs	r2, #1
 8000850:	2104      	movs	r1, #4
 8000852:	2000      	movs	r0, #0
 8000854:	f7ff fe78 	bl	8000548 <GPIO_u8SetPinValue>
        	 GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN1,GPIO_U8_LOW);
 8000858:	2200      	movs	r2, #0
 800085a:	2101      	movs	r1, #1
 800085c:	2000      	movs	r0, #0
 800085e:	f7ff fe73 	bl	8000548 <GPIO_u8SetPinValue>
        	 GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN7,GPIO_U8_LOW);
 8000862:	2200      	movs	r2, #0
 8000864:	2107      	movs	r1, #7
 8000866:	2000      	movs	r0, #0
 8000868:	f7ff fe6e 	bl	8000548 <GPIO_u8SetPinValue>
 800086c:	e012      	b.n	8000894 <main+0x168>
        }
		else if(res<2000000)
 800086e:	697b      	ldr	r3, [r7, #20]
 8000870:	4a11      	ldr	r2, [pc, #68]	; (80008b8 <main+0x18c>)
 8000872:	4293      	cmp	r3, r2
 8000874:	d8b9      	bhi.n	80007ea <main+0xbe>
        {
        	 GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN7,GPIO_U8_HIGH);
 8000876:	2201      	movs	r2, #1
 8000878:	2107      	movs	r1, #7
 800087a:	2000      	movs	r0, #0
 800087c:	f7ff fe64 	bl	8000548 <GPIO_u8SetPinValue>
        	 GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN1,GPIO_U8_LOW);
 8000880:	2200      	movs	r2, #0
 8000882:	2101      	movs	r1, #1
 8000884:	2000      	movs	r0, #0
 8000886:	f7ff fe5f 	bl	8000548 <GPIO_u8SetPinValue>
        	 GPIO_u8SetPinValue(GPIOA_U8_PORT,GPIO_U8_PIN4,GPIO_U8_LOW);
 800088a:	2200      	movs	r2, #0
 800088c:	2104      	movs	r1, #4
 800088e:	2000      	movs	r0, #0
 8000890:	f7ff fe5a 	bl	8000548 <GPIO_u8SetPinValue>
	while(x!=1)
 8000894:	e7a9      	b.n	80007ea <main+0xbe>
 8000896:	bf00      	nop
 8000898:	001e8480 	.word	0x001e8480
 800089c:	08000970 	.word	0x08000970
 80008a0:	08000974 	.word	0x08000974
 80008a4:	08000978 	.word	0x08000978
 80008a8:	0800097c 	.word	0x0800097c
 80008ac:	006acfc0 	.word	0x006acfc0
 80008b0:	003d0900 	.word	0x003d0900
 80008b4:	003d08ff 	.word	0x003d08ff
 80008b8:	001e847f 	.word	0x001e847f

080008bc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80008bc:	480d      	ldr	r0, [pc, #52]	; (80008f4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80008be:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80008c0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80008c4:	480c      	ldr	r0, [pc, #48]	; (80008f8 <LoopForever+0x6>)
  ldr r1, =_edata
 80008c6:	490d      	ldr	r1, [pc, #52]	; (80008fc <LoopForever+0xa>)
  ldr r2, =_sidata
 80008c8:	4a0d      	ldr	r2, [pc, #52]	; (8000900 <LoopForever+0xe>)
  movs r3, #0
 80008ca:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80008cc:	e002      	b.n	80008d4 <LoopCopyDataInit>

080008ce <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80008ce:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80008d0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80008d2:	3304      	adds	r3, #4

080008d4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80008d4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80008d6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80008d8:	d3f9      	bcc.n	80008ce <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80008da:	4a0a      	ldr	r2, [pc, #40]	; (8000904 <LoopForever+0x12>)
  ldr r4, =_ebss
 80008dc:	4c0a      	ldr	r4, [pc, #40]	; (8000908 <LoopForever+0x16>)
  movs r3, #0
 80008de:	2300      	movs	r3, #0
  b LoopFillZerobss
 80008e0:	e001      	b.n	80008e6 <LoopFillZerobss>

080008e2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80008e2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80008e4:	3204      	adds	r2, #4

080008e6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80008e6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80008e8:	d3fb      	bcc.n	80008e2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80008ea:	f000 f811 	bl	8000910 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80008ee:	f7ff ff1d 	bl	800072c <main>

080008f2 <LoopForever>:

LoopForever:
    b LoopForever
 80008f2:	e7fe      	b.n	80008f2 <LoopForever>
  ldr   r0, =_estack
 80008f4:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80008f8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80008fc:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000900:	08000988 	.word	0x08000988
  ldr r2, =_sbss
 8000904:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000908:	2000001c 	.word	0x2000001c

0800090c <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800090c:	e7fe      	b.n	800090c <ADC1_2_IRQHandler>
	...

08000910 <__libc_init_array>:
 8000910:	b570      	push	{r4, r5, r6, lr}
 8000912:	2500      	movs	r5, #0
 8000914:	4e0c      	ldr	r6, [pc, #48]	; (8000948 <__libc_init_array+0x38>)
 8000916:	4c0d      	ldr	r4, [pc, #52]	; (800094c <__libc_init_array+0x3c>)
 8000918:	1ba4      	subs	r4, r4, r6
 800091a:	10a4      	asrs	r4, r4, #2
 800091c:	42a5      	cmp	r5, r4
 800091e:	d109      	bne.n	8000934 <__libc_init_array+0x24>
 8000920:	f000 f81a 	bl	8000958 <_init>
 8000924:	2500      	movs	r5, #0
 8000926:	4e0a      	ldr	r6, [pc, #40]	; (8000950 <__libc_init_array+0x40>)
 8000928:	4c0a      	ldr	r4, [pc, #40]	; (8000954 <__libc_init_array+0x44>)
 800092a:	1ba4      	subs	r4, r4, r6
 800092c:	10a4      	asrs	r4, r4, #2
 800092e:	42a5      	cmp	r5, r4
 8000930:	d105      	bne.n	800093e <__libc_init_array+0x2e>
 8000932:	bd70      	pop	{r4, r5, r6, pc}
 8000934:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000938:	4798      	blx	r3
 800093a:	3501      	adds	r5, #1
 800093c:	e7ee      	b.n	800091c <__libc_init_array+0xc>
 800093e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000942:	4798      	blx	r3
 8000944:	3501      	adds	r5, #1
 8000946:	e7f2      	b.n	800092e <__libc_init_array+0x1e>
 8000948:	08000980 	.word	0x08000980
 800094c:	08000980 	.word	0x08000980
 8000950:	08000980 	.word	0x08000980
 8000954:	08000984 	.word	0x08000984

08000958 <_init>:
 8000958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800095a:	bf00      	nop
 800095c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800095e:	bc08      	pop	{r3}
 8000960:	469e      	mov	lr, r3
 8000962:	4770      	bx	lr

08000964 <_fini>:
 8000964:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000966:	bf00      	nop
 8000968:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800096a:	bc08      	pop	{r3}
 800096c:	469e      	mov	lr, r3
 800096e:	4770      	bx	lr
