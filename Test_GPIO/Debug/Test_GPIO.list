
Test_GPIO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005d4  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000004  08000704  08000704  00010704  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000708  08000708  00010710  2**0
                  CONTENTS
  4 .ARM          00000000  08000708  08000708  00010710  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000708  08000710  00010710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000708  08000708  00010708  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800070c  0800070c  0001070c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010710  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000710  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000710  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010710  2**0
                  CONTENTS, READONLY
 12 .debug_info   000004d1  00000000  00000000  00010739  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 0000025a  00000000  00000000  00010c0a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000d0  00000000  00000000  00010e68  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000098  00000000  00000000  00010f38  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000015d2  00000000  00000000  00010fd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00000741  00000000  00000000  000125a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00005f2a  00000000  00000000  00012ce3  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00018c0d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000220  00000000  00000000  00018c88  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080006ec 	.word	0x080006ec

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080006ec 	.word	0x080006ec

08000170 <RCC_u8EnPripheral>:
  	
}


u8 RCC_u8EnPripheral(u8 Copy_u8PrefralEN)
{
 8000170:	b480      	push	{r7}
 8000172:	b085      	sub	sp, #20
 8000174:	af00      	add	r7, sp, #0
 8000176:	4603      	mov	r3, r0
 8000178:	71fb      	strb	r3, [r7, #7]
	u8 Local_u8ST_ERROR =STD_TYPES_OK;
 800017a:	2301      	movs	r3, #1
 800017c:	73fb      	strb	r3, [r7, #15]
	if(Copy_u8PrefralEN<32)
 800017e:	79fb      	ldrb	r3, [r7, #7]
 8000180:	2b1f      	cmp	r3, #31
 8000182:	d809      	bhi.n	8000198 <RCC_u8EnPripheral+0x28>
	{
		RCC_APB2EN_REG |= (1<<Copy_u8PrefralEN);
 8000184:	4b1c      	ldr	r3, [pc, #112]	; (80001f8 <RCC_u8EnPripheral+0x88>)
 8000186:	681b      	ldr	r3, [r3, #0]
 8000188:	79fa      	ldrb	r2, [r7, #7]
 800018a:	2101      	movs	r1, #1
 800018c:	fa01 f202 	lsl.w	r2, r1, r2
 8000190:	4611      	mov	r1, r2
 8000192:	4a19      	ldr	r2, [pc, #100]	; (80001f8 <RCC_u8EnPripheral+0x88>)
 8000194:	430b      	orrs	r3, r1
 8000196:	6013      	str	r3, [r2, #0]
	}
	if(Copy_u8PrefralEN >= 32 && Copy_u8PrefralEN <64)
 8000198:	79fb      	ldrb	r3, [r7, #7]
 800019a:	2b1f      	cmp	r3, #31
 800019c:	d90f      	bls.n	80001be <RCC_u8EnPripheral+0x4e>
 800019e:	79fb      	ldrb	r3, [r7, #7]
 80001a0:	2b3f      	cmp	r3, #63	; 0x3f
 80001a2:	d80c      	bhi.n	80001be <RCC_u8EnPripheral+0x4e>
	{
		Copy_u8PrefralEN  -=32;
 80001a4:	79fb      	ldrb	r3, [r7, #7]
 80001a6:	3b20      	subs	r3, #32
 80001a8:	71fb      	strb	r3, [r7, #7]
		RCC_APB1EN_REG |=(1<<Copy_u8PrefralEN);
 80001aa:	4b14      	ldr	r3, [pc, #80]	; (80001fc <RCC_u8EnPripheral+0x8c>)
 80001ac:	681b      	ldr	r3, [r3, #0]
 80001ae:	79fa      	ldrb	r2, [r7, #7]
 80001b0:	2101      	movs	r1, #1
 80001b2:	fa01 f202 	lsl.w	r2, r1, r2
 80001b6:	4611      	mov	r1, r2
 80001b8:	4a10      	ldr	r2, [pc, #64]	; (80001fc <RCC_u8EnPripheral+0x8c>)
 80001ba:	430b      	orrs	r3, r1
 80001bc:	6013      	str	r3, [r2, #0]
	}
	if(Copy_u8PrefralEN >= 32 && Copy_u8PrefralEN <64)
 80001be:	79fb      	ldrb	r3, [r7, #7]
 80001c0:	2b1f      	cmp	r3, #31
 80001c2:	d910      	bls.n	80001e6 <RCC_u8EnPripheral+0x76>
 80001c4:	79fb      	ldrb	r3, [r7, #7]
 80001c6:	2b3f      	cmp	r3, #63	; 0x3f
 80001c8:	d80d      	bhi.n	80001e6 <RCC_u8EnPripheral+0x76>
	{
		Copy_u8PrefralEN  -=64;
 80001ca:	79fb      	ldrb	r3, [r7, #7]
 80001cc:	3b40      	subs	r3, #64	; 0x40
 80001ce:	71fb      	strb	r3, [r7, #7]
		RCC_AHPEN_REG |=(1<<Copy_u8PrefralEN);
 80001d0:	4b0b      	ldr	r3, [pc, #44]	; (8000200 <RCC_u8EnPripheral+0x90>)
 80001d2:	681b      	ldr	r3, [r3, #0]
 80001d4:	79fa      	ldrb	r2, [r7, #7]
 80001d6:	2101      	movs	r1, #1
 80001d8:	fa01 f202 	lsl.w	r2, r1, r2
 80001dc:	4611      	mov	r1, r2
 80001de:	4a08      	ldr	r2, [pc, #32]	; (8000200 <RCC_u8EnPripheral+0x90>)
 80001e0:	430b      	orrs	r3, r1
 80001e2:	6013      	str	r3, [r2, #0]
 80001e4:	e001      	b.n	80001ea <RCC_u8EnPripheral+0x7a>
	}
	else
	{
		Local_u8ST_ERROR = STD_TYPES_NOK;
 80001e6:	2300      	movs	r3, #0
 80001e8:	73fb      	strb	r3, [r7, #15]
	}
	return Local_u8ST_ERROR;
 80001ea:	7bfb      	ldrb	r3, [r7, #15]
	
}
 80001ec:	4618      	mov	r0, r3
 80001ee:	3714      	adds	r7, #20
 80001f0:	46bd      	mov	sp, r7
 80001f2:	bc80      	pop	{r7}
 80001f4:	4770      	bx	lr
 80001f6:	bf00      	nop
 80001f8:	40021018 	.word	0x40021018
 80001fc:	4002101c 	.word	0x4002101c
 8000200:	40021014 	.word	0x40021014

08000204 <GPIO_voidInit>:
#include "GPIO_interface.h"
#include "GPIO_config.h" 


u8   GPIO_voidInit(PIN_CINFIG *Copy_strPinConfig)
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	6078      	str	r0, [r7, #4]
	u8 local_statError =STD_TYPES_OK;
 800020c:	2301      	movs	r3, #1
 800020e:	73fb      	strb	r3, [r7, #15]
    if((Copy_strPinConfig->copy_u8port <=GPIOC_U8_PORT) && (Copy_strPinConfig->copy_u8pinNum <= GPIO_U8_PIN15) && (Copy_strPinConfig->copy_PinMode<=0xf))
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	781b      	ldrb	r3, [r3, #0]
 8000214:	2b02      	cmp	r3, #2
 8000216:	f200 8186 	bhi.w	8000526 <GPIO_voidInit+0x322>
 800021a:	687b      	ldr	r3, [r7, #4]
 800021c:	785b      	ldrb	r3, [r3, #1]
 800021e:	2b0f      	cmp	r3, #15
 8000220:	f200 8181 	bhi.w	8000526 <GPIO_voidInit+0x322>
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	789b      	ldrb	r3, [r3, #2]
 8000228:	2b0f      	cmp	r3, #15
 800022a:	f200 817c 	bhi.w	8000526 <GPIO_voidInit+0x322>
  	{
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 800022e:	687b      	ldr	r3, [r7, #4]
 8000230:	785b      	ldrb	r3, [r3, #1]
 8000232:	2b07      	cmp	r3, #7
 8000234:	f200 80aa 	bhi.w	800038c <GPIO_voidInit+0x188>
	{
	  if(Copy_strPinConfig->copy_u8port ==GPIOA_U8_PORT)
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	781b      	ldrb	r3, [r3, #0]
 800023c:	2b00      	cmp	r3, #0
 800023e:	d133      	bne.n	80002a8 <GPIO_voidInit+0xa4>
	  {
		  GPIOA_U32_CRL_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 8000240:	4b8a      	ldr	r3, [pc, #552]	; (800046c <GPIO_voidInit+0x268>)
 8000242:	681b      	ldr	r3, [r3, #0]
 8000244:	687a      	ldr	r2, [r7, #4]
 8000246:	7852      	ldrb	r2, [r2, #1]
 8000248:	0092      	lsls	r2, r2, #2
 800024a:	210f      	movs	r1, #15
 800024c:	fa01 f202 	lsl.w	r2, r1, r2
 8000250:	43d2      	mvns	r2, r2
 8000252:	4611      	mov	r1, r2
 8000254:	4a85      	ldr	r2, [pc, #532]	; (800046c <GPIO_voidInit+0x268>)
 8000256:	400b      	ands	r3, r1
 8000258:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 800025a:	687b      	ldr	r3, [r7, #4]
 800025c:	789b      	ldrb	r3, [r3, #2]
 800025e:	2b0c      	cmp	r3, #12
 8000260:	d114      	bne.n	800028c <GPIO_voidInit+0x88>
		  {
			GPIOA_U32_CRL_REG |=(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 8000262:	4b82      	ldr	r3, [pc, #520]	; (800046c <GPIO_voidInit+0x268>)
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	687a      	ldr	r2, [r7, #4]
 8000268:	7852      	ldrb	r2, [r2, #1]
 800026a:	0092      	lsls	r2, r2, #2
 800026c:	2108      	movs	r1, #8
 800026e:	fa01 f202 	lsl.w	r2, r1, r2
 8000272:	4611      	mov	r1, r2
 8000274:	4a7d      	ldr	r2, [pc, #500]	; (800046c <GPIO_voidInit+0x268>)
 8000276:	430b      	orrs	r3, r1
 8000278:	6013      	str	r3, [r2, #0]
            GPIOA_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	785b      	ldrb	r3, [r3, #1]
 800027e:	461a      	mov	r2, r3
 8000280:	2301      	movs	r3, #1
 8000282:	fa03 f202 	lsl.w	r2, r3, r2
 8000286:	4b7a      	ldr	r3, [pc, #488]	; (8000470 <GPIO_voidInit+0x26c>)
 8000288:	601a      	str	r2, [r3, #0]
 800028a:	e00d      	b.n	80002a8 <GPIO_voidInit+0xa4>
		  }
		  else
		  {

			 GPIOA_U32_CRL_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 800028c:	4b77      	ldr	r3, [pc, #476]	; (800046c <GPIO_voidInit+0x268>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	687a      	ldr	r2, [r7, #4]
 8000292:	7892      	ldrb	r2, [r2, #2]
 8000294:	4611      	mov	r1, r2
 8000296:	687a      	ldr	r2, [r7, #4]
 8000298:	7852      	ldrb	r2, [r2, #1]
 800029a:	0092      	lsls	r2, r2, #2
 800029c:	fa01 f202 	lsl.w	r2, r1, r2
 80002a0:	4611      	mov	r1, r2
 80002a2:	4a72      	ldr	r2, [pc, #456]	; (800046c <GPIO_voidInit+0x268>)
 80002a4:	430b      	orrs	r3, r1
 80002a6:	6013      	str	r3, [r2, #0]
		  }
	
	  }
	  if(Copy_strPinConfig->copy_u8port ==GPIOB_U8_PORT)
 80002a8:	687b      	ldr	r3, [r7, #4]
 80002aa:	781b      	ldrb	r3, [r3, #0]
 80002ac:	2b01      	cmp	r3, #1
 80002ae:	d133      	bne.n	8000318 <GPIO_voidInit+0x114>
	  {
		  GPIOB_U32_CRL_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80002b0:	4b70      	ldr	r3, [pc, #448]	; (8000474 <GPIO_voidInit+0x270>)
 80002b2:	681b      	ldr	r3, [r3, #0]
 80002b4:	687a      	ldr	r2, [r7, #4]
 80002b6:	7852      	ldrb	r2, [r2, #1]
 80002b8:	0092      	lsls	r2, r2, #2
 80002ba:	210f      	movs	r1, #15
 80002bc:	fa01 f202 	lsl.w	r2, r1, r2
 80002c0:	43d2      	mvns	r2, r2
 80002c2:	4611      	mov	r1, r2
 80002c4:	4a6b      	ldr	r2, [pc, #428]	; (8000474 <GPIO_voidInit+0x270>)
 80002c6:	400b      	ands	r3, r1
 80002c8:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	789b      	ldrb	r3, [r3, #2]
 80002ce:	2b0c      	cmp	r3, #12
 80002d0:	d114      	bne.n	80002fc <GPIO_voidInit+0xf8>
		  {
			GPIOB_U32_CRL_REG |=(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80002d2:	4b68      	ldr	r3, [pc, #416]	; (8000474 <GPIO_voidInit+0x270>)
 80002d4:	681b      	ldr	r3, [r3, #0]
 80002d6:	687a      	ldr	r2, [r7, #4]
 80002d8:	7852      	ldrb	r2, [r2, #1]
 80002da:	0092      	lsls	r2, r2, #2
 80002dc:	2108      	movs	r1, #8
 80002de:	fa01 f202 	lsl.w	r2, r1, r2
 80002e2:	4611      	mov	r1, r2
 80002e4:	4a63      	ldr	r2, [pc, #396]	; (8000474 <GPIO_voidInit+0x270>)
 80002e6:	430b      	orrs	r3, r1
 80002e8:	6013      	str	r3, [r2, #0]
            GPIOB_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	785b      	ldrb	r3, [r3, #1]
 80002ee:	461a      	mov	r2, r3
 80002f0:	2301      	movs	r3, #1
 80002f2:	fa03 f202 	lsl.w	r2, r3, r2
 80002f6:	4b60      	ldr	r3, [pc, #384]	; (8000478 <GPIO_voidInit+0x274>)
 80002f8:	601a      	str	r2, [r3, #0]
 80002fa:	e00d      	b.n	8000318 <GPIO_voidInit+0x114>
		  }
		  else
		  {
			 GPIOB_U32_CRL_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 80002fc:	4b5d      	ldr	r3, [pc, #372]	; (8000474 <GPIO_voidInit+0x270>)
 80002fe:	681b      	ldr	r3, [r3, #0]
 8000300:	687a      	ldr	r2, [r7, #4]
 8000302:	7892      	ldrb	r2, [r2, #2]
 8000304:	4611      	mov	r1, r2
 8000306:	687a      	ldr	r2, [r7, #4]
 8000308:	7852      	ldrb	r2, [r2, #1]
 800030a:	0092      	lsls	r2, r2, #2
 800030c:	fa01 f202 	lsl.w	r2, r1, r2
 8000310:	4611      	mov	r1, r2
 8000312:	4a58      	ldr	r2, [pc, #352]	; (8000474 <GPIO_voidInit+0x270>)
 8000314:	430b      	orrs	r3, r1
 8000316:	6013      	str	r3, [r2, #0]
		  }
	
	  }
	  if(Copy_strPinConfig->copy_u8port ==GPIOC_U8_PORT)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	781b      	ldrb	r3, [r3, #0]
 800031c:	2b02      	cmp	r3, #2
 800031e:	f040 8105 	bne.w	800052c <GPIO_voidInit+0x328>
	  {
		  GPIOC_U32_CRL_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 8000322:	4b56      	ldr	r3, [pc, #344]	; (800047c <GPIO_voidInit+0x278>)
 8000324:	681b      	ldr	r3, [r3, #0]
 8000326:	687a      	ldr	r2, [r7, #4]
 8000328:	7852      	ldrb	r2, [r2, #1]
 800032a:	0092      	lsls	r2, r2, #2
 800032c:	210f      	movs	r1, #15
 800032e:	fa01 f202 	lsl.w	r2, r1, r2
 8000332:	43d2      	mvns	r2, r2
 8000334:	4611      	mov	r1, r2
 8000336:	4a51      	ldr	r2, [pc, #324]	; (800047c <GPIO_voidInit+0x278>)
 8000338:	400b      	ands	r3, r1
 800033a:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 800033c:	687b      	ldr	r3, [r7, #4]
 800033e:	789b      	ldrb	r3, [r3, #2]
 8000340:	2b0c      	cmp	r3, #12
 8000342:	d114      	bne.n	800036e <GPIO_voidInit+0x16a>
		  {
			GPIOC_U32_CRL_REG |=(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 8000344:	4b4d      	ldr	r3, [pc, #308]	; (800047c <GPIO_voidInit+0x278>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	687a      	ldr	r2, [r7, #4]
 800034a:	7852      	ldrb	r2, [r2, #1]
 800034c:	0092      	lsls	r2, r2, #2
 800034e:	2108      	movs	r1, #8
 8000350:	fa01 f202 	lsl.w	r2, r1, r2
 8000354:	4611      	mov	r1, r2
 8000356:	4a49      	ldr	r2, [pc, #292]	; (800047c <GPIO_voidInit+0x278>)
 8000358:	430b      	orrs	r3, r1
 800035a:	6013      	str	r3, [r2, #0]
            GPIOC_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	785b      	ldrb	r3, [r3, #1]
 8000360:	461a      	mov	r2, r3
 8000362:	2301      	movs	r3, #1
 8000364:	fa03 f202 	lsl.w	r2, r3, r2
 8000368:	4b45      	ldr	r3, [pc, #276]	; (8000480 <GPIO_voidInit+0x27c>)
 800036a:	601a      	str	r2, [r3, #0]
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 800036c:	e0de      	b.n	800052c <GPIO_voidInit+0x328>
		  }
		  else
		  {
			 GPIOC_U32_CRL_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 800036e:	4b43      	ldr	r3, [pc, #268]	; (800047c <GPIO_voidInit+0x278>)
 8000370:	681b      	ldr	r3, [r3, #0]
 8000372:	687a      	ldr	r2, [r7, #4]
 8000374:	7892      	ldrb	r2, [r2, #2]
 8000376:	4611      	mov	r1, r2
 8000378:	687a      	ldr	r2, [r7, #4]
 800037a:	7852      	ldrb	r2, [r2, #1]
 800037c:	0092      	lsls	r2, r2, #2
 800037e:	fa01 f202 	lsl.w	r2, r1, r2
 8000382:	4611      	mov	r1, r2
 8000384:	4a3d      	ldr	r2, [pc, #244]	; (800047c <GPIO_voidInit+0x278>)
 8000386:	430b      	orrs	r3, r1
 8000388:	6013      	str	r3, [r2, #0]
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 800038a:	e0cf      	b.n	800052c <GPIO_voidInit+0x328>
	
	  }
	}
    else
    {
    	Copy_strPinConfig->copy_u8pinNum  -= 8;
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	785b      	ldrb	r3, [r3, #1]
 8000390:	3b08      	subs	r3, #8
 8000392:	b2da      	uxtb	r2, r3
 8000394:	687b      	ldr	r3, [r7, #4]
 8000396:	705a      	strb	r2, [r3, #1]
		if(Copy_strPinConfig->copy_u8port ==GPIOA_U8_PORT)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	781b      	ldrb	r3, [r3, #0]
 800039c:	2b00      	cmp	r3, #0
 800039e:	d139      	bne.n	8000414 <GPIO_voidInit+0x210>
	    {
	   	GPIOA_U32_CRH_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80003a0:	4b38      	ldr	r3, [pc, #224]	; (8000484 <GPIO_voidInit+0x280>)
 80003a2:	681b      	ldr	r3, [r3, #0]
 80003a4:	687a      	ldr	r2, [r7, #4]
 80003a6:	7852      	ldrb	r2, [r2, #1]
 80003a8:	0092      	lsls	r2, r2, #2
 80003aa:	210f      	movs	r1, #15
 80003ac:	fa01 f202 	lsl.w	r2, r1, r2
 80003b0:	43d2      	mvns	r2, r2
 80003b2:	4611      	mov	r1, r2
 80003b4:	4a33      	ldr	r2, [pc, #204]	; (8000484 <GPIO_voidInit+0x280>)
 80003b6:	400b      	ands	r3, r1
 80003b8:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 80003ba:	687b      	ldr	r3, [r7, #4]
 80003bc:	789b      	ldrb	r3, [r3, #2]
 80003be:	2b0c      	cmp	r3, #12
 80003c0:	d11a      	bne.n	80003f8 <GPIO_voidInit+0x1f4>
		  {
			GPIOA_U32_CRH_REG |=(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80003c2:	4b30      	ldr	r3, [pc, #192]	; (8000484 <GPIO_voidInit+0x280>)
 80003c4:	681b      	ldr	r3, [r3, #0]
 80003c6:	687a      	ldr	r2, [r7, #4]
 80003c8:	7852      	ldrb	r2, [r2, #1]
 80003ca:	0092      	lsls	r2, r2, #2
 80003cc:	2108      	movs	r1, #8
 80003ce:	fa01 f202 	lsl.w	r2, r1, r2
 80003d2:	4611      	mov	r1, r2
 80003d4:	4a2b      	ldr	r2, [pc, #172]	; (8000484 <GPIO_voidInit+0x280>)
 80003d6:	430b      	orrs	r3, r1
 80003d8:	6013      	str	r3, [r2, #0]
			Copy_strPinConfig->copy_u8pinNum  += 8;
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	785b      	ldrb	r3, [r3, #1]
 80003de:	3308      	adds	r3, #8
 80003e0:	b2da      	uxtb	r2, r3
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	705a      	strb	r2, [r3, #1]
            GPIOA_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	785b      	ldrb	r3, [r3, #1]
 80003ea:	461a      	mov	r2, r3
 80003ec:	2301      	movs	r3, #1
 80003ee:	fa03 f202 	lsl.w	r2, r3, r2
 80003f2:	4b1f      	ldr	r3, [pc, #124]	; (8000470 <GPIO_voidInit+0x26c>)
 80003f4:	601a      	str	r2, [r3, #0]
 80003f6:	e00d      	b.n	8000414 <GPIO_voidInit+0x210>
		  }
		  else
		  {
			 GPIOA_U32_CRH_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 80003f8:	4b22      	ldr	r3, [pc, #136]	; (8000484 <GPIO_voidInit+0x280>)
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	687a      	ldr	r2, [r7, #4]
 80003fe:	7892      	ldrb	r2, [r2, #2]
 8000400:	4611      	mov	r1, r2
 8000402:	687a      	ldr	r2, [r7, #4]
 8000404:	7852      	ldrb	r2, [r2, #1]
 8000406:	0092      	lsls	r2, r2, #2
 8000408:	fa01 f202 	lsl.w	r2, r1, r2
 800040c:	4611      	mov	r1, r2
 800040e:	4a1d      	ldr	r2, [pc, #116]	; (8000484 <GPIO_voidInit+0x280>)
 8000410:	430b      	orrs	r3, r1
 8000412:	6013      	str	r3, [r2, #0]
		  }
	
	  }
	  if(Copy_strPinConfig->copy_u8port ==GPIOB_U8_PORT)
 8000414:	687b      	ldr	r3, [r7, #4]
 8000416:	781b      	ldrb	r3, [r3, #0]
 8000418:	2b01      	cmp	r3, #1
 800041a:	d145      	bne.n	80004a8 <GPIO_voidInit+0x2a4>
	  {
		  GPIOB_U32_CRH_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 800041c:	4b1a      	ldr	r3, [pc, #104]	; (8000488 <GPIO_voidInit+0x284>)
 800041e:	681b      	ldr	r3, [r3, #0]
 8000420:	687a      	ldr	r2, [r7, #4]
 8000422:	7852      	ldrb	r2, [r2, #1]
 8000424:	0092      	lsls	r2, r2, #2
 8000426:	210f      	movs	r1, #15
 8000428:	fa01 f202 	lsl.w	r2, r1, r2
 800042c:	43d2      	mvns	r2, r2
 800042e:	4611      	mov	r1, r2
 8000430:	4a15      	ldr	r2, [pc, #84]	; (8000488 <GPIO_voidInit+0x284>)
 8000432:	400b      	ands	r3, r1
 8000434:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 8000436:	687b      	ldr	r3, [r7, #4]
 8000438:	789b      	ldrb	r3, [r3, #2]
 800043a:	2b0c      	cmp	r3, #12
 800043c:	d126      	bne.n	800048c <GPIO_voidInit+0x288>
		  {
			GPIOB_U32_CRH_REG =(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	785b      	ldrb	r3, [r3, #1]
 8000442:	009b      	lsls	r3, r3, #2
 8000444:	2208      	movs	r2, #8
 8000446:	409a      	lsls	r2, r3
 8000448:	4b0f      	ldr	r3, [pc, #60]	; (8000488 <GPIO_voidInit+0x284>)
 800044a:	601a      	str	r2, [r3, #0]
			Copy_strPinConfig->copy_u8pinNum  += 8;
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	785b      	ldrb	r3, [r3, #1]
 8000450:	3308      	adds	r3, #8
 8000452:	b2da      	uxtb	r2, r3
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	705a      	strb	r2, [r3, #1]
            GPIOB_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 8000458:	687b      	ldr	r3, [r7, #4]
 800045a:	785b      	ldrb	r3, [r3, #1]
 800045c:	461a      	mov	r2, r3
 800045e:	2301      	movs	r3, #1
 8000460:	fa03 f202 	lsl.w	r2, r3, r2
 8000464:	4b04      	ldr	r3, [pc, #16]	; (8000478 <GPIO_voidInit+0x274>)
 8000466:	601a      	str	r2, [r3, #0]
 8000468:	e01e      	b.n	80004a8 <GPIO_voidInit+0x2a4>
 800046a:	bf00      	nop
 800046c:	40010800 	.word	0x40010800
 8000470:	40010810 	.word	0x40010810
 8000474:	40010c00 	.word	0x40010c00
 8000478:	40010c10 	.word	0x40010c10
 800047c:	40011000 	.word	0x40011000
 8000480:	40011010 	.word	0x40011010
 8000484:	40010804 	.word	0x40010804
 8000488:	40010c04 	.word	0x40010c04
		  }
		  else
		  {
			 GPIOB_U32_CRH_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 800048c:	4b2b      	ldr	r3, [pc, #172]	; (800053c <GPIO_voidInit+0x338>)
 800048e:	681b      	ldr	r3, [r3, #0]
 8000490:	687a      	ldr	r2, [r7, #4]
 8000492:	7892      	ldrb	r2, [r2, #2]
 8000494:	4611      	mov	r1, r2
 8000496:	687a      	ldr	r2, [r7, #4]
 8000498:	7852      	ldrb	r2, [r2, #1]
 800049a:	0092      	lsls	r2, r2, #2
 800049c:	fa01 f202 	lsl.w	r2, r1, r2
 80004a0:	4611      	mov	r1, r2
 80004a2:	4a26      	ldr	r2, [pc, #152]	; (800053c <GPIO_voidInit+0x338>)
 80004a4:	430b      	orrs	r3, r1
 80004a6:	6013      	str	r3, [r2, #0]
		  }
	
	  }
	  if(Copy_strPinConfig->copy_u8port ==GPIOC_U8_PORT)
 80004a8:	687b      	ldr	r3, [r7, #4]
 80004aa:	781b      	ldrb	r3, [r3, #0]
 80004ac:	2b02      	cmp	r3, #2
 80004ae:	d13d      	bne.n	800052c <GPIO_voidInit+0x328>
	  {
		  GPIOC_U32_CRH_REG &=~ (0xf<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80004b0:	4b23      	ldr	r3, [pc, #140]	; (8000540 <GPIO_voidInit+0x33c>)
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	687a      	ldr	r2, [r7, #4]
 80004b6:	7852      	ldrb	r2, [r2, #1]
 80004b8:	0092      	lsls	r2, r2, #2
 80004ba:	210f      	movs	r1, #15
 80004bc:	fa01 f202 	lsl.w	r2, r1, r2
 80004c0:	43d2      	mvns	r2, r2
 80004c2:	4611      	mov	r1, r2
 80004c4:	4a1e      	ldr	r2, [pc, #120]	; (8000540 <GPIO_voidInit+0x33c>)
 80004c6:	400b      	ands	r3, r1
 80004c8:	6013      	str	r3, [r2, #0]
		  if(Copy_strPinConfig->copy_PinMode == GPIO_U8_INPUT_PULLUP)
 80004ca:	687b      	ldr	r3, [r7, #4]
 80004cc:	789b      	ldrb	r3, [r3, #2]
 80004ce:	2b0c      	cmp	r3, #12
 80004d0:	d11a      	bne.n	8000508 <GPIO_voidInit+0x304>
		  {
			GPIOC_U32_CRH_REG |=(0x8<<(Copy_strPinConfig->copy_u8pinNum)*4);
 80004d2:	4b1b      	ldr	r3, [pc, #108]	; (8000540 <GPIO_voidInit+0x33c>)
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	687a      	ldr	r2, [r7, #4]
 80004d8:	7852      	ldrb	r2, [r2, #1]
 80004da:	0092      	lsls	r2, r2, #2
 80004dc:	2108      	movs	r1, #8
 80004de:	fa01 f202 	lsl.w	r2, r1, r2
 80004e2:	4611      	mov	r1, r2
 80004e4:	4a16      	ldr	r2, [pc, #88]	; (8000540 <GPIO_voidInit+0x33c>)
 80004e6:	430b      	orrs	r3, r1
 80004e8:	6013      	str	r3, [r2, #0]
			Copy_strPinConfig->copy_u8pinNum  += 8;
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	785b      	ldrb	r3, [r3, #1]
 80004ee:	3308      	adds	r3, #8
 80004f0:	b2da      	uxtb	r2, r3
 80004f2:	687b      	ldr	r3, [r7, #4]
 80004f4:	705a      	strb	r2, [r3, #1]
            GPIOC_U32_BSRR_REG =(1<<Copy_strPinConfig->copy_u8pinNum); 			
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	785b      	ldrb	r3, [r3, #1]
 80004fa:	461a      	mov	r2, r3
 80004fc:	2301      	movs	r3, #1
 80004fe:	fa03 f202 	lsl.w	r2, r3, r2
 8000502:	4b10      	ldr	r3, [pc, #64]	; (8000544 <GPIO_voidInit+0x340>)
 8000504:	601a      	str	r2, [r3, #0]
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 8000506:	e011      	b.n	800052c <GPIO_voidInit+0x328>
		  }
		  else
		  {
			 GPIOC_U32_CRH_REG |=((Copy_strPinConfig->copy_PinMode)<<(Copy_strPinConfig->copy_u8pinNum)*4); 
 8000508:	4b0d      	ldr	r3, [pc, #52]	; (8000540 <GPIO_voidInit+0x33c>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	687a      	ldr	r2, [r7, #4]
 800050e:	7892      	ldrb	r2, [r2, #2]
 8000510:	4611      	mov	r1, r2
 8000512:	687a      	ldr	r2, [r7, #4]
 8000514:	7852      	ldrb	r2, [r2, #1]
 8000516:	0092      	lsls	r2, r2, #2
 8000518:	fa01 f202 	lsl.w	r2, r1, r2
 800051c:	4611      	mov	r1, r2
 800051e:	4a08      	ldr	r2, [pc, #32]	; (8000540 <GPIO_voidInit+0x33c>)
 8000520:	430b      	orrs	r3, r1
 8000522:	6013      	str	r3, [r2, #0]
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 8000524:	e002      	b.n	800052c <GPIO_voidInit+0x328>
	}		
	  
 }
   else
	{
		local_statError =STD_TYPES_NOK;
 8000526:	2300      	movs	r3, #0
 8000528:	73fb      	strb	r3, [r7, #15]
 800052a:	e000      	b.n	800052e <GPIO_voidInit+0x32a>
    if(Copy_strPinConfig->copy_u8pinNum<=GPIO_U8_PIN7)
 800052c:	bf00      	nop
	}
	return local_statError;
 800052e:	7bfb      	ldrb	r3, [r7, #15]
}    
 8000530:	4618      	mov	r0, r3
 8000532:	3714      	adds	r7, #20
 8000534:	46bd      	mov	sp, r7
 8000536:	bc80      	pop	{r7}
 8000538:	4770      	bx	lr
 800053a:	bf00      	nop
 800053c:	40010c04 	.word	0x40010c04
 8000540:	40011004 	.word	0x40011004
 8000544:	40011010 	.word	0x40011010

08000548 <GPIO_u8TogPin>:
	return local_u8StatError;	

}

u8   GPIO_u8TogPin  (u8 copy_u8port,u8 copy_u8pinNum)
{
 8000548:	b480      	push	{r7}
 800054a:	b085      	sub	sp, #20
 800054c:	af00      	add	r7, sp, #0
 800054e:	4603      	mov	r3, r0
 8000550:	460a      	mov	r2, r1
 8000552:	71fb      	strb	r3, [r7, #7]
 8000554:	4613      	mov	r3, r2
 8000556:	71bb      	strb	r3, [r7, #6]
	u8 local_u8StatError  = STD_TYPES_OK;
 8000558:	2301      	movs	r3, #1
 800055a:	73fb      	strb	r3, [r7, #15]
	if(copy_u8port <= GPIOC_U8_PORT && copy_u8pinNum <= GPIO_U8_PIN15)
 800055c:	79fb      	ldrb	r3, [r7, #7]
 800055e:	2b02      	cmp	r3, #2
 8000560:	d82c      	bhi.n	80005bc <GPIO_u8TogPin+0x74>
 8000562:	79bb      	ldrb	r3, [r7, #6]
 8000564:	2b0f      	cmp	r3, #15
 8000566:	d829      	bhi.n	80005bc <GPIO_u8TogPin+0x74>
	{
	  if(copy_u8port == GPIOA_U8_PORT)
 8000568:	79fb      	ldrb	r3, [r7, #7]
 800056a:	2b00      	cmp	r3, #0
 800056c:	d10a      	bne.n	8000584 <GPIO_u8TogPin+0x3c>
	  {
	   GPIOA_U32_ODR_REG ^=(1<<copy_u8pinNum);
 800056e:	4b18      	ldr	r3, [pc, #96]	; (80005d0 <GPIO_u8TogPin+0x88>)
 8000570:	681b      	ldr	r3, [r3, #0]
 8000572:	79ba      	ldrb	r2, [r7, #6]
 8000574:	2101      	movs	r1, #1
 8000576:	fa01 f202 	lsl.w	r2, r1, r2
 800057a:	4611      	mov	r1, r2
 800057c:	4a14      	ldr	r2, [pc, #80]	; (80005d0 <GPIO_u8TogPin+0x88>)
 800057e:	404b      	eors	r3, r1
 8000580:	6013      	str	r3, [r2, #0]
	  if(copy_u8port == GPIOA_U8_PORT)
 8000582:	e01e      	b.n	80005c2 <GPIO_u8TogPin+0x7a>
	  }
	 else if(copy_u8port == GPIOB_U8_PORT)
 8000584:	79fb      	ldrb	r3, [r7, #7]
 8000586:	2b01      	cmp	r3, #1
 8000588:	d10a      	bne.n	80005a0 <GPIO_u8TogPin+0x58>
	  {
	   GPIOB_U32_ODR_REG ^=(1<<copy_u8pinNum);
 800058a:	4b12      	ldr	r3, [pc, #72]	; (80005d4 <GPIO_u8TogPin+0x8c>)
 800058c:	681b      	ldr	r3, [r3, #0]
 800058e:	79ba      	ldrb	r2, [r7, #6]
 8000590:	2101      	movs	r1, #1
 8000592:	fa01 f202 	lsl.w	r2, r1, r2
 8000596:	4611      	mov	r1, r2
 8000598:	4a0e      	ldr	r2, [pc, #56]	; (80005d4 <GPIO_u8TogPin+0x8c>)
 800059a:	404b      	eors	r3, r1
 800059c:	6013      	str	r3, [r2, #0]
	  if(copy_u8port == GPIOA_U8_PORT)
 800059e:	e010      	b.n	80005c2 <GPIO_u8TogPin+0x7a>
	  }
	 else if(copy_u8port == GPIOC_U8_PORT)
 80005a0:	79fb      	ldrb	r3, [r7, #7]
 80005a2:	2b02      	cmp	r3, #2
 80005a4:	d10d      	bne.n	80005c2 <GPIO_u8TogPin+0x7a>
	  {
	   GPIOC_U32_ODR_REG ^=(1<<copy_u8pinNum);
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <GPIO_u8TogPin+0x90>)
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	79ba      	ldrb	r2, [r7, #6]
 80005ac:	2101      	movs	r1, #1
 80005ae:	fa01 f202 	lsl.w	r2, r1, r2
 80005b2:	4611      	mov	r1, r2
 80005b4:	4a08      	ldr	r2, [pc, #32]	; (80005d8 <GPIO_u8TogPin+0x90>)
 80005b6:	404b      	eors	r3, r1
 80005b8:	6013      	str	r3, [r2, #0]
	  if(copy_u8port == GPIOA_U8_PORT)
 80005ba:	e002      	b.n	80005c2 <GPIO_u8TogPin+0x7a>
	  }
	}
	else
	{
		local_u8StatError  = STD_TYPES_NOK;
 80005bc:	2300      	movs	r3, #0
 80005be:	73fb      	strb	r3, [r7, #15]
 80005c0:	e000      	b.n	80005c4 <GPIO_u8TogPin+0x7c>
	  if(copy_u8port == GPIOA_U8_PORT)
 80005c2:	bf00      	nop
	}
	return local_u8StatError;	
 80005c4:	7bfb      	ldrb	r3, [r7, #15]
 }
 80005c6:	4618      	mov	r0, r3
 80005c8:	3714      	adds	r7, #20
 80005ca:	46bd      	mov	sp, r7
 80005cc:	bc80      	pop	{r7}
 80005ce:	4770      	bx	lr
 80005d0:	4001080c 	.word	0x4001080c
 80005d4:	40010c0c 	.word	0x40010c0c
 80005d8:	4001100c 	.word	0x4001100c

080005dc <sys_tictime>:
#define SYST_RVR  *((volatile u32*)(0xE000E014))
#define SYST_CVR *((volatile u32*)(0xE000E018))
#define SYST_CALIB  *((volatile u32*)(0xE000E01C))

void sys_tictime(u32 val)
{
 80005dc:	b480      	push	{r7}
 80005de:	b083      	sub	sp, #12
 80005e0:	af00      	add	r7, sp, #0
 80005e2:	6078      	str	r0, [r7, #4]
	SYST_RVR  = val;
 80005e4:	4a06      	ldr	r2, [pc, #24]	; (8000600 <sys_tictime+0x24>)
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	6013      	str	r3, [r2, #0]
	SYST_CSR |=3;
 80005ea:	4b06      	ldr	r3, [pc, #24]	; (8000604 <sys_tictime+0x28>)
 80005ec:	681b      	ldr	r3, [r3, #0]
 80005ee:	4a05      	ldr	r2, [pc, #20]	; (8000604 <sys_tictime+0x28>)
 80005f0:	f043 0303 	orr.w	r3, r3, #3
 80005f4:	6013      	str	r3, [r2, #0]

}
 80005f6:	bf00      	nop
 80005f8:	370c      	adds	r7, #12
 80005fa:	46bd      	mov	sp, r7
 80005fc:	bc80      	pop	{r7}
 80005fe:	4770      	bx	lr
 8000600:	e000e014 	.word	0xe000e014
 8000604:	e000e010 	.word	0xe000e010

08000608 <SysTick_Handler>:

void SysTick_Handler(void)
{
 8000608:	b580      	push	{r7, lr}
 800060a:	af00      	add	r7, sp, #0
		GPIO_u8TogPin(GPIOC_U8_PORT,GPIO_U8_PIN13);
 800060c:	210d      	movs	r1, #13
 800060e:	2002      	movs	r0, #2
 8000610:	f7ff ff9a 	bl	8000548 <GPIO_u8TogPin>
}
 8000614:	bf00      	nop
 8000616:	bd80      	pop	{r7, pc}

08000618 <main>:
	u8 copy_PinMode;

}PIN_CINFIG;
*/
int main(void)
{
 8000618:	b580      	push	{r7, lr}
 800061a:	b082      	sub	sp, #8
 800061c:	af00      	add	r7, sp, #0
	int x=0;
 800061e:	2300      	movs	r3, #0
 8000620:	607b      	str	r3, [r7, #4]

	PIN_CINFIG Pstr ={GPIOC_U8_PORT,GPIO_U8_PIN13,GPIO_U8_OUTPUT_PUSH_PULL_10MHZ};
 8000622:	4a09      	ldr	r2, [pc, #36]	; (8000648 <main+0x30>)
 8000624:	463b      	mov	r3, r7
 8000626:	6812      	ldr	r2, [r2, #0]
 8000628:	4611      	mov	r1, r2
 800062a:	8019      	strh	r1, [r3, #0]
 800062c:	3302      	adds	r3, #2
 800062e:	0c12      	lsrs	r2, r2, #16
 8000630:	701a      	strb	r2, [r3, #0]

	sys_tictime(300000);
 8000632:	4806      	ldr	r0, [pc, #24]	; (800064c <main+0x34>)
 8000634:	f7ff ffd2 	bl	80005dc <sys_tictime>

	RCC_u8EnPripheral(GPIO_U8_PORTC_CLK);
 8000638:	2004      	movs	r0, #4
 800063a:	f7ff fd99 	bl	8000170 <RCC_u8EnPripheral>

	GPIO_voidInit(&Pstr);
 800063e:	463b      	mov	r3, r7
 8000640:	4618      	mov	r0, r3
 8000642:	f7ff fddf 	bl	8000204 <GPIO_voidInit>

	for(;;);
 8000646:	e7fe      	b.n	8000646 <main+0x2e>
 8000648:	08000704 	.word	0x08000704
 800064c:	000493e0 	.word	0x000493e0

08000650 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000650:	480d      	ldr	r0, [pc, #52]	; (8000688 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000652:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000654:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000658:	480c      	ldr	r0, [pc, #48]	; (800068c <LoopForever+0x6>)
  ldr r1, =_edata
 800065a:	490d      	ldr	r1, [pc, #52]	; (8000690 <LoopForever+0xa>)
  ldr r2, =_sidata
 800065c:	4a0d      	ldr	r2, [pc, #52]	; (8000694 <LoopForever+0xe>)
  movs r3, #0
 800065e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000660:	e002      	b.n	8000668 <LoopCopyDataInit>

08000662 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000662:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000664:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000666:	3304      	adds	r3, #4

08000668 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000668:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800066a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800066c:	d3f9      	bcc.n	8000662 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800066e:	4a0a      	ldr	r2, [pc, #40]	; (8000698 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000670:	4c0a      	ldr	r4, [pc, #40]	; (800069c <LoopForever+0x16>)
  movs r3, #0
 8000672:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000674:	e001      	b.n	800067a <LoopFillZerobss>

08000676 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000676:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000678:	3204      	adds	r2, #4

0800067a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800067a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800067c:	d3fb      	bcc.n	8000676 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800067e:	f000 f811 	bl	80006a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000682:	f7ff ffc9 	bl	8000618 <main>

08000686 <LoopForever>:

LoopForever:
    b LoopForever
 8000686:	e7fe      	b.n	8000686 <LoopForever>
  ldr   r0, =_estack
 8000688:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 800068c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000690:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000694:	08000710 	.word	0x08000710
  ldr r2, =_sbss
 8000698:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800069c:	2000001c 	.word	0x2000001c

080006a0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006a0:	e7fe      	b.n	80006a0 <ADC1_2_IRQHandler>
	...

080006a4 <__libc_init_array>:
 80006a4:	b570      	push	{r4, r5, r6, lr}
 80006a6:	2500      	movs	r5, #0
 80006a8:	4e0c      	ldr	r6, [pc, #48]	; (80006dc <__libc_init_array+0x38>)
 80006aa:	4c0d      	ldr	r4, [pc, #52]	; (80006e0 <__libc_init_array+0x3c>)
 80006ac:	1ba4      	subs	r4, r4, r6
 80006ae:	10a4      	asrs	r4, r4, #2
 80006b0:	42a5      	cmp	r5, r4
 80006b2:	d109      	bne.n	80006c8 <__libc_init_array+0x24>
 80006b4:	f000 f81a 	bl	80006ec <_init>
 80006b8:	2500      	movs	r5, #0
 80006ba:	4e0a      	ldr	r6, [pc, #40]	; (80006e4 <__libc_init_array+0x40>)
 80006bc:	4c0a      	ldr	r4, [pc, #40]	; (80006e8 <__libc_init_array+0x44>)
 80006be:	1ba4      	subs	r4, r4, r6
 80006c0:	10a4      	asrs	r4, r4, #2
 80006c2:	42a5      	cmp	r5, r4
 80006c4:	d105      	bne.n	80006d2 <__libc_init_array+0x2e>
 80006c6:	bd70      	pop	{r4, r5, r6, pc}
 80006c8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006cc:	4798      	blx	r3
 80006ce:	3501      	adds	r5, #1
 80006d0:	e7ee      	b.n	80006b0 <__libc_init_array+0xc>
 80006d2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 80006d6:	4798      	blx	r3
 80006d8:	3501      	adds	r5, #1
 80006da:	e7f2      	b.n	80006c2 <__libc_init_array+0x1e>
 80006dc:	08000708 	.word	0x08000708
 80006e0:	08000708 	.word	0x08000708
 80006e4:	08000708 	.word	0x08000708
 80006e8:	0800070c 	.word	0x0800070c

080006ec <_init>:
 80006ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006ee:	bf00      	nop
 80006f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006f2:	bc08      	pop	{r3}
 80006f4:	469e      	mov	lr, r3
 80006f6:	4770      	bx	lr

080006f8 <_fini>:
 80006f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006fa:	bf00      	nop
 80006fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80006fe:	bc08      	pop	{r3}
 8000700:	469e      	mov	lr, r3
 8000702:	4770      	bx	lr
